{"version":3,"sources":["webpack:///index.js","webpack:///webpack/bootstrap d70e183232fb4e4079be","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_duplex.js","webpack:///./~/buffer/index.js","webpack:///./~/process/browser.js","webpack:///./~/stream-browserify/index.js","webpack:///./~/core-util-is/lib/util.js","webpack:///./~/console-browserify/index.js","webpack:///./~/events/events.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_transform.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_writable.js","webpack:///./~/util/util.js","webpack:///./~/http-browserify/index.js","webpack:///./~/promise/lib/core.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_passthrough.js","webpack:///./~/stream-browserify/~/readable-stream/lib/_stream_readable.js","webpack:///./~/string_decoder/index.js","webpack:///./~/url/url.js","webpack:///./config/polyfills.js","webpack:///./~/Base64/base64.js","webpack:///./~/asap/browser-raw.js","webpack:///./~/assert/assert.js","webpack:///./src/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/date-now/index.js","webpack:///./~/fabric/dist/fabric.js","webpack:///./~/http-browserify/lib/request.js","webpack:///./~/http-browserify/lib/response.js","webpack:///./~/https-browserify/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/isarray/index.js","webpack:///./~/object-assign/index.js","webpack:///./~/promise/lib/es6-extensions.js","webpack:///./~/promise/lib/rejection-tracking.js","webpack:///./~/querystring/decode.js","webpack:///./~/querystring/encode.js","webpack:///./~/querystring/index.js","webpack:///./~/stream-browserify/~/isarray/index.js","webpack:///./~/stream-browserify/~/readable-stream/duplex.js","webpack:///./~/stream-browserify/~/readable-stream/passthrough.js","webpack:///./~/stream-browserify/~/readable-stream/readable.js","webpack:///./~/stream-browserify/~/readable-stream/transform.js","webpack:///./~/stream-browserify/~/readable-stream/writable.js","webpack:///./~/url/~/punycode/punycode.js","webpack:///./~/util/support/isBufferBrowser.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["window","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","i","Object","prototype","hasOwnProperty","_m","args","slice","fn","a","b","apply","this","concat","create","ctor","superCtor","super_","constructor","value","enumerable","writable","configurable","TempCtor","process","Duplex","options","Readable","Writable","readable","allowHalfOpen","once","onend","_writableState","ended","nextTick","end","bind","forEach","xs","f","l","length","objectKeys","keys","obj","key","push","util","inherits","method","Buffer","global","typedArraySupport","arr","Uint8Array","__proto__","foo","subarray","byteLength","e","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","actual","write","fromArrayLike","array","byteOffset","isBuffer","len","copy","buffer","isnan","type","isArray","data","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","allocUnsafeSlow","_isBuffer","compare","x","y","list","pos","swap16","swap32","swap64","arguments","equals","inspect","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","run","Item","noop","title","browser","env","argv","version","versions","on","addListener","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","umask","Stream","EE","EventEmitter","Transform","PassThrough","pipe","dest","ondata","chunk","source","pause","ondrain","resume","didOnEnd","onclose","destroy","onerror","er","cleanup","listenerCount","_isStdio","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","d","isError","isFunction","isPrimitive","o","log","info","console","warn","error","time","label","times","now","timeEnd","duration","trace","err","message","format","stack","object","consoleAssert","expression","assert","ok","functions","tuple","_events","_maxListeners","defaultMaxListeners","setMaxListeners","handler","listeners","context","listener","newListener","warned","g","fired","position","splice","evlistener","emitter","TransformState","stream","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","cb","rs","_readableState","reading","needReadable","highWaterMark","_read","sync","_flush","done","ws","_transform","_write","writeencoding","WriteReq","callback","WritableState","hwm","defaultHwm","objectMode","writableObjectMode","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","bufferProcessing","onwrite","writelen","pendingcb","prefinished","errorEmitted","writeAfterEnd","state","validChunk","valid","decodeChunk","writeOrBuffer","doWrite","writev","_writev","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","cbs","entry","prefinish","need","endWritable","cork","uncork","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","hash","idx","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","RegExp","Date","base","braces","toUTCString","output","formatArray","map","formatProperty","pop","reduceToSingleString","simple","JSON","stringify","desc","getOwnPropertyDescriptor","get","split","line","numLinesEst","reduce","prev","cur","ar","pad","timestamp","getHours","getMinutes","getSeconds","getDate","months","getMonth","prop","formatRegExp","objects","_","deprecate","msg","deprecated","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","debuglog","NODE_DEBUG","toUpperCase","test","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","date","regexp","origin","add","http","Request","url","request","params","parse","host","port","location","hostname","protocol","scheme","req","xhrHttp","Agent","defaultMaxSockets","XMLHttpRequest","ActiveXObject","axs","ax","ax_","STATUS_CODES","100","101","102","200","201","202","203","204","205","206","207","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","422","423","424","425","426","428","429","431","500","501","502","503","504","505","506","507","509","510","511","getThen","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","Promise","_45","_81","_65","_54","doResolve","safeThen","self","onFulfilled","onRejected","resolve","reject","handle","Handler","deferred","_10","handleResolved","asap","promise","newValue","finale","_97","reason","_61","ReadableState","pipes","pipesCount","flowing","endEmitted","emittedReadable","readableListening","readableObjectMode","ranOut","awaitDrain","readingMore","decoder","StringDecoder","readableAddChunk","addToFront","chunkInvalid","onEofChunk","unshift","emitReadable","maybeReadMore","needMoreData","roundUpToNextPowerOf2","MAX_HWM","howMuchToRead","debug","emitReadable_","flow","maybeReadMore_","pipeOnDrain","resumeScheduled","resume_","fromList","stringMode","shift","cpy","endReadable","setEncoding","enc","nOrig","doRead","pipeOpts","onunpipe","onfinish","unpipe","doEnd","stdout","stderr","endFn","dests","ev","wrap","paused","events","_fromList","assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available","charCode","substring","cr","Url","slashes","auth","search","query","pathname","path","href","urlParse","parseQueryString","slashesDenoteHost","u","urlFormat","urlResolve","relative","urlResolveObject","resolveObject","punycode","protocolPattern","portPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","https","ftp","gopher","file","http:","https:","ftp:","gopher:","file:","querystring","rest","proto","exec","lowerProto","hostEnd","hec","atSign","decodeURIComponent","parseHost","ipv6Hostname","hostparts","part","newpart","k","validParts","notHost","bit","domainArray","newOut","s","encode","h","ae","esc","encodeURIComponent","escape","qm","charAt","rel","result","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","last","hasTrailingSlash","up","isAbsolute","enable","assign","InvalidCharacterError","chars","btoa","input","block","atob","bs","bc","rawAsap","task","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","MutationObserver","WebKitMutationObserver","pToString","arrbuf","DataView","getName","func","functionsHaveNames","regex","truncate","something","rawname","getMessage","operator","expected","fail","stackStartFunction","AssertionError","_deepEqual","strict","memos","getTime","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","objEquiv","isArguments","actualVisitedObjects","getPrototypeOf","aIsArgs","bIsArgs","pSlice","ka","kb","sort","notDeepStrictEqual","expectedException","isPrototypeOf","_tryBlock","_throws","shouldThrow","userProvidedMessage","isUnwantedException","isUnexpectedException","hasOwn","generatedMessage","captureStackTrace","fn_name","next_line","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","strictEqual","notStrictEqual","doesNotThrow","ifError","_classCallCheck","instance","Constructor","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_fabric","fabric","originX","originY","wheel","bg","username","subscribed","winsTxt","winningsTxt","ray","Notify","width","height","widget","canvas","_this","StaticCanvas","onMessage","enqueueAnimation","render","finish","spin","calculateFromEndPoint","afterSpin","afterAnimation","_isWheel","_optionsPassThrough","_isBg","_isRay","isRunning","_this2","setHeight","setWidth","Image","fromURL","img0","setLeft","setTop","scaleToWidth","setAngle","img1","img2","img3","Text","left","top","fontFamily","fontSize","fontWeight","isResub","opacity","landOn","endAngle","random","_this3","calculatedAngle","win","animate","onChange","renderAll","easing","ease","easeOutCirc","_this4","setText","onComplete","remove","_this5","getObjects","nextInQueue","streamAction","notify","placeHoldersCount","b64","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","extraBytes","parts","maxChunkLength","len2","jsdom","createWindow","parentWindow","isTouchSupported","documentElement","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","charWidthsCache","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","_removeEventListener","eventName","__eventListeners","eventListener","stopObserving","fire","listenersForEvent","filter","Observable","trigger","Collection","_objects","_onObjectAdded","renderOnAddRemove","insertAt","nonSplicing","somethingRemoved","_onObjectRemoved","forEachObject","item","isEmpty","contains","complexity","memo","current","CommonMethods","_setOptions","_initGradient","filler","property","colorStops","Gradient","_initPattern","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","_set","sqrt","atan2","abs","PiBy180","PI","removeFromArray","getRandomInt","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","subtractEquals","v","rotateVector","Point","addEquals","vector","sin","cos","rx","ry","transformPoint","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","maxX","yPoints","minY","maxY","invertTransform","r","toFixed","fractionDigits","parseFloat","parseUnit","unit","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","camelize","resolveNamespace","loadImage","crossOrigin","img","createImage","onload","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forceAsync","klass","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","PathGroup","setSourcePath","populateWithProperties","destination","properties","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","translate","moveTo","rotate","restore","createCanvasElement","canvasEl","createElement","getContext","G_vmlCanvasManager","initElement","createAccessors","propName","capitalizedPropName","setterName","getterName","stateProperties","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","is2x2","qrDecompose","angle","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","flipX","flipY","isTransparent","tolerance","temp","_isTransparent","imageData","getImageData","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","alignX","alignY","aspectRatioAttrs","clearFabricFontCache","arcToSegments","toX","toY","large","sweep","rotateX","argsString","_join","arcToSegmentsCache","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","mDelta","mT","th3","segmentToBezier","th2","argsString2","segmentToBezierCache","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","boundsOfCurveCache","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","drawArc","fx","fy","coords","tx","ty","segs","segsNorm","bezierCurveTo","getBoundsOfArc","bound","invoke","byProperty","find","value1","value2","condition","searchElement","POSITIVE_INFINITY","NEGATIVE_INFINITY","every","some","rv","extend","deep","Element","clone","character","capitalize","firstLetterOnly","escapeXml","Dummy","thisArg","Subclass","callSuper","methodName","superclass","createClass","initialize","parent","subclasses","addMethods","emptyFunction","IS_DONTENUM_BUGGY","returnValue","valueOf","areHostMethods","methodNames","createListener","uid","wrappedHandler","createWrappedHandler","getElement","event","createDispatcher","handlers","handlersForEvent","getPointer","element","srcElement","unknown","scroll","getScrollLeftTop","pointerX","pointerY","_getPointer","pageProp","clientProp","touchProp","setElement","getUniqueId","__uniqueID","shouldUseAddListenerRemoveListener","shouldUseAttachEventDetachEvent","addEventListener","removeEventListener","attachEvent","detachEvent","existingHandler","clientX","clientY","setStyle","elementStyle","cssText","setOpacity","normalizedProperty","styleFloat","parseEl","supportsOpacity","supportsFilters","reOpacity","es","currentStyle","hasLayout","zoom","getById","getElementById","makeElement","tagName","attributes","el","className","htmlFor","setAttribute","addClass","wrapElement","wrapper","parentNode","replaceChild","appendChild","docElement","body","scrollLeft","scrollTop","nodeType","getElementStyle","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","attr","getBoundingClientRect","clientLeft","clientTop","sliceCanConvertNodelists","_slice","toArray","arrayLike","childNodes","defaultView","getComputedStyle","makeElementUnselectable","onselectstart","selectProp","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","addParamToUrl","param","emptyFn","xhr","makeXHR","parameters","open","setRequestHeader","send","factories","requestAnimFrame","abort","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","calculateColor","begin","color","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","posValue","colorEasing","normalize","asin","elastic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","normalizeAttr","attributesMap","normalizeValue","parentAttributes","transformMatrix","parseTransformAttribute","visible","_setStrokeFillOpacity","colorAttributes","setAlpha","getAlpha","toRgba","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","parseStyleString","oStyle","pair","parseStyleObject","getGlobalStylesForElement","svgUid","rule","cssRules","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","doesSomeParentMatch","selector","matcher","classNames","getAttribute","elementById","nodelist","parseUseDirectives","attrs","xlink","el2","cloneNode","currentTrans","oldLength","applyViewboxTransform","el3","nodeValue","firstChild","removeAttribute","viewBoxWidth","viewBoxHeight","matrix","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","reViewBoxTagNames","reViewBoxAttrValue","missingDimAttr","toBeParsed","parsedDim","translateMatrix","hasAncestorWithNodeName","reAllowedSVGTagNames","reNotAllowedAncestors","reAllowedParents","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","stroke","gradientDefs","rotateMatrix","multiplierX","multiplierY","skewMatrix","iMatrix","commaWsp","scale","transforms","transformList","reTransformList","reTransform","attributeValue","matrices","operation","combinedMatrix","parseSVGDocument","__uid","descendants","selectNodes","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","fontStyle","lineHeight","tagArray","elList","idsToXlinkMap","parseAttributes","ownAttributes","parseStyleAttribute","font","ElementsParser","parsePointsAttribute","parsedPoints","rules","allRules","styleContents","textContent","text","ruleObj","declaration","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","async","loadXML","results","loadSVGFromString","DOMParser","parser","parseFromString","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","instanceFillValue","gradientId","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","round","_source","toRgb","toHsl","hsl","toHsla","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherAlpha","otherSource","reRGBa","reHSLa","reHex","aqua","fuchsia","gray","lime","maroon","navy","olive","orange","purple","silver","teal","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","getLinearCoords","getRadialCoords","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","group","toLive","gradient","createLinearGradient","createRadialGradient","colorStopEls","forObject","repeat","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","BLUR_BOX","CANVAS_INIT_ERROR","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setDimensions","dimensions","cssValue","cssOnly","_setBackstoreDimension","backstoreOnly","_setCssDimension","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeGroup","_activeGroup","ingoreVpt","skipAbsolute","setCoords","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_canvasITextSelectionClearedHanlder","_mouseUpITextHandler","_iTextInstances","canvasToDrawOn","renderCanvas","_renderBackground","_renderObjects","drawControls","_renderOverlay","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","iVpt","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","background","overlay","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","_char","charIndex","fontList","_setSVGObject","sendToBack","objs","bringToFront","sendBackwards","intersecting","newIdx","_findNewLowerIndex","isIntersecting","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","BaseBrush","strokeLineCap","strokeLineJoin","strokeDashArray","setShadow","_setBrushStyles","contextTop","strokeStyle","lineWidth","lineCap","lineJoin","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","onMouseDown","pointer","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","p1","p2","midPoint","quadraticCurveTo","lineTo","convertPointsToSVGPath","createPath","pathData","Path","strokeWidth","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","Group","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","sprayChunkPoints","globalAlpha","PatternBrush","getPatternSrc","dotDistance","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","STROKE_OFFSET","Canvas","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","freeDrawingBrush","_chooseObjectsToRender","getActiveGroup","activeObject","getActiveObject","objsToRender","activeGroupObjects","contextTopDirty","renderTop","_drawSelection","_resetCurrentTransform","original","_shouldCenterTransform","action","_setOriginToCenter","mouseXSign","mouseYSign","containsPoint","xy","ignoreZoom","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","hasBorders","transparentCorners","contextCache","originalColor","selectionBackgroundColor","active","_renderControls","_shouldClearSelection","evented","selectable","centerTransform","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ey","lastX","lastY","theta","shiftKey","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","padding","_rotateObject","lastAngle","curAngle","hasRoated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","_checkTarget","_fireOverOutEvents","targets","_searchPossibleTargets","_hoveredTarget","isEditing","normalizedPointer","subTarget","subTargetCheck","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","fromEl","toEl","getSelectionContext","getSelectionElement","_setActiveObject","_activeObject","setActiveObject","_discardActiveObject","discardActiveObject","_setActiveGroup","setActiveGroup","_discardActiveGroup","discardActiveGroup","deactivateAll","allObjects","deactivateAllWithDispatch","removeListeners","removeChild","_drawObjectsControls","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","layoutProps","originalValues","realizeTransform","_setCursorFromEvent","cursorOffset","tr","mr","br","mb","bl","ml","tl","cursorMap","_bindEvents","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","__onTransformGesture","__onDrag","__onMouseWheel","__onOrientationChange","__onShake","__onLongPress","stopPropagation","preventDefault","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","searchTarget","isClick","_isCurrentlyDrawing","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","shouldRender","_maybeGroupObjects","_handleCursorAndEvent","__corner","eventType","_handleEvent","targetObj","subTargets","_scaling","_restoreOriginXY","hasStateChanged","_previousOriginX","_previousOriginY","originPoint","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","isRightClick","which","button","shouldGroup","_shouldGroup","_clearSelection","_handleGrouping","_beforeTransform","saveState","_setCenterToOrigin","touches","_transformObject","reset","_beforeScaleTransform","_performTransformAction","_fire","_onScale","currentAction","_setCornerCursor","_getRotatedCornerCursor","hasRotatingPoint","getAngle","_updateActiveGroup","_createActiveGroup","saveCoords","removeWithUpdate","addWithUpdate","_createGroup","isActiveLower","groupObjects","exitEditing","_groupSelectedObjects","_collectObjects","reverse","currentObject","selectionX1Y1","selectionX2Y2","intersectsWithRect","isContainedWithinRect","setObjectsCoords","supportQuality","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","__toDataURL","toDataURLWithMultiplier","loadFromDatalessJSON","json","loadFromJSON","serialized","_enlivenObjects","_setBgOverlay","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","strokeMiterLimit","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockRotation","lockUniScaling","statefullCache","noScaleCache","dirty","cacheProperties","propertySet","_cacheCanvas","_cacheContext","_updateCacheCanvas","_getCacheCanvasDimensions","objectScale","getObjectScaling","_getNonTransformedDimensions","retina","zoomX","zoomY","dims","cacheWidth","cacheHeight","fromLeft","_transformDone","_removeDefaultValues","scaling","shouldConstrainValue","_constrainScale","setOnGroup","sourcePath","getViewportTransform","noTransform","_setupCompositeOperation","drawSelectionBackground","_setOpacity","isCacheDirty","drawObject","drawCacheOnCanvas","_setStrokeStyles","_setFillStyles","drawImage","skipCanvas","_removeShadow","miterLimit","dashArray","alternative","drawBordersInGroup","drawBorders","multX","multY","_applyPatternGradientTransform","patternTransform","_renderFill","_renderStroke","_renderDashedStroke","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","getLeft","getTop","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","_fromObject","extraParam","originXOffset","originYOffset","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","xFull","yFull","_originalOriginX","_originalOriginY","getCoords","oCoords","multiplyMatrices","pointTL","pointBR","intersection","other","lines","_getImageLines","_findCrossPoints","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getBoundingRectWidth","getBoundingRectHeight","ignoreVpt","calcCoords","boundingRectFactor","scaleToHeight","_calculateCurrentDimensions","currentWidth","currentHeight","_angle","_hypotenuse","mtr","absoluteCoords","_setCornerCoords","_calcRotateMatrix","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","skewMatrixY","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgId","getSvgTransform","getSkewX","getSkewY","translatePart","anglePart","scalePart","skewXPart","skewYPart","addTranslateX","flipXPart","addTranslateY","flipYPart","getSvgTransformMatrix","_createBaseSVGMarkup","saveProps","tmpObj","_isEqual","origValue","currentValue","firstPass","originalSet","isVML","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","w","bbox","dimX","dimY","wh","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","coordProps","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","cp","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","_callback","isValidRadius","pi","startAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","ellipse","_initRxRy","isRounded","Polyline","Polygon","_calcDimensions","commonRender","pathOffset","addTransform","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","calcDim","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","chunks","currentPath","coordsStr","coordsParsed","command","commandLength","repeatedCommand","klen","aX","aY","deltaX","deltaY","pathUrl","paths","parseDimensionsFromPaths","xC","yC","isSameColor","pathsToObject","originalDefaults","firstPathFill","pathFill","total","pathGroup","_lockProperties","isAlreadyGrouped","originalState","_updateObjectsCoords","_calcBounds","skipCoordsChange","_updateObjectCoords","__origHasControls","objectLeft","objectTop","originalLeft","originalTop","_restoreObjectsState","_setObjectActive","delegatedProperties","textDecoration","textAlign","objsToObject","_renderObject","originalHasRotatingPoint","_restoreObjectState","_originalLeft","_originalTop","hasMoved","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","_lastScaleX","_lastScaleY","minimumScaleTrigger","filters","resizeFilters","_initElement","_element","_originalElement","_initConfig","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","filtered","getSvgSrc","origFill","_src","setSrc","imgElement","forResizing","replacement","retinaScaling","minimumScale","applyTo","toBuffer","pngCompression","elementToDraw","imageMargins","_findMargins","_needsResize","marginX","marginY","scales","_resetWidthHeight","CSS_CANVAS","_initFilters","imgOptions","preserveAR","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","BaseFilter","Brightness","brightness","putImageData","Convolute","opaque","dstOff","scx","scy","srcOff","wt","weights","pixels","side","halfSide","sw","sh","createImageData","alphaFac","GradientTransparency","Grayscale","Invert","Mask","mask","channel","maskEl","maskCanvasEl","maskImageData","maskData","Noise","noise","rand","Pixelate","blocksize","_i","_ilen","_j","_jlen","RemoveWhite","distance","Sepia","avg","Sepia2","Tint","tintR","tintG","tintB","alpha1","Multiply","Blend","mode","tg","_r","_g","_b","isImage","_el","tmpCanvas","context2","Resize","resizeType","lanczosLobes","rcpScaleX","rcpScaleY","oW","oH","dW","dH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","multW","multH","signW","signH","doneW","doneH","stepW","stepH","tmpCtx","lanczosCreate","lobes","xx","weight","fX","fY","ratioX","icenter","ratioY","range2X","cacheLanc","range2Y","lanczos","rcpRatioX","rcpRatioY","srcData","destData","destImg","srcImg","xDiff","yDiff","chnl","origPix","w4","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","ColorMatrix","Contrast","contrast","contrastF","Saturate","saturate","adjust","MIN_TEXT_WIDTH","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","__skipDimension","_initDimensions","_setTextStyles","_textLines","_splitTextIntoLines","_clearCache","_getTextWidth","cursorWidth","_getTextHeight","_renderTextLinesBackground","_renderText","_renderTextDecoration","_renderTextFill","_renderTextStroke","textBaseline","_getFontDeclaration","_getHeightOfSingleLine","_getHeightOfLine","maxWidth","_getLineWidth","currentLineWidth","_renderChars","char","shortM","additionalSpace","_getWidthOfCharSpacing","measureText","_renderTextLine","lineIndex","word","words","charOffset","wordsWidth","_getWidthOfWords","widthDiff","numSpaces","spaceWidth","leftOffset","charCount","_getLeftOffset","_getTopOffset","isEmptyStyles","_renderTextCommon","lineHeights","heightOfLine","maxHeight","_getLineLeftOffset","lineLeftOffset","lineTopOffset","originalFill","__lineWidths","__lineHeights","_shouldClearDimensionCache","shouldClear","_forceClearCache","wordCount","_measureLine","finalWidth","renderLinesAtOffset","offsets","oLen","halfOfVerticalBox","additionalProperties","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","noShadow","textBgRects","textSpans","textTopOffset","textLeftOffset","_setSVGBg","_setSVGTextLineBg","_setSVGTextLineText","yPos","_setSVGTextLineJustifed","_getFillAttributes","fillColor","textHeightScaleFactor","lineHeightDiff","scaledDiff","textHeight","offX","IText","selectionStart","selectionEnd","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","initBehavior","p3","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","getSelectionStyles","startIndex","endIndex","loc","get2DCursorLocation","_getStyleDeclaration","setSelectionStyles","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","clearContextTop","cursorOffsetCache","renderCursorOrSelection","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","getCurrentCharStyle","getCurrentCharFontSize","getCurrentCharColor","typeOfBoundaries","_getCursorBoundariesOffsets","lineLeft","topOffset","_getWidthOfChar","cursorLocation","charHeight","__isMousedown","startLine","endLine","lineOffset","realLineHeight","boxWidth","j2","j2len","_renderCharsFast","prevStyle","thisStyle","charsToRender","_hasStyleChanged","_renderChar","skipFillStrokeCheck","charWidth","shouldFill","shouldStroke","_charWidth","decl","_getHeightOfChar","_applyCharStylesGetWidth","fillText","strokeText","_renderCharDecoration","decoration","decorationWeight","positions","line-through","overline","decorations","_getWidthOfCharsAt","_getCacheProp","styleDeclaration","_getFontCache","cacheProp","charDecl","_applyFontStyles","returnCloneOrEmpty","_deleteStyleDeclaration","_deleteLineStyle","_isMeasuring","_getWidthOfSpace","currentCharHeight","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","initSelectedHandler","selected","_initCanvasHandlers","_removeCanvasHandlers","exitEditingOnOthers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","initDelayedCursor","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","getNumNewLinesInSelectedText","selectedText","numNewLines","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","initHiddenTextarea","hiddenTextarea","focus","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","inCompositionMode","_calcTextareaPosition","upperCanvas","_savedProps","_restoreEditingProps","overCursor","isTextChanged","_removeExtraneousStyles","_removeCharsFromTo","_removeSingleCharAndStyle","isBeginningOfLine","indexStyle","removeStyleObject","insertChars","_chars","useCopiedStyle","insertChar","copiedTextStyle","skipUpdate","styleObject","isEndOfLine","insertStyleObjects","insertNewlineStyleObject","shiftLineStyles","currentCharStyle","newLineStyles","insertCharStyleObject","currentLineStyles","currentLineStylesCloned","numericIndex","clonedStyles","numericLine","_removeStyleObject","_getTextOnPreviousLine","lIndex","textOnPreviousLine","newCharIndexOnPrevLine","insertNewline","setSelectionStartEndWithShift","newSelection","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","isDoubleClick","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","__mousedownX","__mousedownY","setCursorByClick","_isObjectMoved","mouseOffset","prevWidth","widthOfLine","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","cut","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","_keysMap","8","9","27","13","33","34","35","36","37","38","39","40","46","_ctrlKeysMapUp","67","88","_ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","diff","charsToInsert","offsetEnd","textLength","newTextLength","prevCompositionLength","compositionStart","forwardDelete","moveCursorRight","removeChars","clipboardData","_getClipboardData","setData","copiedText","getData","_getWidthBeforeCursor","textBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","textAfterCursor","getUpCursorOffset","foundMatch","textOnLine","widthOfCharsOnLine","indexOnLine","widthOfChar","leftEdge","rightEdge","offsetFromLeftEdge","offsetFromRightEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","_removeCharsNearCursor","leftLineBoundary","leftWordBoundary","_setSVGTextLineChars","_getSVGLineTopOffset","styleDecl","_createTextCharSpan","_createTextCharBg","lastHeight","fillStyles","Textbox","minWidth","dynamicMinWidth","__cachedLines","getTextboxControlVisibility","_generateStyleMap","realLineCount","realLineCharCount","_styleMap","_wrapText","wrapped","_wrapLine","_measureText","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","originalAlign","__oldScaleX","numLines","removed","lineLen","lineChars","getMinWidth","setObjectScaleOverridden","_refreshControlsVisibility","override","oURL","URL","reqHandler","HTTPS","HTTP","response","statusCode","errno","ECONNREFUSED","requestFs","fs","readFile","createImageAndCallBack","eval","createCanvasForNode","nodeCanvasOptions","nodeCanvas","nodeCacheCanvas","FabricCanvas","fabricCanvas","Font","originaInitStatic","createPNGStream","createJPEGStream","origSetBackstoreDimension","Response","Base64","uri","withCredentials","responseType","_headers","headers","isSafeRequestHeader","setHeader","__aborted","getHeader","removeHeader","isXHR2Compatible","unsafeHeaders","headerName","Blob","FormData","parseHeaders","getAllResponseHeaders","capable","streaming","status2","getResponse","respType","responseBlob","_emitData","respBody","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","shouldUseNative","test1","test2","order2","test3","letter","propIsEnumerable","propertyIsEnumerable","symbols","getOwnPropertySymbols","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","race","values","disable","enabled","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","_72","errStr","cls","ReferenceError","qs","sep","maxKeys","kstr","vstr","stringifyPrimitive","ks","decode","READABLE_STREAM","__WEBPACK_AMD_DEFINE_RESULT__","errors","mapDomain","regexSeparators","labels","encoded","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","basicToDigit","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","damp","baseMinusTMin","tMax","basic","oldi","baseMinusT","inputLength","initialN","bias","initialBias","delimiter","maxInt","tMin","handledCPCount","basicLength","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","freeGlobal","overflow","not-basic","invalid-input","ucs2","webpackPolyfill","children","normalizeName","iteratorFor","items","iterator","next","support","iterable","Headers","append","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","formData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","rejected","normalizeMethod","upcased","methods","credentials","referrer","form","head","pairs","header","bodyInit","statusText","fetch","getAll","has","entries","redirectStatuses","redirect","init","responseURL","getResponseHeader","ontimeout","polyfill"],"mappings":"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","file":"index.js","sourcesContent":["window[\"notify\"] =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ((function(modules) {\n\t// Check all modules for deduplicated modules\n\tfor(var i in modules) {\n\t\tif(Object.prototype.hasOwnProperty.call(modules, i)) {\n\t\t\tswitch(typeof modules[i]) {\n\t\t\tcase \"function\": break;\n\t\t\tcase \"object\":\n\t\t\t\t// Module can be created from a template\n\t\t\t\tmodules[i] = (function(_m) {\n\t\t\t\t\tvar args = _m.slice(1), fn = modules[_m[0]];\n\t\t\t\t\treturn function (a,b,c) {\n\t\t\t\t\t\tfn.apply(this, [a,b,c].concat(args));\n\t\t\t\t\t};\n\t\t\t\t}(modules[i]));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t// Module is a copy of another module\n\t\t\t\tmodules[i] = modules[modules[i]];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn modules;\n}([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(19);\n\tmodule.exports = __webpack_require__(23);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a duplex stream is just a stream that is both readable and writable.\n\t// Since JS doesn't have multiple prototypal inheritance, this class\n\t// prototypally inherits from Readable, and then parasitically from\n\t// Writable.\n\t\n\tmodule.exports = Duplex;\n\t\n\t/*<replacement>*/\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) keys.push(key);\n\t  return keys;\n\t}\n\t/*</replacement>*/\n\t\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(6);\n\tutil.inherits = __webpack_require__(1);\n\t/*</replacement>*/\n\t\n\tvar Readable = __webpack_require__(16);\n\tvar Writable = __webpack_require__(10);\n\t\n\tutil.inherits(Duplex, Readable);\n\t\n\tforEach(objectKeys(Writable.prototype), function(method) {\n\t  if (!Duplex.prototype[method])\n\t    Duplex.prototype[method] = Writable.prototype[method];\n\t});\n\t\n\tfunction Duplex(options) {\n\t  if (!(this instanceof Duplex))\n\t    return new Duplex(options);\n\t\n\t  Readable.call(this, options);\n\t  Writable.call(this, options);\n\t\n\t  if (options && options.readable === false)\n\t    this.readable = false;\n\t\n\t  if (options && options.writable === false)\n\t    this.writable = false;\n\t\n\t  this.allowHalfOpen = true;\n\t  if (options && options.allowHalfOpen === false)\n\t    this.allowHalfOpen = false;\n\t\n\t  this.once('end', onend);\n\t}\n\t\n\t// the no-half-open enforcer\n\tfunction onend() {\n\t  // if we allow half-open state, or if the writable side ended,\n\t  // then we're ok.\n\t  if (this.allowHalfOpen || this._writableState.ended)\n\t    return;\n\t\n\t  // no more data can be written.\n\t  // But allow more writes to happen in this tick.\n\t  process.nextTick(this.end.bind(this));\n\t}\n\t\n\tfunction forEach (xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(24)\n\tvar ieee754 = __webpack_require__(30)\n\tvar isArray = __webpack_require__(31)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).Buffer, (function() { return this; }())))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Stream;\n\t\n\tvar EE = __webpack_require__(8).EventEmitter;\n\tvar inherits = __webpack_require__(1);\n\t\n\tinherits(Stream, EE);\n\tStream.Readable = __webpack_require__(41);\n\tStream.Writable = __webpack_require__(43);\n\tStream.Duplex = __webpack_require__(39);\n\tStream.Transform = __webpack_require__(42);\n\tStream.PassThrough = __webpack_require__(40);\n\t\n\t// Backwards-compat with node 0.4.x\n\tStream.Stream = Stream;\n\t\n\t\n\t\n\t// old-style streams.  Note that the pipe method (the only relevant\n\t// part of this class) is overridden in the Readable class.\n\t\n\tfunction Stream() {\n\t  EE.call(this);\n\t}\n\t\n\tStream.prototype.pipe = function(dest, options) {\n\t  var source = this;\n\t\n\t  function ondata(chunk) {\n\t    if (dest.writable) {\n\t      if (false === dest.write(chunk) && source.pause) {\n\t        source.pause();\n\t      }\n\t    }\n\t  }\n\t\n\t  source.on('data', ondata);\n\t\n\t  function ondrain() {\n\t    if (source.readable && source.resume) {\n\t      source.resume();\n\t    }\n\t  }\n\t\n\t  dest.on('drain', ondrain);\n\t\n\t  // If the 'end' option is not supplied, dest.end() will be called when\n\t  // source gets the 'end' or 'close' events.  Only dest.end() once.\n\t  if (!dest._isStdio && (!options || options.end !== false)) {\n\t    source.on('end', onend);\n\t    source.on('close', onclose);\n\t  }\n\t\n\t  var didOnEnd = false;\n\t  function onend() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    dest.end();\n\t  }\n\t\n\t\n\t  function onclose() {\n\t    if (didOnEnd) return;\n\t    didOnEnd = true;\n\t\n\t    if (typeof dest.destroy === 'function') dest.destroy();\n\t  }\n\t\n\t  // don't leave dangling pipes when there are errors.\n\t  function onerror(er) {\n\t    cleanup();\n\t    if (EE.listenerCount(this, 'error') === 0) {\n\t      throw er; // Unhandled stream error in pipe.\n\t    }\n\t  }\n\t\n\t  source.on('error', onerror);\n\t  dest.on('error', onerror);\n\t\n\t  // remove all the event listeners that were added.\n\t  function cleanup() {\n\t    source.removeListener('data', ondata);\n\t    dest.removeListener('drain', ondrain);\n\t\n\t    source.removeListener('end', onend);\n\t    source.removeListener('close', onclose);\n\t\n\t    source.removeListener('error', onerror);\n\t    dest.removeListener('error', onerror);\n\t\n\t    source.removeListener('end', cleanup);\n\t    source.removeListener('close', cleanup);\n\t\n\t    dest.removeListener('close', cleanup);\n\t  }\n\t\n\t  source.on('end', cleanup);\n\t  source.on('close', cleanup);\n\t\n\t  dest.on('close', cleanup);\n\t\n\t  dest.emit('pipe', source);\n\t\n\t  // Allow for unix-like usage: A.pipe(B).pipe(C)\n\t  return dest;\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\t\n\tfunction isArray(arg) {\n\t  if (Array.isArray) {\n\t    return Array.isArray(arg);\n\t  }\n\t  return objectToString(arg) === '[object Array]';\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = Buffer.isBuffer;\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).Buffer))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*global window, global*/\n\tvar util = __webpack_require__(11)\n\tvar assert = __webpack_require__(22)\n\tvar now = __webpack_require__(25)\n\t\n\tvar slice = Array.prototype.slice\n\tvar console\n\tvar times = {}\n\t\n\tif (typeof global !== \"undefined\" && global.console) {\n\t    console = global.console\n\t} else if (typeof window !== \"undefined\" && window.console) {\n\t    console = window.console\n\t} else {\n\t    console = {}\n\t}\n\t\n\tvar functions = [\n\t    [log, \"log\"],\n\t    [info, \"info\"],\n\t    [warn, \"warn\"],\n\t    [error, \"error\"],\n\t    [time, \"time\"],\n\t    [timeEnd, \"timeEnd\"],\n\t    [trace, \"trace\"],\n\t    [dir, \"dir\"],\n\t    [consoleAssert, \"assert\"]\n\t]\n\t\n\tfor (var i = 0; i < functions.length; i++) {\n\t    var tuple = functions[i]\n\t    var f = tuple[0]\n\t    var name = tuple[1]\n\t\n\t    if (!console[name]) {\n\t        console[name] = f\n\t    }\n\t}\n\t\n\tmodule.exports = console\n\t\n\tfunction log() {}\n\t\n\tfunction info() {\n\t    console.log.apply(console, arguments)\n\t}\n\t\n\tfunction warn() {\n\t    console.log.apply(console, arguments)\n\t}\n\t\n\tfunction error() {\n\t    console.warn.apply(console, arguments)\n\t}\n\t\n\tfunction time(label) {\n\t    times[label] = now()\n\t}\n\t\n\tfunction timeEnd(label) {\n\t    var time = times[label]\n\t    if (!time) {\n\t        throw new Error(\"No such label: \" + label)\n\t    }\n\t\n\t    var duration = now() - time\n\t    console.log(label + \": \" + duration + \"ms\")\n\t}\n\t\n\tfunction trace() {\n\t    var err = new Error()\n\t    err.name = \"Trace\"\n\t    err.message = util.format.apply(null, arguments)\n\t    console.error(err.stack)\n\t}\n\t\n\tfunction dir(object) {\n\t    console.log(util.inspect(object) + \"\\n\")\n\t}\n\t\n\tfunction consoleAssert(expression) {\n\t    if (!expression) {\n\t        var arr = slice.call(arguments, 1)\n\t        assert.ok(false, util.format.apply(null, arr))\n\t    }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(console) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t\n\t// a transform stream is a readable/writable stream where you do\n\t// something with the data.  Sometimes it's called a \"filter\",\n\t// but that's not a great name for it, since that implies a thing where\n\t// some bits pass through, and others are simply ignored.  (That would\n\t// be a valid example of a transform, of course.)\n\t//\n\t// While the output is causally related to the input, it's not a\n\t// necessarily symmetric or synchronous transformation.  For example,\n\t// a zlib stream might take multiple plain-text writes(), and then\n\t// emit a single compressed chunk some time in the future.\n\t//\n\t// Here's how this works:\n\t//\n\t// The Transform stream has all the aspects of the readable and writable\n\t// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n\t// internally, and returns false if there's a lot of pending writes\n\t// buffered up.  When you call read(), that calls _read(n) until\n\t// there's enough pending readable data buffered up.\n\t//\n\t// In a transform stream, the written data is placed in a buffer.  When\n\t// _read(n) is called, it transforms the queued up data, calling the\n\t// buffered _write cb's as it consumes chunks.  If consuming a single\n\t// written chunk would result in multiple output chunks, then the first\n\t// outputted bit calls the readcb, and subsequent chunks just go into\n\t// the read buffer, and will cause it to emit 'readable' if necessary.\n\t//\n\t// This way, back-pressure is actually determined by the reading side,\n\t// since _read has to be called to start processing a new chunk.  However,\n\t// a pathological inflate type of transform can cause excessive buffering\n\t// here.  For example, imagine a stream where every byte of input is\n\t// interpreted as an integer from 0-255, and then results in that many\n\t// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n\t// 1kb of data being output.  In this case, you could write a very small\n\t// amount of input, and end up with a very large amount of output.  In\n\t// such a pathological inflating mechanism, there'd be no way to tell\n\t// the system to stop doing the transform.  A single 4MB write could\n\t// cause the system to run out of memory.\n\t//\n\t// However, even in such a pathological case, only a single written chunk\n\t// would be consumed, and then the rest would wait (un-transformed) until\n\t// the results of the previous transformed chunk were consumed.\n\t\n\tmodule.exports = Transform;\n\t\n\tvar Duplex = __webpack_require__(2);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(6);\n\tutil.inherits = __webpack_require__(1);\n\t/*</replacement>*/\n\t\n\tutil.inherits(Transform, Duplex);\n\t\n\t\n\tfunction TransformState(options, stream) {\n\t  this.afterTransform = function(er, data) {\n\t    return afterTransform(stream, er, data);\n\t  };\n\t\n\t  this.needTransform = false;\n\t  this.transforming = false;\n\t  this.writecb = null;\n\t  this.writechunk = null;\n\t}\n\t\n\tfunction afterTransform(stream, er, data) {\n\t  var ts = stream._transformState;\n\t  ts.transforming = false;\n\t\n\t  var cb = ts.writecb;\n\t\n\t  if (!cb)\n\t    return stream.emit('error', new Error('no writecb in Transform class'));\n\t\n\t  ts.writechunk = null;\n\t  ts.writecb = null;\n\t\n\t  if (!util.isNullOrUndefined(data))\n\t    stream.push(data);\n\t\n\t  if (cb)\n\t    cb(er);\n\t\n\t  var rs = stream._readableState;\n\t  rs.reading = false;\n\t  if (rs.needReadable || rs.length < rs.highWaterMark) {\n\t    stream._read(rs.highWaterMark);\n\t  }\n\t}\n\t\n\t\n\tfunction Transform(options) {\n\t  if (!(this instanceof Transform))\n\t    return new Transform(options);\n\t\n\t  Duplex.call(this, options);\n\t\n\t  this._transformState = new TransformState(options, this);\n\t\n\t  // when the writable side finishes, then flush out anything remaining.\n\t  var stream = this;\n\t\n\t  // start out asking for a readable event once data is transformed.\n\t  this._readableState.needReadable = true;\n\t\n\t  // we have implemented the _read method, and done the other things\n\t  // that Readable wants before the first _read call, so unset the\n\t  // sync guard flag.\n\t  this._readableState.sync = false;\n\t\n\t  this.once('prefinish', function() {\n\t    if (util.isFunction(this._flush))\n\t      this._flush(function(er) {\n\t        done(stream, er);\n\t      });\n\t    else\n\t      done(stream);\n\t  });\n\t}\n\t\n\tTransform.prototype.push = function(chunk, encoding) {\n\t  this._transformState.needTransform = false;\n\t  return Duplex.prototype.push.call(this, chunk, encoding);\n\t};\n\t\n\t// This is the part where you do stuff!\n\t// override this function in implementation classes.\n\t// 'chunk' is an input chunk.\n\t//\n\t// Call `push(newChunk)` to pass along transformed output\n\t// to the readable side.  You may call 'push' zero or more times.\n\t//\n\t// Call `cb(err)` when you are done with this chunk.  If you pass\n\t// an error, then that'll put the hurt on the whole operation.  If you\n\t// never call cb(), then you'll never get another chunk.\n\tTransform.prototype._transform = function(chunk, encoding, cb) {\n\t  throw new Error('not implemented');\n\t};\n\t\n\tTransform.prototype._write = function(chunk, encoding, cb) {\n\t  var ts = this._transformState;\n\t  ts.writecb = cb;\n\t  ts.writechunk = chunk;\n\t  ts.writeencoding = encoding;\n\t  if (!ts.transforming) {\n\t    var rs = this._readableState;\n\t    if (ts.needTransform ||\n\t        rs.needReadable ||\n\t        rs.length < rs.highWaterMark)\n\t      this._read(rs.highWaterMark);\n\t  }\n\t};\n\t\n\t// Doesn't matter what the args are here.\n\t// _transform does all the work.\n\t// That we got here means that the readable side wants more data.\n\tTransform.prototype._read = function(n) {\n\t  var ts = this._transformState;\n\t\n\t  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n\t    ts.transforming = true;\n\t    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n\t  } else {\n\t    // mark that we need a transform, so that any data that comes in\n\t    // will get processed, now that we've asked for it.\n\t    ts.needTransform = true;\n\t  }\n\t};\n\t\n\t\n\tfunction done(stream, er) {\n\t  if (er)\n\t    return stream.emit('error', er);\n\t\n\t  // if there's nothing in the write buffer, then that means\n\t  // that nothing more will ever be provided\n\t  var ws = stream._writableState;\n\t  var ts = stream._transformState;\n\t\n\t  if (ws.length)\n\t    throw new Error('calling transform done when ws.length != 0');\n\t\n\t  if (ts.transforming)\n\t    throw new Error('calling transform done when still transforming');\n\t\n\t  return stream.push(null);\n\t}\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// A bit simpler than readable streams.\n\t// Implement an async ._write(chunk, cb), and it'll handle all\n\t// the drain event emission and buffering.\n\t\n\tmodule.exports = Writable;\n\t\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(3).Buffer;\n\t/*</replacement>*/\n\t\n\tWritable.WritableState = WritableState;\n\t\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(6);\n\tutil.inherits = __webpack_require__(1);\n\t/*</replacement>*/\n\t\n\tvar Stream = __webpack_require__(5);\n\t\n\tutil.inherits(Writable, Stream);\n\t\n\tfunction WriteReq(chunk, encoding, cb) {\n\t  this.chunk = chunk;\n\t  this.encoding = encoding;\n\t  this.callback = cb;\n\t}\n\t\n\tfunction WritableState(options, stream) {\n\t  var Duplex = __webpack_require__(2);\n\t\n\t  options = options || {};\n\t\n\t  // the point at which write() starts returning false\n\t  // Note: 0 is a valid value, means that we always return false if\n\t  // the entire buffer is not flushed immediately on write()\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\t\n\t  // object stream flag to indicate whether or not this stream\n\t  // contains buffers or objects.\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex)\n\t    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~~this.highWaterMark;\n\t\n\t  this.needDrain = false;\n\t  // at the start of calling end()\n\t  this.ending = false;\n\t  // when end() has been called, and returned\n\t  this.ended = false;\n\t  // when 'finish' is emitted\n\t  this.finished = false;\n\t\n\t  // should we decode strings into buffers before passing to _write?\n\t  // this is here so that some node-core streams can optimize string\n\t  // handling at a lower level.\n\t  var noDecode = options.decodeStrings === false;\n\t  this.decodeStrings = !noDecode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // not an actual buffer we keep track of, but a measurement\n\t  // of how much we're waiting to get pushed to some underlying\n\t  // socket or file.\n\t  this.length = 0;\n\t\n\t  // a flag to see when we're in the middle of a write.\n\t  this.writing = false;\n\t\n\t  // when true all writes will be buffered until .uncork() call\n\t  this.corked = 0;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // a flag to know if we're processing previously buffered items, which\n\t  // may call the _write() callback in the same tick, so that we don't\n\t  // end up in an overlapped onwrite situation.\n\t  this.bufferProcessing = false;\n\t\n\t  // the callback that's passed to _write(chunk,cb)\n\t  this.onwrite = function(er) {\n\t    onwrite(stream, er);\n\t  };\n\t\n\t  // the callback that the user supplies to write(chunk,encoding,cb)\n\t  this.writecb = null;\n\t\n\t  // the amount that is being written when _write is called.\n\t  this.writelen = 0;\n\t\n\t  this.buffer = [];\n\t\n\t  // number of pending user-supplied write callbacks\n\t  // this must be 0 before 'finish' can be emitted\n\t  this.pendingcb = 0;\n\t\n\t  // emit prefinish if the only thing we're waiting for is _write cbs\n\t  // This is relevant for synchronous Transform streams\n\t  this.prefinished = false;\n\t\n\t  // True if the error was already emitted and should not be thrown again\n\t  this.errorEmitted = false;\n\t}\n\t\n\tfunction Writable(options) {\n\t  var Duplex = __webpack_require__(2);\n\t\n\t  // Writable ctor is applied to Duplexes, though they're not\n\t  // instanceof Writable, they're instanceof Readable.\n\t  if (!(this instanceof Writable) && !(this instanceof Duplex))\n\t    return new Writable(options);\n\t\n\t  this._writableState = new WritableState(options, this);\n\t\n\t  // legacy.\n\t  this.writable = true;\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Otherwise people can pipe Writable streams, which is just wrong.\n\tWritable.prototype.pipe = function() {\n\t  this.emit('error', new Error('Cannot pipe. Not readable.'));\n\t};\n\t\n\t\n\tfunction writeAfterEnd(stream, state, cb) {\n\t  var er = new Error('write after end');\n\t  // TODO: defer error events consistently everywhere, not just the cb\n\t  stream.emit('error', er);\n\t  process.nextTick(function() {\n\t    cb(er);\n\t  });\n\t}\n\t\n\t// If we get something that is not a buffer, string, null, or undefined,\n\t// and we're not in objectMode, then that's an error.\n\t// Otherwise stream chunks are all considered to be of length=1, and the\n\t// watermarks determine how many objects to keep in the buffer, rather than\n\t// how many bytes or characters.\n\tfunction validChunk(stream, state, chunk, cb) {\n\t  var valid = true;\n\t  if (!util.isBuffer(chunk) &&\n\t      !util.isString(chunk) &&\n\t      !util.isNullOrUndefined(chunk) &&\n\t      !state.objectMode) {\n\t    var er = new TypeError('Invalid non-string/buffer chunk');\n\t    stream.emit('error', er);\n\t    process.nextTick(function() {\n\t      cb(er);\n\t    });\n\t    valid = false;\n\t  }\n\t  return valid;\n\t}\n\t\n\tWritable.prototype.write = function(chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t  var ret = false;\n\t\n\t  if (util.isFunction(encoding)) {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (util.isBuffer(chunk))\n\t    encoding = 'buffer';\n\t  else if (!encoding)\n\t    encoding = state.defaultEncoding;\n\t\n\t  if (!util.isFunction(cb))\n\t    cb = function() {};\n\t\n\t  if (state.ended)\n\t    writeAfterEnd(this, state, cb);\n\t  else if (validChunk(this, state, chunk, cb)) {\n\t    state.pendingcb++;\n\t    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n\t  }\n\t\n\t  return ret;\n\t};\n\t\n\tWritable.prototype.cork = function() {\n\t  var state = this._writableState;\n\t\n\t  state.corked++;\n\t};\n\t\n\tWritable.prototype.uncork = function() {\n\t  var state = this._writableState;\n\t\n\t  if (state.corked) {\n\t    state.corked--;\n\t\n\t    if (!state.writing &&\n\t        !state.corked &&\n\t        !state.finished &&\n\t        !state.bufferProcessing &&\n\t        state.buffer.length)\n\t      clearBuffer(this, state);\n\t  }\n\t};\n\t\n\tfunction decodeChunk(state, chunk, encoding) {\n\t  if (!state.objectMode &&\n\t      state.decodeStrings !== false &&\n\t      util.isString(chunk)) {\n\t    chunk = new Buffer(chunk, encoding);\n\t  }\n\t  return chunk;\n\t}\n\t\n\t// if we're already writing something, then just put this\n\t// in the queue, and wait our turn.  Otherwise, call _write\n\t// If we return false, then we need a drain event, so set that flag.\n\tfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n\t  chunk = decodeChunk(state, chunk, encoding);\n\t  if (util.isBuffer(chunk))\n\t    encoding = 'buffer';\n\t  var len = state.objectMode ? 1 : chunk.length;\n\t\n\t  state.length += len;\n\t\n\t  var ret = state.length < state.highWaterMark;\n\t  // we must ensure that previous needDrain will not be reset to false.\n\t  if (!ret)\n\t    state.needDrain = true;\n\t\n\t  if (state.writing || state.corked)\n\t    state.buffer.push(new WriteReq(chunk, encoding, cb));\n\t  else\n\t    doWrite(stream, state, false, len, chunk, encoding, cb);\n\t\n\t  return ret;\n\t}\n\t\n\tfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n\t  state.writelen = len;\n\t  state.writecb = cb;\n\t  state.writing = true;\n\t  state.sync = true;\n\t  if (writev)\n\t    stream._writev(chunk, state.onwrite);\n\t  else\n\t    stream._write(chunk, encoding, state.onwrite);\n\t  state.sync = false;\n\t}\n\t\n\tfunction onwriteError(stream, state, sync, er, cb) {\n\t  if (sync)\n\t    process.nextTick(function() {\n\t      state.pendingcb--;\n\t      cb(er);\n\t    });\n\t  else {\n\t    state.pendingcb--;\n\t    cb(er);\n\t  }\n\t\n\t  stream._writableState.errorEmitted = true;\n\t  stream.emit('error', er);\n\t}\n\t\n\tfunction onwriteStateUpdate(state) {\n\t  state.writing = false;\n\t  state.writecb = null;\n\t  state.length -= state.writelen;\n\t  state.writelen = 0;\n\t}\n\t\n\tfunction onwrite(stream, er) {\n\t  var state = stream._writableState;\n\t  var sync = state.sync;\n\t  var cb = state.writecb;\n\t\n\t  onwriteStateUpdate(state);\n\t\n\t  if (er)\n\t    onwriteError(stream, state, sync, er, cb);\n\t  else {\n\t    // Check if we're actually ready to finish, but don't emit yet\n\t    var finished = needFinish(stream, state);\n\t\n\t    if (!finished &&\n\t        !state.corked &&\n\t        !state.bufferProcessing &&\n\t        state.buffer.length) {\n\t      clearBuffer(stream, state);\n\t    }\n\t\n\t    if (sync) {\n\t      process.nextTick(function() {\n\t        afterWrite(stream, state, finished, cb);\n\t      });\n\t    } else {\n\t      afterWrite(stream, state, finished, cb);\n\t    }\n\t  }\n\t}\n\t\n\tfunction afterWrite(stream, state, finished, cb) {\n\t  if (!finished)\n\t    onwriteDrain(stream, state);\n\t  state.pendingcb--;\n\t  cb();\n\t  finishMaybe(stream, state);\n\t}\n\t\n\t// Must force callback to be called on nextTick, so that we don't\n\t// emit 'drain' before the write() consumer gets the 'false' return\n\t// value, and has a chance to attach a 'drain' listener.\n\tfunction onwriteDrain(stream, state) {\n\t  if (state.length === 0 && state.needDrain) {\n\t    state.needDrain = false;\n\t    stream.emit('drain');\n\t  }\n\t}\n\t\n\t\n\t// if there's something in the buffer waiting, then process it\n\tfunction clearBuffer(stream, state) {\n\t  state.bufferProcessing = true;\n\t\n\t  if (stream._writev && state.buffer.length > 1) {\n\t    // Fast case, write everything using _writev()\n\t    var cbs = [];\n\t    for (var c = 0; c < state.buffer.length; c++)\n\t      cbs.push(state.buffer[c].callback);\n\t\n\t    // count the one we are adding, as well.\n\t    // TODO(isaacs) clean this up\n\t    state.pendingcb++;\n\t    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n\t      for (var i = 0; i < cbs.length; i++) {\n\t        state.pendingcb--;\n\t        cbs[i](err);\n\t      }\n\t    });\n\t\n\t    // Clear buffer\n\t    state.buffer = [];\n\t  } else {\n\t    // Slow case, write chunks one-by-one\n\t    for (var c = 0; c < state.buffer.length; c++) {\n\t      var entry = state.buffer[c];\n\t      var chunk = entry.chunk;\n\t      var encoding = entry.encoding;\n\t      var cb = entry.callback;\n\t      var len = state.objectMode ? 1 : chunk.length;\n\t\n\t      doWrite(stream, state, false, len, chunk, encoding, cb);\n\t\n\t      // if we didn't call the onwrite immediately, then\n\t      // it means that we need to wait until it does.\n\t      // also, that means that the chunk and cb are currently\n\t      // being processed, so move the buffer counter past them.\n\t      if (state.writing) {\n\t        c++;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (c < state.buffer.length)\n\t      state.buffer = state.buffer.slice(c);\n\t    else\n\t      state.buffer.length = 0;\n\t  }\n\t\n\t  state.bufferProcessing = false;\n\t}\n\t\n\tWritable.prototype._write = function(chunk, encoding, cb) {\n\t  cb(new Error('not implemented'));\n\t\n\t};\n\t\n\tWritable.prototype._writev = null;\n\t\n\tWritable.prototype.end = function(chunk, encoding, cb) {\n\t  var state = this._writableState;\n\t\n\t  if (util.isFunction(chunk)) {\n\t    cb = chunk;\n\t    chunk = null;\n\t    encoding = null;\n\t  } else if (util.isFunction(encoding)) {\n\t    cb = encoding;\n\t    encoding = null;\n\t  }\n\t\n\t  if (!util.isNullOrUndefined(chunk))\n\t    this.write(chunk, encoding);\n\t\n\t  // .end() fully uncorks\n\t  if (state.corked) {\n\t    state.corked = 1;\n\t    this.uncork();\n\t  }\n\t\n\t  // ignore unnecessary end() calls.\n\t  if (!state.ending && !state.finished)\n\t    endWritable(this, state, cb);\n\t};\n\t\n\t\n\tfunction needFinish(stream, state) {\n\t  return (state.ending &&\n\t          state.length === 0 &&\n\t          !state.finished &&\n\t          !state.writing);\n\t}\n\t\n\tfunction prefinish(stream, state) {\n\t  if (!state.prefinished) {\n\t    state.prefinished = true;\n\t    stream.emit('prefinish');\n\t  }\n\t}\n\t\n\tfunction finishMaybe(stream, state) {\n\t  var need = needFinish(stream, state);\n\t  if (need) {\n\t    if (state.pendingcb === 0) {\n\t      prefinish(stream, state);\n\t      state.finished = true;\n\t      stream.emit('finish');\n\t    } else\n\t      prefinish(stream, state);\n\t  }\n\t  return need;\n\t}\n\t\n\tfunction endWritable(stream, state, cb) {\n\t  state.ending = true;\n\t  finishMaybe(stream, state);\n\t  if (cb) {\n\t    if (state.finished)\n\t      process.nextTick(cb);\n\t    else\n\t      stream.once('finish', cb);\n\t  }\n\t  state.ended = true;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process, console) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar formatRegExp = /%[sdj%]/g;\n\texports.format = function(f) {\n\t  if (!isString(f)) {\n\t    var objects = [];\n\t    for (var i = 0; i < arguments.length; i++) {\n\t      objects.push(inspect(arguments[i]));\n\t    }\n\t    return objects.join(' ');\n\t  }\n\t\n\t  var i = 1;\n\t  var args = arguments;\n\t  var len = args.length;\n\t  var str = String(f).replace(formatRegExp, function(x) {\n\t    if (x === '%%') return '%';\n\t    if (i >= len) return x;\n\t    switch (x) {\n\t      case '%s': return String(args[i++]);\n\t      case '%d': return Number(args[i++]);\n\t      case '%j':\n\t        try {\n\t          return JSON.stringify(args[i++]);\n\t        } catch (_) {\n\t          return '[Circular]';\n\t        }\n\t      default:\n\t        return x;\n\t    }\n\t  });\n\t  for (var x = args[i]; i < len; x = args[++i]) {\n\t    if (isNull(x) || !isObject(x)) {\n\t      str += ' ' + x;\n\t    } else {\n\t      str += ' ' + inspect(x);\n\t    }\n\t  }\n\t  return str;\n\t};\n\t\n\t\n\t// Mark that a method should not be used.\n\t// Returns a modified function which warns once by default.\n\t// If --no-deprecation is set, then it is a no-op.\n\texports.deprecate = function(fn, msg) {\n\t  // Allow for deprecating things in the process of starting up.\n\t  if (isUndefined(global.process)) {\n\t    return function() {\n\t      return exports.deprecate(fn, msg).apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  if (process.noDeprecation === true) {\n\t    return fn;\n\t  }\n\t\n\t  var warned = false;\n\t  function deprecated() {\n\t    if (!warned) {\n\t      if (process.throwDeprecation) {\n\t        throw new Error(msg);\n\t      } else if (process.traceDeprecation) {\n\t        console.trace(msg);\n\t      } else {\n\t        console.error(msg);\n\t      }\n\t      warned = true;\n\t    }\n\t    return fn.apply(this, arguments);\n\t  }\n\t\n\t  return deprecated;\n\t};\n\t\n\t\n\tvar debugs = {};\n\tvar debugEnviron;\n\texports.debuglog = function(set) {\n\t  if (isUndefined(debugEnviron))\n\t    debugEnviron = process.env.NODE_DEBUG || '';\n\t  set = set.toUpperCase();\n\t  if (!debugs[set]) {\n\t    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n\t      var pid = process.pid;\n\t      debugs[set] = function() {\n\t        var msg = exports.format.apply(exports, arguments);\n\t        console.error('%s %d: %s', set, pid, msg);\n\t      };\n\t    } else {\n\t      debugs[set] = function() {};\n\t    }\n\t  }\n\t  return debugs[set];\n\t};\n\t\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Object} opts Optional options object that alters the output.\n\t */\n\t/* legacy: obj, showHidden, depth, colors*/\n\tfunction inspect(obj, opts) {\n\t  // default options\n\t  var ctx = {\n\t    seen: [],\n\t    stylize: stylizeNoColor\n\t  };\n\t  // legacy...\n\t  if (arguments.length >= 3) ctx.depth = arguments[2];\n\t  if (arguments.length >= 4) ctx.colors = arguments[3];\n\t  if (isBoolean(opts)) {\n\t    // legacy...\n\t    ctx.showHidden = opts;\n\t  } else if (opts) {\n\t    // got an \"options\" object\n\t    exports._extend(ctx, opts);\n\t  }\n\t  // set default options\n\t  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n\t  if (isUndefined(ctx.depth)) ctx.depth = 2;\n\t  if (isUndefined(ctx.colors)) ctx.colors = false;\n\t  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n\t  if (ctx.colors) ctx.stylize = stylizeWithColor;\n\t  return formatValue(ctx, obj, ctx.depth);\n\t}\n\texports.inspect = inspect;\n\t\n\t\n\t// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\tinspect.colors = {\n\t  'bold' : [1, 22],\n\t  'italic' : [3, 23],\n\t  'underline' : [4, 24],\n\t  'inverse' : [7, 27],\n\t  'white' : [37, 39],\n\t  'grey' : [90, 39],\n\t  'black' : [30, 39],\n\t  'blue' : [34, 39],\n\t  'cyan' : [36, 39],\n\t  'green' : [32, 39],\n\t  'magenta' : [35, 39],\n\t  'red' : [31, 39],\n\t  'yellow' : [33, 39]\n\t};\n\t\n\t// Don't use 'blue' not visible on cmd.exe\n\tinspect.styles = {\n\t  'special': 'cyan',\n\t  'number': 'yellow',\n\t  'boolean': 'yellow',\n\t  'undefined': 'grey',\n\t  'null': 'bold',\n\t  'string': 'green',\n\t  'date': 'magenta',\n\t  // \"name\": intentionally not styling\n\t  'regexp': 'red'\n\t};\n\t\n\t\n\tfunction stylizeWithColor(str, styleType) {\n\t  var style = inspect.styles[styleType];\n\t\n\t  if (style) {\n\t    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n\t           '\\u001b[' + inspect.colors[style][1] + 'm';\n\t  } else {\n\t    return str;\n\t  }\n\t}\n\t\n\t\n\tfunction stylizeNoColor(str, styleType) {\n\t  return str;\n\t}\n\t\n\t\n\tfunction arrayToHash(array) {\n\t  var hash = {};\n\t\n\t  array.forEach(function(val, idx) {\n\t    hash[val] = true;\n\t  });\n\t\n\t  return hash;\n\t}\n\t\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (ctx.customInspect &&\n\t      value &&\n\t      isFunction(value.inspect) &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes, ctx);\n\t    if (!isString(ret)) {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var keys = Object.keys(value);\n\t  var visibleKeys = arrayToHash(keys);\n\t\n\t  if (ctx.showHidden) {\n\t    keys = Object.getOwnPropertyNames(value);\n\t  }\n\t\n\t  // IE doesn't make error fields non-enumerable\n\t  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\t  if (isError(value)\n\t      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  if (keys.length === 0) {\n\t    if (isFunction(value)) {\n\t      var name = value.name ? ': ' + value.name : '';\n\t      return ctx.stylize('[Function' + name + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (isFunction(value)) {\n\t    var n = value.name ? ': ' + value.name : '';\n\t    base = ' [Function' + n + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    base = ' ' + formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  if (isUndefined(value))\n\t    return ctx.stylize('undefined', 'undefined');\n\t  if (isString(value)) {\n\t    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                             .replace(/'/g, \"\\\\'\")\n\t                                             .replace(/\\\\\"/g, '\"') + '\\'';\n\t    return ctx.stylize(simple, 'string');\n\t  }\n\t  if (isNumber(value))\n\t    return ctx.stylize('' + value, 'number');\n\t  if (isBoolean(value))\n\t    return ctx.stylize('' + value, 'boolean');\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (isNull(value))\n\t    return ctx.stylize('null', 'null');\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (hasOwnProperty(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str, desc;\n\t  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n\t  if (desc.get) {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Getter/Setter]', 'special');\n\t    } else {\n\t      str = ctx.stylize('[Getter]', 'special');\n\t    }\n\t  } else {\n\t    if (desc.set) {\n\t      str = ctx.stylize('[Setter]', 'special');\n\t    }\n\t  }\n\t  if (!hasOwnProperty(visibleKeys, key)) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(desc.value) < 0) {\n\t      if (isNull(recurseTimes)) {\n\t        str = formatValue(ctx, desc.value, null);\n\t      } else {\n\t        str = formatValue(ctx, desc.value, recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (isUndefined(name)) {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\t\n\t// NOTE: These type checking functions intentionally don't use `instanceof`\n\t// because it is fragile and can be easily faked with `Object.create()`.\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar);\n\t}\n\texports.isArray = isArray;\n\t\n\tfunction isBoolean(arg) {\n\t  return typeof arg === 'boolean';\n\t}\n\texports.isBoolean = isBoolean;\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\texports.isNull = isNull;\n\t\n\tfunction isNullOrUndefined(arg) {\n\t  return arg == null;\n\t}\n\texports.isNullOrUndefined = isNullOrUndefined;\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\texports.isNumber = isNumber;\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === 'string';\n\t}\n\texports.isString = isString;\n\t\n\tfunction isSymbol(arg) {\n\t  return typeof arg === 'symbol';\n\t}\n\texports.isSymbol = isSymbol;\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\texports.isUndefined = isUndefined;\n\t\n\tfunction isRegExp(re) {\n\t  return isObject(re) && objectToString(re) === '[object RegExp]';\n\t}\n\texports.isRegExp = isRegExp;\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\texports.isObject = isObject;\n\t\n\tfunction isDate(d) {\n\t  return isObject(d) && objectToString(d) === '[object Date]';\n\t}\n\texports.isDate = isDate;\n\t\n\tfunction isError(e) {\n\t  return isObject(e) &&\n\t      (objectToString(e) === '[object Error]' || e instanceof Error);\n\t}\n\texports.isError = isError;\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\texports.isFunction = isFunction;\n\t\n\tfunction isPrimitive(arg) {\n\t  return arg === null ||\n\t         typeof arg === 'boolean' ||\n\t         typeof arg === 'number' ||\n\t         typeof arg === 'string' ||\n\t         typeof arg === 'symbol' ||  // ES6 symbol\n\t         typeof arg === 'undefined';\n\t}\n\texports.isPrimitive = isPrimitive;\n\t\n\texports.isBuffer = __webpack_require__(46);\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\t\n\t\n\tfunction pad(n) {\n\t  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n\t}\n\t\n\t\n\tvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n\t              'Oct', 'Nov', 'Dec'];\n\t\n\t// 26 Feb 16:19:34\n\tfunction timestamp() {\n\t  var d = new Date();\n\t  var time = [pad(d.getHours()),\n\t              pad(d.getMinutes()),\n\t              pad(d.getSeconds())].join(':');\n\t  return [d.getDate(), months[d.getMonth()], time].join(' ');\n\t}\n\t\n\t\n\t// log is just a thin wrapper to console.log that prepends a timestamp\n\texports.log = function() {\n\t  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n\t};\n\t\n\t\n\t/**\n\t * Inherit the prototype methods from one constructor into another.\n\t *\n\t * The Function.prototype.inherits from lang.js rewritten as a standalone\n\t * function (not on Function.prototype). NOTE: If this file is to be loaded\n\t * during bootstrapping this function needs to be rewritten using some native\n\t * functions as prototype setup using normal JavaScript does not work as\n\t * expected during bootstrapping (see mirror.js in r114903).\n\t *\n\t * @param {function} ctor Constructor function which needs to inherit the\n\t *     prototype.\n\t * @param {function} superCtor Constructor function to inherit prototype from.\n\t */\n\texports.inherits = __webpack_require__(45);\n\t\n\texports._extend = function(origin, add) {\n\t  // Don't do anything if add isn't an object\n\t  if (!add || !isObject(add)) return origin;\n\t\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin;\n\t};\n\t\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(4), __webpack_require__(7)))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = module.exports;\n\tvar EventEmitter = __webpack_require__(8).EventEmitter;\n\tvar Request = __webpack_require__(27);\n\tvar url = __webpack_require__(18)\n\t\n\thttp.request = function (params, cb) {\n\t    if (typeof params === 'string') {\n\t        params = url.parse(params)\n\t    }\n\t    if (!params) params = {};\n\t    if (!params.host && !params.port) {\n\t        params.port = parseInt(window.location.port, 10);\n\t    }\n\t    if (!params.host && params.hostname) {\n\t        params.host = params.hostname;\n\t    }\n\t\n\t    if (!params.protocol) {\n\t        if (params.scheme) {\n\t            params.protocol = params.scheme + ':';\n\t        } else {\n\t            params.protocol = window.location.protocol;\n\t        }\n\t    }\n\t\n\t    if (!params.host) {\n\t        params.host = window.location.hostname || window.location.host;\n\t    }\n\t    if (/:/.test(params.host)) {\n\t        if (!params.port) {\n\t            params.port = params.host.split(':')[1];\n\t        }\n\t        params.host = params.host.split(':')[0];\n\t    }\n\t    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n\t    \n\t    var req = new Request(new xhrHttp, params);\n\t    if (cb) req.on('response', cb);\n\t    return req;\n\t};\n\t\n\thttp.get = function (params, cb) {\n\t    params.method = 'GET';\n\t    var req = http.request(params, cb);\n\t    req.end();\n\t    return req;\n\t};\n\t\n\thttp.Agent = function () {};\n\thttp.Agent.defaultMaxSockets = 4;\n\t\n\tvar xhrHttp = (function () {\n\t    if (typeof window === 'undefined') {\n\t        throw new Error('no window object present');\n\t    }\n\t    else if (window.XMLHttpRequest) {\n\t        return window.XMLHttpRequest;\n\t    }\n\t    else if (window.ActiveXObject) {\n\t        var axs = [\n\t            'Msxml2.XMLHTTP.6.0',\n\t            'Msxml2.XMLHTTP.3.0',\n\t            'Microsoft.XMLHTTP'\n\t        ];\n\t        for (var i = 0; i < axs.length; i++) {\n\t            try {\n\t                var ax = new(window.ActiveXObject)(axs[i]);\n\t                return function () {\n\t                    if (ax) {\n\t                        var ax_ = ax;\n\t                        ax = null;\n\t                        return ax_;\n\t                    }\n\t                    else {\n\t                        return new(window.ActiveXObject)(axs[i]);\n\t                    }\n\t                };\n\t            }\n\t            catch (e) {}\n\t        }\n\t        throw new Error('ajax not supported in this browser')\n\t    }\n\t    else {\n\t        throw new Error('ajax not supported in this browser');\n\t    }\n\t})();\n\t\n\thttp.STATUS_CODES = {\n\t    100 : 'Continue',\n\t    101 : 'Switching Protocols',\n\t    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n\t    200 : 'OK',\n\t    201 : 'Created',\n\t    202 : 'Accepted',\n\t    203 : 'Non-Authoritative Information',\n\t    204 : 'No Content',\n\t    205 : 'Reset Content',\n\t    206 : 'Partial Content',\n\t    207 : 'Multi-Status',               // RFC 4918\n\t    300 : 'Multiple Choices',\n\t    301 : 'Moved Permanently',\n\t    302 : 'Moved Temporarily',\n\t    303 : 'See Other',\n\t    304 : 'Not Modified',\n\t    305 : 'Use Proxy',\n\t    307 : 'Temporary Redirect',\n\t    400 : 'Bad Request',\n\t    401 : 'Unauthorized',\n\t    402 : 'Payment Required',\n\t    403 : 'Forbidden',\n\t    404 : 'Not Found',\n\t    405 : 'Method Not Allowed',\n\t    406 : 'Not Acceptable',\n\t    407 : 'Proxy Authentication Required',\n\t    408 : 'Request Time-out',\n\t    409 : 'Conflict',\n\t    410 : 'Gone',\n\t    411 : 'Length Required',\n\t    412 : 'Precondition Failed',\n\t    413 : 'Request Entity Too Large',\n\t    414 : 'Request-URI Too Large',\n\t    415 : 'Unsupported Media Type',\n\t    416 : 'Requested Range Not Satisfiable',\n\t    417 : 'Expectation Failed',\n\t    418 : 'I\\'m a teapot',              // RFC 2324\n\t    422 : 'Unprocessable Entity',       // RFC 4918\n\t    423 : 'Locked',                     // RFC 4918\n\t    424 : 'Failed Dependency',          // RFC 4918\n\t    425 : 'Unordered Collection',       // RFC 4918\n\t    426 : 'Upgrade Required',           // RFC 2817\n\t    428 : 'Precondition Required',      // RFC 6585\n\t    429 : 'Too Many Requests',          // RFC 6585\n\t    431 : 'Request Header Fields Too Large',// RFC 6585\n\t    500 : 'Internal Server Error',\n\t    501 : 'Not Implemented',\n\t    502 : 'Bad Gateway',\n\t    503 : 'Service Unavailable',\n\t    504 : 'Gateway Time-out',\n\t    505 : 'HTTP Version Not Supported',\n\t    506 : 'Variant Also Negotiates',    // RFC 2295\n\t    507 : 'Insufficient Storage',       // RFC 4918\n\t    509 : 'Bandwidth Limit Exceeded',\n\t    510 : 'Not Extended',               // RFC 2774\n\t    511 : 'Network Authentication Required' // RFC 6585\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(21);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// a passthrough stream.\n\t// basically just the most minimal sort of Transform stream.\n\t// Every written chunk gets output as-is.\n\t\n\tmodule.exports = PassThrough;\n\t\n\tvar Transform = __webpack_require__(9);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(6);\n\tutil.inherits = __webpack_require__(1);\n\t/*</replacement>*/\n\t\n\tutil.inherits(PassThrough, Transform);\n\t\n\tfunction PassThrough(options) {\n\t  if (!(this instanceof PassThrough))\n\t    return new PassThrough(options);\n\t\n\t  Transform.call(this, options);\n\t}\n\t\n\tPassThrough.prototype._transform = function(chunk, encoding, cb) {\n\t  cb(null, chunk);\n\t};\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tmodule.exports = Readable;\n\t\n\t/*<replacement>*/\n\tvar isArray = __webpack_require__(38);\n\t/*</replacement>*/\n\t\n\t\n\t/*<replacement>*/\n\tvar Buffer = __webpack_require__(3).Buffer;\n\t/*</replacement>*/\n\t\n\tReadable.ReadableState = ReadableState;\n\t\n\tvar EE = __webpack_require__(8).EventEmitter;\n\t\n\t/*<replacement>*/\n\tif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n\t  return emitter.listeners(type).length;\n\t};\n\t/*</replacement>*/\n\t\n\tvar Stream = __webpack_require__(5);\n\t\n\t/*<replacement>*/\n\tvar util = __webpack_require__(6);\n\tutil.inherits = __webpack_require__(1);\n\t/*</replacement>*/\n\t\n\tvar StringDecoder;\n\t\n\t\n\t/*<replacement>*/\n\tvar debug = __webpack_require__(52);\n\tif (debug && debug.debuglog) {\n\t  debug = debug.debuglog('stream');\n\t} else {\n\t  debug = function () {};\n\t}\n\t/*</replacement>*/\n\t\n\t\n\tutil.inherits(Readable, Stream);\n\t\n\tfunction ReadableState(options, stream) {\n\t  var Duplex = __webpack_require__(2);\n\t\n\t  options = options || {};\n\t\n\t  // the point at which it stops calling _read() to fill the buffer\n\t  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\t  var hwm = options.highWaterMark;\n\t  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n\t  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\t\n\t  // cast to ints.\n\t  this.highWaterMark = ~~this.highWaterMark;\n\t\n\t  this.buffer = [];\n\t  this.length = 0;\n\t  this.pipes = null;\n\t  this.pipesCount = 0;\n\t  this.flowing = null;\n\t  this.ended = false;\n\t  this.endEmitted = false;\n\t  this.reading = false;\n\t\n\t  // a flag to be able to tell if the onwrite cb is called immediately,\n\t  // or on a later tick.  We set this to true at first, because any\n\t  // actions that shouldn't happen until \"later\" should generally also\n\t  // not happen before the first write call.\n\t  this.sync = true;\n\t\n\t  // whenever we return null, then we set a flag to say\n\t  // that we're awaiting a 'readable' event emission.\n\t  this.needReadable = false;\n\t  this.emittedReadable = false;\n\t  this.readableListening = false;\n\t\n\t\n\t  // object stream flag. Used to make read(n) ignore n and to\n\t  // make all the buffer merging and length checks go away\n\t  this.objectMode = !!options.objectMode;\n\t\n\t  if (stream instanceof Duplex)\n\t    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\t\n\t  // Crypto is kind of old and crusty.  Historically, its default string\n\t  // encoding is 'binary' so we have to make this configurable.\n\t  // Everything else in the universe uses 'utf8', though.\n\t  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\t\n\t  // when piping, we only care about 'readable' events that happen\n\t  // after read()ing all the bytes and not getting any pushback.\n\t  this.ranOut = false;\n\t\n\t  // the number of writers that are awaiting a drain event in .pipe()s\n\t  this.awaitDrain = 0;\n\t\n\t  // if true, a maybeReadMore has been scheduled\n\t  this.readingMore = false;\n\t\n\t  this.decoder = null;\n\t  this.encoding = null;\n\t  if (options.encoding) {\n\t    if (!StringDecoder)\n\t      StringDecoder = __webpack_require__(17).StringDecoder;\n\t    this.decoder = new StringDecoder(options.encoding);\n\t    this.encoding = options.encoding;\n\t  }\n\t}\n\t\n\tfunction Readable(options) {\n\t  var Duplex = __webpack_require__(2);\n\t\n\t  if (!(this instanceof Readable))\n\t    return new Readable(options);\n\t\n\t  this._readableState = new ReadableState(options, this);\n\t\n\t  // legacy\n\t  this.readable = true;\n\t\n\t  Stream.call(this);\n\t}\n\t\n\t// Manually shove something into the read() buffer.\n\t// This returns true if the highWaterMark has not been hit yet,\n\t// similar to how Writable.write() returns true if you should\n\t// write() some more.\n\tReadable.prototype.push = function(chunk, encoding) {\n\t  var state = this._readableState;\n\t\n\t  if (util.isString(chunk) && !state.objectMode) {\n\t    encoding = encoding || state.defaultEncoding;\n\t    if (encoding !== state.encoding) {\n\t      chunk = new Buffer(chunk, encoding);\n\t      encoding = '';\n\t    }\n\t  }\n\t\n\t  return readableAddChunk(this, state, chunk, encoding, false);\n\t};\n\t\n\t// Unshift should *always* be something directly out of read()\n\tReadable.prototype.unshift = function(chunk) {\n\t  var state = this._readableState;\n\t  return readableAddChunk(this, state, chunk, '', true);\n\t};\n\t\n\tfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n\t  var er = chunkInvalid(state, chunk);\n\t  if (er) {\n\t    stream.emit('error', er);\n\t  } else if (util.isNullOrUndefined(chunk)) {\n\t    state.reading = false;\n\t    if (!state.ended)\n\t      onEofChunk(stream, state);\n\t  } else if (state.objectMode || chunk && chunk.length > 0) {\n\t    if (state.ended && !addToFront) {\n\t      var e = new Error('stream.push() after EOF');\n\t      stream.emit('error', e);\n\t    } else if (state.endEmitted && addToFront) {\n\t      var e = new Error('stream.unshift() after end event');\n\t      stream.emit('error', e);\n\t    } else {\n\t      if (state.decoder && !addToFront && !encoding)\n\t        chunk = state.decoder.write(chunk);\n\t\n\t      if (!addToFront)\n\t        state.reading = false;\n\t\n\t      // if we want the data now, just emit it.\n\t      if (state.flowing && state.length === 0 && !state.sync) {\n\t        stream.emit('data', chunk);\n\t        stream.read(0);\n\t      } else {\n\t        // update the buffer info.\n\t        state.length += state.objectMode ? 1 : chunk.length;\n\t        if (addToFront)\n\t          state.buffer.unshift(chunk);\n\t        else\n\t          state.buffer.push(chunk);\n\t\n\t        if (state.needReadable)\n\t          emitReadable(stream);\n\t      }\n\t\n\t      maybeReadMore(stream, state);\n\t    }\n\t  } else if (!addToFront) {\n\t    state.reading = false;\n\t  }\n\t\n\t  return needMoreData(state);\n\t}\n\t\n\t\n\t\n\t// if it's past the high water mark, we can push in some more.\n\t// Also, if we have no data yet, we can stand some\n\t// more bytes.  This is to work around cases where hwm=0,\n\t// such as the repl.  Also, if the push() triggered a\n\t// readable event, and the user called read(largeNumber) such that\n\t// needReadable was set, then we ought to push more, so that another\n\t// 'readable' event will be triggered.\n\tfunction needMoreData(state) {\n\t  return !state.ended &&\n\t         (state.needReadable ||\n\t          state.length < state.highWaterMark ||\n\t          state.length === 0);\n\t}\n\t\n\t// backwards compatibility.\n\tReadable.prototype.setEncoding = function(enc) {\n\t  if (!StringDecoder)\n\t    StringDecoder = __webpack_require__(17).StringDecoder;\n\t  this._readableState.decoder = new StringDecoder(enc);\n\t  this._readableState.encoding = enc;\n\t  return this;\n\t};\n\t\n\t// Don't raise the hwm > 128MB\n\tvar MAX_HWM = 0x800000;\n\tfunction roundUpToNextPowerOf2(n) {\n\t  if (n >= MAX_HWM) {\n\t    n = MAX_HWM;\n\t  } else {\n\t    // Get the next highest power of 2\n\t    n--;\n\t    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n\t    n++;\n\t  }\n\t  return n;\n\t}\n\t\n\tfunction howMuchToRead(n, state) {\n\t  if (state.length === 0 && state.ended)\n\t    return 0;\n\t\n\t  if (state.objectMode)\n\t    return n === 0 ? 0 : 1;\n\t\n\t  if (isNaN(n) || util.isNull(n)) {\n\t    // only flow one buffer at a time\n\t    if (state.flowing && state.buffer.length)\n\t      return state.buffer[0].length;\n\t    else\n\t      return state.length;\n\t  }\n\t\n\t  if (n <= 0)\n\t    return 0;\n\t\n\t  // If we're asking for more than the target buffer level,\n\t  // then raise the water mark.  Bump up to the next highest\n\t  // power of 2, to prevent increasing it excessively in tiny\n\t  // amounts.\n\t  if (n > state.highWaterMark)\n\t    state.highWaterMark = roundUpToNextPowerOf2(n);\n\t\n\t  // don't have that much.  return null, unless we've ended.\n\t  if (n > state.length) {\n\t    if (!state.ended) {\n\t      state.needReadable = true;\n\t      return 0;\n\t    } else\n\t      return state.length;\n\t  }\n\t\n\t  return n;\n\t}\n\t\n\t// you can override either this method, or the async _read(n) below.\n\tReadable.prototype.read = function(n) {\n\t  debug('read', n);\n\t  var state = this._readableState;\n\t  var nOrig = n;\n\t\n\t  if (!util.isNumber(n) || n > 0)\n\t    state.emittedReadable = false;\n\t\n\t  // if we're doing read(0) to trigger a readable event, but we\n\t  // already have a bunch of data in the buffer, then just trigger\n\t  // the 'readable' event and move on.\n\t  if (n === 0 &&\n\t      state.needReadable &&\n\t      (state.length >= state.highWaterMark || state.ended)) {\n\t    debug('read: emitReadable', state.length, state.ended);\n\t    if (state.length === 0 && state.ended)\n\t      endReadable(this);\n\t    else\n\t      emitReadable(this);\n\t    return null;\n\t  }\n\t\n\t  n = howMuchToRead(n, state);\n\t\n\t  // if we've ended, and we're now clear, then finish it up.\n\t  if (n === 0 && state.ended) {\n\t    if (state.length === 0)\n\t      endReadable(this);\n\t    return null;\n\t  }\n\t\n\t  // All the actual chunk generation logic needs to be\n\t  // *below* the call to _read.  The reason is that in certain\n\t  // synthetic stream cases, such as passthrough streams, _read\n\t  // may be a completely synchronous operation which may change\n\t  // the state of the read buffer, providing enough data when\n\t  // before there was *not* enough.\n\t  //\n\t  // So, the steps are:\n\t  // 1. Figure out what the state of things will be after we do\n\t  // a read from the buffer.\n\t  //\n\t  // 2. If that resulting state will trigger a _read, then call _read.\n\t  // Note that this may be asynchronous, or synchronous.  Yes, it is\n\t  // deeply ugly to write APIs this way, but that still doesn't mean\n\t  // that the Readable class should behave improperly, as streams are\n\t  // designed to be sync/async agnostic.\n\t  // Take note if the _read call is sync or async (ie, if the read call\n\t  // has returned yet), so that we know whether or not it's safe to emit\n\t  // 'readable' etc.\n\t  //\n\t  // 3. Actually pull the requested chunks out of the buffer and return.\n\t\n\t  // if we need a readable event, then we need to do some reading.\n\t  var doRead = state.needReadable;\n\t  debug('need readable', doRead);\n\t\n\t  // if we currently have less than the highWaterMark, then also read some\n\t  if (state.length === 0 || state.length - n < state.highWaterMark) {\n\t    doRead = true;\n\t    debug('length less than watermark', doRead);\n\t  }\n\t\n\t  // however, if we've ended, then there's no point, and if we're already\n\t  // reading, then it's unnecessary.\n\t  if (state.ended || state.reading) {\n\t    doRead = false;\n\t    debug('reading or ended', doRead);\n\t  }\n\t\n\t  if (doRead) {\n\t    debug('do read');\n\t    state.reading = true;\n\t    state.sync = true;\n\t    // if the length is currently zero, then we *need* a readable event.\n\t    if (state.length === 0)\n\t      state.needReadable = true;\n\t    // call internal read method\n\t    this._read(state.highWaterMark);\n\t    state.sync = false;\n\t  }\n\t\n\t  // If _read pushed data synchronously, then `reading` will be false,\n\t  // and we need to re-evaluate how much data we can return to the user.\n\t  if (doRead && !state.reading)\n\t    n = howMuchToRead(nOrig, state);\n\t\n\t  var ret;\n\t  if (n > 0)\n\t    ret = fromList(n, state);\n\t  else\n\t    ret = null;\n\t\n\t  if (util.isNull(ret)) {\n\t    state.needReadable = true;\n\t    n = 0;\n\t  }\n\t\n\t  state.length -= n;\n\t\n\t  // If we have nothing in the buffer, then we want to know\n\t  // as soon as we *do* get something into the buffer.\n\t  if (state.length === 0 && !state.ended)\n\t    state.needReadable = true;\n\t\n\t  // If we tried to read() past the EOF, then emit end on the next tick.\n\t  if (nOrig !== n && state.ended && state.length === 0)\n\t    endReadable(this);\n\t\n\t  if (!util.isNull(ret))\n\t    this.emit('data', ret);\n\t\n\t  return ret;\n\t};\n\t\n\tfunction chunkInvalid(state, chunk) {\n\t  var er = null;\n\t  if (!util.isBuffer(chunk) &&\n\t      !util.isString(chunk) &&\n\t      !util.isNullOrUndefined(chunk) &&\n\t      !state.objectMode) {\n\t    er = new TypeError('Invalid non-string/buffer chunk');\n\t  }\n\t  return er;\n\t}\n\t\n\t\n\tfunction onEofChunk(stream, state) {\n\t  if (state.decoder && !state.ended) {\n\t    var chunk = state.decoder.end();\n\t    if (chunk && chunk.length) {\n\t      state.buffer.push(chunk);\n\t      state.length += state.objectMode ? 1 : chunk.length;\n\t    }\n\t  }\n\t  state.ended = true;\n\t\n\t  // emit 'readable' now to make sure it gets picked up.\n\t  emitReadable(stream);\n\t}\n\t\n\t// Don't emit readable right away in sync mode, because this can trigger\n\t// another read() call => stack overflow.  This way, it might trigger\n\t// a nextTick recursion warning, but that's not so bad.\n\tfunction emitReadable(stream) {\n\t  var state = stream._readableState;\n\t  state.needReadable = false;\n\t  if (!state.emittedReadable) {\n\t    debug('emitReadable', state.flowing);\n\t    state.emittedReadable = true;\n\t    if (state.sync)\n\t      process.nextTick(function() {\n\t        emitReadable_(stream);\n\t      });\n\t    else\n\t      emitReadable_(stream);\n\t  }\n\t}\n\t\n\tfunction emitReadable_(stream) {\n\t  debug('emit readable');\n\t  stream.emit('readable');\n\t  flow(stream);\n\t}\n\t\n\t\n\t// at this point, the user has presumably seen the 'readable' event,\n\t// and called read() to consume some data.  that may have triggered\n\t// in turn another _read(n) call, in which case reading = true if\n\t// it's in progress.\n\t// However, if we're not ended, or reading, and the length < hwm,\n\t// then go ahead and try to read some more preemptively.\n\tfunction maybeReadMore(stream, state) {\n\t  if (!state.readingMore) {\n\t    state.readingMore = true;\n\t    process.nextTick(function() {\n\t      maybeReadMore_(stream, state);\n\t    });\n\t  }\n\t}\n\t\n\tfunction maybeReadMore_(stream, state) {\n\t  var len = state.length;\n\t  while (!state.reading && !state.flowing && !state.ended &&\n\t         state.length < state.highWaterMark) {\n\t    debug('maybeReadMore read 0');\n\t    stream.read(0);\n\t    if (len === state.length)\n\t      // didn't get any data, stop spinning.\n\t      break;\n\t    else\n\t      len = state.length;\n\t  }\n\t  state.readingMore = false;\n\t}\n\t\n\t// abstract method.  to be overridden in specific implementation classes.\n\t// call cb(er, data) where data is <= n in length.\n\t// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n\t// arbitrary, and perhaps not very meaningful.\n\tReadable.prototype._read = function(n) {\n\t  this.emit('error', new Error('not implemented'));\n\t};\n\t\n\tReadable.prototype.pipe = function(dest, pipeOpts) {\n\t  var src = this;\n\t  var state = this._readableState;\n\t\n\t  switch (state.pipesCount) {\n\t    case 0:\n\t      state.pipes = dest;\n\t      break;\n\t    case 1:\n\t      state.pipes = [state.pipes, dest];\n\t      break;\n\t    default:\n\t      state.pipes.push(dest);\n\t      break;\n\t  }\n\t  state.pipesCount += 1;\n\t  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\t\n\t  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n\t              dest !== process.stdout &&\n\t              dest !== process.stderr;\n\t\n\t  var endFn = doEnd ? onend : cleanup;\n\t  if (state.endEmitted)\n\t    process.nextTick(endFn);\n\t  else\n\t    src.once('end', endFn);\n\t\n\t  dest.on('unpipe', onunpipe);\n\t  function onunpipe(readable) {\n\t    debug('onunpipe');\n\t    if (readable === src) {\n\t      cleanup();\n\t    }\n\t  }\n\t\n\t  function onend() {\n\t    debug('onend');\n\t    dest.end();\n\t  }\n\t\n\t  // when the dest drains, it reduces the awaitDrain counter\n\t  // on the source.  This would be more elegant with a .once()\n\t  // handler in flow(), but adding and removing repeatedly is\n\t  // too slow.\n\t  var ondrain = pipeOnDrain(src);\n\t  dest.on('drain', ondrain);\n\t\n\t  function cleanup() {\n\t    debug('cleanup');\n\t    // cleanup event handlers once the pipe is broken\n\t    dest.removeListener('close', onclose);\n\t    dest.removeListener('finish', onfinish);\n\t    dest.removeListener('drain', ondrain);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('unpipe', onunpipe);\n\t    src.removeListener('end', onend);\n\t    src.removeListener('end', cleanup);\n\t    src.removeListener('data', ondata);\n\t\n\t    // if the reader is waiting for a drain event from this\n\t    // specific writer, then it would cause it to never start\n\t    // flowing again.\n\t    // So, if this is awaiting a drain, then we just call it now.\n\t    // If we don't know, then assume that we are waiting for one.\n\t    if (state.awaitDrain &&\n\t        (!dest._writableState || dest._writableState.needDrain))\n\t      ondrain();\n\t  }\n\t\n\t  src.on('data', ondata);\n\t  function ondata(chunk) {\n\t    debug('ondata');\n\t    var ret = dest.write(chunk);\n\t    if (false === ret) {\n\t      debug('false write response, pause',\n\t            src._readableState.awaitDrain);\n\t      src._readableState.awaitDrain++;\n\t      src.pause();\n\t    }\n\t  }\n\t\n\t  // if the dest has an error, then stop piping into it.\n\t  // however, don't suppress the throwing behavior for this.\n\t  function onerror(er) {\n\t    debug('onerror', er);\n\t    unpipe();\n\t    dest.removeListener('error', onerror);\n\t    if (EE.listenerCount(dest, 'error') === 0)\n\t      dest.emit('error', er);\n\t  }\n\t  // This is a brutally ugly hack to make sure that our error handler\n\t  // is attached before any userland ones.  NEVER DO THIS.\n\t  if (!dest._events || !dest._events.error)\n\t    dest.on('error', onerror);\n\t  else if (isArray(dest._events.error))\n\t    dest._events.error.unshift(onerror);\n\t  else\n\t    dest._events.error = [onerror, dest._events.error];\n\t\n\t\n\t\n\t  // Both close and finish should trigger unpipe, but only once.\n\t  function onclose() {\n\t    dest.removeListener('finish', onfinish);\n\t    unpipe();\n\t  }\n\t  dest.once('close', onclose);\n\t  function onfinish() {\n\t    debug('onfinish');\n\t    dest.removeListener('close', onclose);\n\t    unpipe();\n\t  }\n\t  dest.once('finish', onfinish);\n\t\n\t  function unpipe() {\n\t    debug('unpipe');\n\t    src.unpipe(dest);\n\t  }\n\t\n\t  // tell the dest that it's being piped to\n\t  dest.emit('pipe', src);\n\t\n\t  // start the flow if it hasn't been started already.\n\t  if (!state.flowing) {\n\t    debug('pipe resume');\n\t    src.resume();\n\t  }\n\t\n\t  return dest;\n\t};\n\t\n\tfunction pipeOnDrain(src) {\n\t  return function() {\n\t    var state = src._readableState;\n\t    debug('pipeOnDrain', state.awaitDrain);\n\t    if (state.awaitDrain)\n\t      state.awaitDrain--;\n\t    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n\t      state.flowing = true;\n\t      flow(src);\n\t    }\n\t  };\n\t}\n\t\n\t\n\tReadable.prototype.unpipe = function(dest) {\n\t  var state = this._readableState;\n\t\n\t  // if we're not piping anywhere, then do nothing.\n\t  if (state.pipesCount === 0)\n\t    return this;\n\t\n\t  // just one destination.  most common case.\n\t  if (state.pipesCount === 1) {\n\t    // passed in one, but it's not the right one.\n\t    if (dest && dest !== state.pipes)\n\t      return this;\n\t\n\t    if (!dest)\n\t      dest = state.pipes;\n\t\n\t    // got a match.\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t    if (dest)\n\t      dest.emit('unpipe', this);\n\t    return this;\n\t  }\n\t\n\t  // slow case. multiple pipe destinations.\n\t\n\t  if (!dest) {\n\t    // remove all.\n\t    var dests = state.pipes;\n\t    var len = state.pipesCount;\n\t    state.pipes = null;\n\t    state.pipesCount = 0;\n\t    state.flowing = false;\n\t\n\t    for (var i = 0; i < len; i++)\n\t      dests[i].emit('unpipe', this);\n\t    return this;\n\t  }\n\t\n\t  // try to find the right one.\n\t  var i = indexOf(state.pipes, dest);\n\t  if (i === -1)\n\t    return this;\n\t\n\t  state.pipes.splice(i, 1);\n\t  state.pipesCount -= 1;\n\t  if (state.pipesCount === 1)\n\t    state.pipes = state.pipes[0];\n\t\n\t  dest.emit('unpipe', this);\n\t\n\t  return this;\n\t};\n\t\n\t// set up data events if they are asked for\n\t// Ensure readable listeners eventually get something\n\tReadable.prototype.on = function(ev, fn) {\n\t  var res = Stream.prototype.on.call(this, ev, fn);\n\t\n\t  // If listening to data, and it has not explicitly been paused,\n\t  // then call resume to start the flow of data on the next tick.\n\t  if (ev === 'data' && false !== this._readableState.flowing) {\n\t    this.resume();\n\t  }\n\t\n\t  if (ev === 'readable' && this.readable) {\n\t    var state = this._readableState;\n\t    if (!state.readableListening) {\n\t      state.readableListening = true;\n\t      state.emittedReadable = false;\n\t      state.needReadable = true;\n\t      if (!state.reading) {\n\t        var self = this;\n\t        process.nextTick(function() {\n\t          debug('readable nexttick read 0');\n\t          self.read(0);\n\t        });\n\t      } else if (state.length) {\n\t        emitReadable(this, state);\n\t      }\n\t    }\n\t  }\n\t\n\t  return res;\n\t};\n\tReadable.prototype.addListener = Readable.prototype.on;\n\t\n\t// pause() and resume() are remnants of the legacy readable stream API\n\t// If the user uses them, then switch into old mode.\n\tReadable.prototype.resume = function() {\n\t  var state = this._readableState;\n\t  if (!state.flowing) {\n\t    debug('resume');\n\t    state.flowing = true;\n\t    if (!state.reading) {\n\t      debug('resume read 0');\n\t      this.read(0);\n\t    }\n\t    resume(this, state);\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction resume(stream, state) {\n\t  if (!state.resumeScheduled) {\n\t    state.resumeScheduled = true;\n\t    process.nextTick(function() {\n\t      resume_(stream, state);\n\t    });\n\t  }\n\t}\n\t\n\tfunction resume_(stream, state) {\n\t  state.resumeScheduled = false;\n\t  stream.emit('resume');\n\t  flow(stream);\n\t  if (state.flowing && !state.reading)\n\t    stream.read(0);\n\t}\n\t\n\tReadable.prototype.pause = function() {\n\t  debug('call pause flowing=%j', this._readableState.flowing);\n\t  if (false !== this._readableState.flowing) {\n\t    debug('pause');\n\t    this._readableState.flowing = false;\n\t    this.emit('pause');\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction flow(stream) {\n\t  var state = stream._readableState;\n\t  debug('flow', state.flowing);\n\t  if (state.flowing) {\n\t    do {\n\t      var chunk = stream.read();\n\t    } while (null !== chunk && state.flowing);\n\t  }\n\t}\n\t\n\t// wrap an old-style stream as the async data source.\n\t// This is *not* part of the readable stream interface.\n\t// It is an ugly unfortunate mess of history.\n\tReadable.prototype.wrap = function(stream) {\n\t  var state = this._readableState;\n\t  var paused = false;\n\t\n\t  var self = this;\n\t  stream.on('end', function() {\n\t    debug('wrapped end');\n\t    if (state.decoder && !state.ended) {\n\t      var chunk = state.decoder.end();\n\t      if (chunk && chunk.length)\n\t        self.push(chunk);\n\t    }\n\t\n\t    self.push(null);\n\t  });\n\t\n\t  stream.on('data', function(chunk) {\n\t    debug('wrapped data');\n\t    if (state.decoder)\n\t      chunk = state.decoder.write(chunk);\n\t    if (!chunk || !state.objectMode && !chunk.length)\n\t      return;\n\t\n\t    var ret = self.push(chunk);\n\t    if (!ret) {\n\t      paused = true;\n\t      stream.pause();\n\t    }\n\t  });\n\t\n\t  // proxy all the other methods.\n\t  // important when wrapping filters and duplexes.\n\t  for (var i in stream) {\n\t    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n\t      this[i] = function(method) { return function() {\n\t        return stream[method].apply(stream, arguments);\n\t      }}(i);\n\t    }\n\t  }\n\t\n\t  // proxy certain important events.\n\t  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n\t  forEach(events, function(ev) {\n\t    stream.on(ev, self.emit.bind(self, ev));\n\t  });\n\t\n\t  // when we try to consume some more bytes, simply unpause the\n\t  // underlying stream.\n\t  self._read = function(n) {\n\t    debug('wrapped _read', n);\n\t    if (paused) {\n\t      paused = false;\n\t      stream.resume();\n\t    }\n\t  };\n\t\n\t  return self;\n\t};\n\t\n\t\n\t\n\t// exposed for testing purposes only.\n\tReadable._fromList = fromList;\n\t\n\t// Pluck off n bytes from an array of buffers.\n\t// Length is the combined lengths of all the buffers in the list.\n\tfunction fromList(n, state) {\n\t  var list = state.buffer;\n\t  var length = state.length;\n\t  var stringMode = !!state.decoder;\n\t  var objectMode = !!state.objectMode;\n\t  var ret;\n\t\n\t  // nothing in the list, definitely empty.\n\t  if (list.length === 0)\n\t    return null;\n\t\n\t  if (length === 0)\n\t    ret = null;\n\t  else if (objectMode)\n\t    ret = list.shift();\n\t  else if (!n || n >= length) {\n\t    // read it all, truncate the array.\n\t    if (stringMode)\n\t      ret = list.join('');\n\t    else\n\t      ret = Buffer.concat(list, length);\n\t    list.length = 0;\n\t  } else {\n\t    // read just some of it.\n\t    if (n < list[0].length) {\n\t      // just take a part of the first list item.\n\t      // slice is the same for buffers and strings.\n\t      var buf = list[0];\n\t      ret = buf.slice(0, n);\n\t      list[0] = buf.slice(n);\n\t    } else if (n === list[0].length) {\n\t      // first list is a perfect match\n\t      ret = list.shift();\n\t    } else {\n\t      // complex case.\n\t      // we have enough to cover it, but it spans past the first buffer.\n\t      if (stringMode)\n\t        ret = '';\n\t      else\n\t        ret = new Buffer(n);\n\t\n\t      var c = 0;\n\t      for (var i = 0, l = list.length; i < l && c < n; i++) {\n\t        var buf = list[0];\n\t        var cpy = Math.min(n - c, buf.length);\n\t\n\t        if (stringMode)\n\t          ret += buf.slice(0, cpy);\n\t        else\n\t          buf.copy(ret, c, 0, cpy);\n\t\n\t        if (cpy < buf.length)\n\t          list[0] = buf.slice(cpy);\n\t        else\n\t          list.shift();\n\t\n\t        c += cpy;\n\t      }\n\t    }\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction endReadable(stream) {\n\t  var state = stream._readableState;\n\t\n\t  // If we get here before consuming all the bytes, then that is a\n\t  // bug in node.  Should never happen.\n\t  if (state.length > 0)\n\t    throw new Error('endReadable called on non-empty stream');\n\t\n\t  if (!state.endEmitted) {\n\t    state.ended = true;\n\t    process.nextTick(function() {\n\t      // Check that we didn't get one last unshift.\n\t      if (!state.endEmitted && state.length === 0) {\n\t        state.endEmitted = true;\n\t        stream.readable = false;\n\t        stream.emit('end');\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\tfunction forEach (xs, f) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    f(xs[i], i);\n\t  }\n\t}\n\t\n\tfunction indexOf (xs, x) {\n\t  for (var i = 0, l = xs.length; i < l; i++) {\n\t    if (xs[i] === x) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar Buffer = __webpack_require__(3).Buffer;\n\t\n\tvar isBufferEncoding = Buffer.isEncoding\n\t  || function(encoding) {\n\t       switch (encoding && encoding.toLowerCase()) {\n\t         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n\t         default: return false;\n\t       }\n\t     }\n\t\n\t\n\tfunction assertEncoding(encoding) {\n\t  if (encoding && !isBufferEncoding(encoding)) {\n\t    throw new Error('Unknown encoding: ' + encoding);\n\t  }\n\t}\n\t\n\t// StringDecoder provides an interface for efficiently splitting a series of\n\t// buffers into a series of JS strings without breaking apart multi-byte\n\t// characters. CESU-8 is handled as part of the UTF-8 encoding.\n\t//\n\t// @TODO Handling all encodings inside a single object makes it very difficult\n\t// to reason about this code, so it should be split up in the future.\n\t// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n\t// points as used by CESU-8.\n\tvar StringDecoder = exports.StringDecoder = function(encoding) {\n\t  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n\t  assertEncoding(encoding);\n\t  switch (this.encoding) {\n\t    case 'utf8':\n\t      // CESU-8 represents each of Surrogate Pair by 3-bytes\n\t      this.surrogateSize = 3;\n\t      break;\n\t    case 'ucs2':\n\t    case 'utf16le':\n\t      // UTF-16 represents each of Surrogate Pair by 2-bytes\n\t      this.surrogateSize = 2;\n\t      this.detectIncompleteChar = utf16DetectIncompleteChar;\n\t      break;\n\t    case 'base64':\n\t      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n\t      this.surrogateSize = 3;\n\t      this.detectIncompleteChar = base64DetectIncompleteChar;\n\t      break;\n\t    default:\n\t      this.write = passThroughWrite;\n\t      return;\n\t  }\n\t\n\t  // Enough space to store all bytes of a single character. UTF-8 needs 4\n\t  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n\t  this.charBuffer = new Buffer(6);\n\t  // Number of bytes received for the current incomplete multi-byte character.\n\t  this.charReceived = 0;\n\t  // Number of bytes expected for the current incomplete multi-byte character.\n\t  this.charLength = 0;\n\t};\n\t\n\t\n\t// write decodes the given buffer and returns it as JS string that is\n\t// guaranteed to not contain any partial multi-byte characters. Any partial\n\t// character found at the end of the buffer is buffered up, and will be\n\t// returned when calling write again with the remaining bytes.\n\t//\n\t// Note: Converting a Buffer containing an orphan surrogate to a String\n\t// currently works, but converting a String to a Buffer (via `new Buffer`, or\n\t// Buffer#write) will replace incomplete surrogates with the unicode\n\t// replacement character. See https://codereview.chromium.org/121173009/ .\n\tStringDecoder.prototype.write = function(buffer) {\n\t  var charStr = '';\n\t  // if our last write ended with an incomplete multibyte character\n\t  while (this.charLength) {\n\t    // determine how many remaining bytes this buffer has to offer for this char\n\t    var available = (buffer.length >= this.charLength - this.charReceived) ?\n\t        this.charLength - this.charReceived :\n\t        buffer.length;\n\t\n\t    // add the new bytes to the char buffer\n\t    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n\t    this.charReceived += available;\n\t\n\t    if (this.charReceived < this.charLength) {\n\t      // still not enough chars in this buffer? wait for more ...\n\t      return '';\n\t    }\n\t\n\t    // remove bytes belonging to the current character from the buffer\n\t    buffer = buffer.slice(available, buffer.length);\n\t\n\t    // get the character that was split\n\t    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\t\n\t    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t    var charCode = charStr.charCodeAt(charStr.length - 1);\n\t    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t      this.charLength += this.surrogateSize;\n\t      charStr = '';\n\t      continue;\n\t    }\n\t    this.charReceived = this.charLength = 0;\n\t\n\t    // if there are no more bytes in this buffer, just emit our char\n\t    if (buffer.length === 0) {\n\t      return charStr;\n\t    }\n\t    break;\n\t  }\n\t\n\t  // determine and set charLength / charReceived\n\t  this.detectIncompleteChar(buffer);\n\t\n\t  var end = buffer.length;\n\t  if (this.charLength) {\n\t    // buffer the incomplete character bytes we got\n\t    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n\t    end -= this.charReceived;\n\t  }\n\t\n\t  charStr += buffer.toString(this.encoding, 0, end);\n\t\n\t  var end = charStr.length - 1;\n\t  var charCode = charStr.charCodeAt(end);\n\t  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n\t  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n\t    var size = this.surrogateSize;\n\t    this.charLength += size;\n\t    this.charReceived += size;\n\t    this.charBuffer.copy(this.charBuffer, size, 0, size);\n\t    buffer.copy(this.charBuffer, 0, 0, size);\n\t    return charStr.substring(0, end);\n\t  }\n\t\n\t  // or just emit the charStr\n\t  return charStr;\n\t};\n\t\n\t// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n\t// the end of the given buffer. If so, it sets this.charLength to the byte\n\t// length that character, and sets this.charReceived to the number of bytes\n\t// that are available for this character.\n\tStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n\t  // determine how many bytes we have to check at the end of this buffer\n\t  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\t\n\t  // Figure out if one of the last i bytes of our buffer announces an\n\t  // incomplete char.\n\t  for (; i > 0; i--) {\n\t    var c = buffer[buffer.length - i];\n\t\n\t    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\t\n\t    // 110XXXXX\n\t    if (i == 1 && c >> 5 == 0x06) {\n\t      this.charLength = 2;\n\t      break;\n\t    }\n\t\n\t    // 1110XXXX\n\t    if (i <= 2 && c >> 4 == 0x0E) {\n\t      this.charLength = 3;\n\t      break;\n\t    }\n\t\n\t    // 11110XXX\n\t    if (i <= 3 && c >> 3 == 0x1E) {\n\t      this.charLength = 4;\n\t      break;\n\t    }\n\t  }\n\t  this.charReceived = i;\n\t};\n\t\n\tStringDecoder.prototype.end = function(buffer) {\n\t  var res = '';\n\t  if (buffer && buffer.length)\n\t    res = this.write(buffer);\n\t\n\t  if (this.charReceived) {\n\t    var cr = this.charReceived;\n\t    var buf = this.charBuffer;\n\t    var enc = this.encoding;\n\t    res += buf.slice(0, cr).toString(enc);\n\t  }\n\t\n\t  return res;\n\t};\n\t\n\tfunction passThroughWrite(buffer) {\n\t  return buffer.toString(this.encoding);\n\t}\n\t\n\tfunction utf16DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 2;\n\t  this.charLength = this.charReceived ? 2 : 0;\n\t}\n\t\n\tfunction base64DetectIncompleteChar(buffer) {\n\t  this.charReceived = buffer.length % 3;\n\t  this.charLength = this.charReceived ? 3 : 0;\n\t}\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar punycode = __webpack_require__(44);\n\t\n\texports.parse = urlParse;\n\texports.resolve = urlResolve;\n\texports.resolveObject = urlResolveObject;\n\texports.format = urlFormat;\n\t\n\texports.Url = Url;\n\t\n\tfunction Url() {\n\t  this.protocol = null;\n\t  this.slashes = null;\n\t  this.auth = null;\n\t  this.host = null;\n\t  this.port = null;\n\t  this.hostname = null;\n\t  this.hash = null;\n\t  this.search = null;\n\t  this.query = null;\n\t  this.pathname = null;\n\t  this.path = null;\n\t  this.href = null;\n\t}\n\t\n\t// Reference: RFC 3986, RFC 1808, RFC 2396\n\t\n\t// define these here so at least they only have to be\n\t// compiled once on the first module load.\n\tvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n\t    portPattern = /:[0-9]*$/,\n\t\n\t    // RFC 2396: characters reserved for delimiting URLs.\n\t    // We actually just auto-escape these.\n\t    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\t\n\t    // RFC 2396: characters not allowed for various reasons.\n\t    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\t\n\t    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n\t    autoEscape = ['\\''].concat(unwise),\n\t    // Characters that are never ever allowed in a hostname.\n\t    // Note that any invalid chars are also handled, but these\n\t    // are the ones that are *expected* to be seen, so we fast-path\n\t    // them.\n\t    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n\t    hostEndingChars = ['/', '?', '#'],\n\t    hostnameMaxLen = 255,\n\t    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n\t    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n\t    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\t    unsafeProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that never have a hostname.\n\t    hostlessProtocol = {\n\t      'javascript': true,\n\t      'javascript:': true\n\t    },\n\t    // protocols that always contain a // bit.\n\t    slashedProtocol = {\n\t      'http': true,\n\t      'https': true,\n\t      'ftp': true,\n\t      'gopher': true,\n\t      'file': true,\n\t      'http:': true,\n\t      'https:': true,\n\t      'ftp:': true,\n\t      'gopher:': true,\n\t      'file:': true\n\t    },\n\t    querystring = __webpack_require__(37);\n\t\n\tfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n\t  if (url && isObject(url) && url instanceof Url) return url;\n\t\n\t  var u = new Url;\n\t  u.parse(url, parseQueryString, slashesDenoteHost);\n\t  return u;\n\t}\n\t\n\tUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n\t  if (!isString(url)) {\n\t    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n\t  }\n\t\n\t  var rest = url;\n\t\n\t  // trim before proceeding.\n\t  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\t  rest = rest.trim();\n\t\n\t  var proto = protocolPattern.exec(rest);\n\t  if (proto) {\n\t    proto = proto[0];\n\t    var lowerProto = proto.toLowerCase();\n\t    this.protocol = lowerProto;\n\t    rest = rest.substr(proto.length);\n\t  }\n\t\n\t  // figure out if it's got a host\n\t  // user@server is *always* interpreted as a hostname, and url\n\t  // resolution will treat //foo/bar as host=foo,path=bar because that's\n\t  // how the browser resolves relative URLs.\n\t  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n\t    var slashes = rest.substr(0, 2) === '//';\n\t    if (slashes && !(proto && hostlessProtocol[proto])) {\n\t      rest = rest.substr(2);\n\t      this.slashes = true;\n\t    }\n\t  }\n\t\n\t  if (!hostlessProtocol[proto] &&\n\t      (slashes || (proto && !slashedProtocol[proto]))) {\n\t\n\t    // there's a hostname.\n\t    // the first instance of /, ?, ;, or # ends the host.\n\t    //\n\t    // If there is an @ in the hostname, then non-host chars *are* allowed\n\t    // to the left of the last @ sign, unless some host-ending character\n\t    // comes *before* the @-sign.\n\t    // URLs are obnoxious.\n\t    //\n\t    // ex:\n\t    // http://a@b@c/ => user:a@b host:c\n\t    // http://a@b?@c => user:a host:c path:/?@c\n\t\n\t    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n\t    // Review our test case against browsers more comprehensively.\n\t\n\t    // find the first instance of any hostEndingChars\n\t    var hostEnd = -1;\n\t    for (var i = 0; i < hostEndingChars.length; i++) {\n\t      var hec = rest.indexOf(hostEndingChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t\n\t    // at this point, either we have an explicit point where the\n\t    // auth portion cannot go past, or the last @ char is the decider.\n\t    var auth, atSign;\n\t    if (hostEnd === -1) {\n\t      // atSign can be anywhere.\n\t      atSign = rest.lastIndexOf('@');\n\t    } else {\n\t      // atSign must be in auth portion.\n\t      // http://a@b/c@d => host:b auth:a path:/c@d\n\t      atSign = rest.lastIndexOf('@', hostEnd);\n\t    }\n\t\n\t    // Now we have a portion which is definitely the auth.\n\t    // Pull that off.\n\t    if (atSign !== -1) {\n\t      auth = rest.slice(0, atSign);\n\t      rest = rest.slice(atSign + 1);\n\t      this.auth = decodeURIComponent(auth);\n\t    }\n\t\n\t    // the host is the remaining to the left of the first non-host char\n\t    hostEnd = -1;\n\t    for (var i = 0; i < nonHostChars.length; i++) {\n\t      var hec = rest.indexOf(nonHostChars[i]);\n\t      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n\t        hostEnd = hec;\n\t    }\n\t    // if we still have not hit it, then the entire thing is a host.\n\t    if (hostEnd === -1)\n\t      hostEnd = rest.length;\n\t\n\t    this.host = rest.slice(0, hostEnd);\n\t    rest = rest.slice(hostEnd);\n\t\n\t    // pull out port.\n\t    this.parseHost();\n\t\n\t    // we've indicated that there is a hostname,\n\t    // so even if it's empty, it has to be present.\n\t    this.hostname = this.hostname || '';\n\t\n\t    // if hostname begins with [ and ends with ]\n\t    // assume that it's an IPv6 address.\n\t    var ipv6Hostname = this.hostname[0] === '[' &&\n\t        this.hostname[this.hostname.length - 1] === ']';\n\t\n\t    // validate a little.\n\t    if (!ipv6Hostname) {\n\t      var hostparts = this.hostname.split(/\\./);\n\t      for (var i = 0, l = hostparts.length; i < l; i++) {\n\t        var part = hostparts[i];\n\t        if (!part) continue;\n\t        if (!part.match(hostnamePartPattern)) {\n\t          var newpart = '';\n\t          for (var j = 0, k = part.length; j < k; j++) {\n\t            if (part.charCodeAt(j) > 127) {\n\t              // we replace non-ASCII char with a temporary placeholder\n\t              // we need this to make sure size of hostname is not\n\t              // broken by replacing non-ASCII by nothing\n\t              newpart += 'x';\n\t            } else {\n\t              newpart += part[j];\n\t            }\n\t          }\n\t          // we test again with ASCII char only\n\t          if (!newpart.match(hostnamePartPattern)) {\n\t            var validParts = hostparts.slice(0, i);\n\t            var notHost = hostparts.slice(i + 1);\n\t            var bit = part.match(hostnamePartStart);\n\t            if (bit) {\n\t              validParts.push(bit[1]);\n\t              notHost.unshift(bit[2]);\n\t            }\n\t            if (notHost.length) {\n\t              rest = '/' + notHost.join('.') + rest;\n\t            }\n\t            this.hostname = validParts.join('.');\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    if (this.hostname.length > hostnameMaxLen) {\n\t      this.hostname = '';\n\t    } else {\n\t      // hostnames are always lower case.\n\t      this.hostname = this.hostname.toLowerCase();\n\t    }\n\t\n\t    if (!ipv6Hostname) {\n\t      // IDNA Support: Returns a puny coded representation of \"domain\".\n\t      // It only converts the part of the domain name that\n\t      // has non ASCII characters. I.e. it dosent matter if\n\t      // you call it with a domain that already is in ASCII.\n\t      var domainArray = this.hostname.split('.');\n\t      var newOut = [];\n\t      for (var i = 0; i < domainArray.length; ++i) {\n\t        var s = domainArray[i];\n\t        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n\t            'xn--' + punycode.encode(s) : s);\n\t      }\n\t      this.hostname = newOut.join('.');\n\t    }\n\t\n\t    var p = this.port ? ':' + this.port : '';\n\t    var h = this.hostname || '';\n\t    this.host = h + p;\n\t    this.href += this.host;\n\t\n\t    // strip [ and ] from the hostname\n\t    // the host field still retains them, though\n\t    if (ipv6Hostname) {\n\t      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n\t      if (rest[0] !== '/') {\n\t        rest = '/' + rest;\n\t      }\n\t    }\n\t  }\n\t\n\t  // now rest is set to the post-host stuff.\n\t  // chop off any delim chars.\n\t  if (!unsafeProtocol[lowerProto]) {\n\t\n\t    // First, make 100% sure that any \"autoEscape\" chars get\n\t    // escaped, even if encodeURIComponent doesn't think they\n\t    // need to be.\n\t    for (var i = 0, l = autoEscape.length; i < l; i++) {\n\t      var ae = autoEscape[i];\n\t      var esc = encodeURIComponent(ae);\n\t      if (esc === ae) {\n\t        esc = escape(ae);\n\t      }\n\t      rest = rest.split(ae).join(esc);\n\t    }\n\t  }\n\t\n\t\n\t  // chop off from the tail first.\n\t  var hash = rest.indexOf('#');\n\t  if (hash !== -1) {\n\t    // got a fragment string.\n\t    this.hash = rest.substr(hash);\n\t    rest = rest.slice(0, hash);\n\t  }\n\t  var qm = rest.indexOf('?');\n\t  if (qm !== -1) {\n\t    this.search = rest.substr(qm);\n\t    this.query = rest.substr(qm + 1);\n\t    if (parseQueryString) {\n\t      this.query = querystring.parse(this.query);\n\t    }\n\t    rest = rest.slice(0, qm);\n\t  } else if (parseQueryString) {\n\t    // no query string, but parseQueryString still requested\n\t    this.search = '';\n\t    this.query = {};\n\t  }\n\t  if (rest) this.pathname = rest;\n\t  if (slashedProtocol[lowerProto] &&\n\t      this.hostname && !this.pathname) {\n\t    this.pathname = '/';\n\t  }\n\t\n\t  //to support http.request\n\t  if (this.pathname || this.search) {\n\t    var p = this.pathname || '';\n\t    var s = this.search || '';\n\t    this.path = p + s;\n\t  }\n\t\n\t  // finally, reconstruct the href based on what has been validated.\n\t  this.href = this.format();\n\t  return this;\n\t};\n\t\n\t// format a parsed object into a url string\n\tfunction urlFormat(obj) {\n\t  // ensure it's an object, and not a string url.\n\t  // If it's an obj, this is a no-op.\n\t  // this way, you can call url_format() on strings\n\t  // to clean up potentially wonky urls.\n\t  if (isString(obj)) obj = urlParse(obj);\n\t  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n\t  return obj.format();\n\t}\n\t\n\tUrl.prototype.format = function() {\n\t  var auth = this.auth || '';\n\t  if (auth) {\n\t    auth = encodeURIComponent(auth);\n\t    auth = auth.replace(/%3A/i, ':');\n\t    auth += '@';\n\t  }\n\t\n\t  var protocol = this.protocol || '',\n\t      pathname = this.pathname || '',\n\t      hash = this.hash || '',\n\t      host = false,\n\t      query = '';\n\t\n\t  if (this.host) {\n\t    host = auth + this.host;\n\t  } else if (this.hostname) {\n\t    host = auth + (this.hostname.indexOf(':') === -1 ?\n\t        this.hostname :\n\t        '[' + this.hostname + ']');\n\t    if (this.port) {\n\t      host += ':' + this.port;\n\t    }\n\t  }\n\t\n\t  if (this.query &&\n\t      isObject(this.query) &&\n\t      Object.keys(this.query).length) {\n\t    query = querystring.stringify(this.query);\n\t  }\n\t\n\t  var search = this.search || (query && ('?' + query)) || '';\n\t\n\t  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\t\n\t  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n\t  // unless they had them to begin with.\n\t  if (this.slashes ||\n\t      (!protocol || slashedProtocol[protocol]) && host !== false) {\n\t    host = '//' + (host || '');\n\t    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n\t  } else if (!host) {\n\t    host = '';\n\t  }\n\t\n\t  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n\t  if (search && search.charAt(0) !== '?') search = '?' + search;\n\t\n\t  pathname = pathname.replace(/[?#]/g, function(match) {\n\t    return encodeURIComponent(match);\n\t  });\n\t  search = search.replace('#', '%23');\n\t\n\t  return protocol + host + pathname + search + hash;\n\t};\n\t\n\tfunction urlResolve(source, relative) {\n\t  return urlParse(source, false, true).resolve(relative);\n\t}\n\t\n\tUrl.prototype.resolve = function(relative) {\n\t  return this.resolveObject(urlParse(relative, false, true)).format();\n\t};\n\t\n\tfunction urlResolveObject(source, relative) {\n\t  if (!source) return relative;\n\t  return urlParse(source, false, true).resolveObject(relative);\n\t}\n\t\n\tUrl.prototype.resolveObject = function(relative) {\n\t  if (isString(relative)) {\n\t    var rel = new Url();\n\t    rel.parse(relative, false, true);\n\t    relative = rel;\n\t  }\n\t\n\t  var result = new Url();\n\t  Object.keys(this).forEach(function(k) {\n\t    result[k] = this[k];\n\t  }, this);\n\t\n\t  // hash is always overridden, no matter what.\n\t  // even href=\"\" will remove it.\n\t  result.hash = relative.hash;\n\t\n\t  // if the relative url is empty, then there's nothing left to do here.\n\t  if (relative.href === '') {\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // hrefs like //foo/bar always cut to the protocol.\n\t  if (relative.slashes && !relative.protocol) {\n\t    // take everything except the protocol from relative\n\t    Object.keys(relative).forEach(function(k) {\n\t      if (k !== 'protocol')\n\t        result[k] = relative[k];\n\t    });\n\t\n\t    //urlParse appends trailing / to urls like http://www.example.com\n\t    if (slashedProtocol[result.protocol] &&\n\t        result.hostname && !result.pathname) {\n\t      result.path = result.pathname = '/';\n\t    }\n\t\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (relative.protocol && relative.protocol !== result.protocol) {\n\t    // if it's a known url protocol, then changing\n\t    // the protocol does weird things\n\t    // first, if it's not file:, then we MUST have a host,\n\t    // and if there was a path\n\t    // to begin with, then we MUST have a path.\n\t    // if it is file:, then the host is dropped,\n\t    // because that's known to be hostless.\n\t    // anything else is assumed to be absolute.\n\t    if (!slashedProtocol[relative.protocol]) {\n\t      Object.keys(relative).forEach(function(k) {\n\t        result[k] = relative[k];\n\t      });\n\t      result.href = result.format();\n\t      return result;\n\t    }\n\t\n\t    result.protocol = relative.protocol;\n\t    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n\t      var relPath = (relative.pathname || '').split('/');\n\t      while (relPath.length && !(relative.host = relPath.shift()));\n\t      if (!relative.host) relative.host = '';\n\t      if (!relative.hostname) relative.hostname = '';\n\t      if (relPath[0] !== '') relPath.unshift('');\n\t      if (relPath.length < 2) relPath.unshift('');\n\t      result.pathname = relPath.join('/');\n\t    } else {\n\t      result.pathname = relative.pathname;\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    result.host = relative.host || '';\n\t    result.auth = relative.auth;\n\t    result.hostname = relative.hostname || relative.host;\n\t    result.port = relative.port;\n\t    // to support http.request\n\t    if (result.pathname || result.search) {\n\t      var p = result.pathname || '';\n\t      var s = result.search || '';\n\t      result.path = p + s;\n\t    }\n\t    result.slashes = result.slashes || relative.slashes;\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n\t      isRelAbs = (\n\t          relative.host ||\n\t          relative.pathname && relative.pathname.charAt(0) === '/'\n\t      ),\n\t      mustEndAbs = (isRelAbs || isSourceAbs ||\n\t                    (result.host && relative.pathname)),\n\t      removeAllDots = mustEndAbs,\n\t      srcPath = result.pathname && result.pathname.split('/') || [],\n\t      relPath = relative.pathname && relative.pathname.split('/') || [],\n\t      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\t\n\t  // if the url is a non-slashed url, then relative\n\t  // links like ../.. should be able\n\t  // to crawl up to the hostname, as well.  This is strange.\n\t  // result.protocol has already been set by now.\n\t  // Later on, put the first path part into the host field.\n\t  if (psychotic) {\n\t    result.hostname = '';\n\t    result.port = null;\n\t    if (result.host) {\n\t      if (srcPath[0] === '') srcPath[0] = result.host;\n\t      else srcPath.unshift(result.host);\n\t    }\n\t    result.host = '';\n\t    if (relative.protocol) {\n\t      relative.hostname = null;\n\t      relative.port = null;\n\t      if (relative.host) {\n\t        if (relPath[0] === '') relPath[0] = relative.host;\n\t        else relPath.unshift(relative.host);\n\t      }\n\t      relative.host = null;\n\t    }\n\t    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n\t  }\n\t\n\t  if (isRelAbs) {\n\t    // it's absolute.\n\t    result.host = (relative.host || relative.host === '') ?\n\t                  relative.host : result.host;\n\t    result.hostname = (relative.hostname || relative.hostname === '') ?\n\t                      relative.hostname : result.hostname;\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    srcPath = relPath;\n\t    // fall through to the dot-handling below.\n\t  } else if (relPath.length) {\n\t    // it's relative\n\t    // throw away the existing file, and take the new path instead.\n\t    if (!srcPath) srcPath = [];\n\t    srcPath.pop();\n\t    srcPath = srcPath.concat(relPath);\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t  } else if (!isNullOrUndefined(relative.search)) {\n\t    // just pull out the search.\n\t    // like href='?foo'.\n\t    // Put this after the other two cases because it simplifies the booleans\n\t    if (psychotic) {\n\t      result.hostname = result.host = srcPath.shift();\n\t      //occationaly the auth can get stuck only in host\n\t      //this especialy happens in cases like\n\t      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                       result.host.split('@') : false;\n\t      if (authInHost) {\n\t        result.auth = authInHost.shift();\n\t        result.host = result.hostname = authInHost.shift();\n\t      }\n\t    }\n\t    result.search = relative.search;\n\t    result.query = relative.query;\n\t    //to support http.request\n\t    if (!isNull(result.pathname) || !isNull(result.search)) {\n\t      result.path = (result.pathname ? result.pathname : '') +\n\t                    (result.search ? result.search : '');\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    // no path at all.  easy.\n\t    // we've already handled the other stuff above.\n\t    result.pathname = null;\n\t    //to support http.request\n\t    if (result.search) {\n\t      result.path = '/' + result.search;\n\t    } else {\n\t      result.path = null;\n\t    }\n\t    result.href = result.format();\n\t    return result;\n\t  }\n\t\n\t  // if a url ENDs in . or .., then it must get a trailing slash.\n\t  // however, if it ends in anything else non-slashy,\n\t  // then it must NOT get a trailing slash.\n\t  var last = srcPath.slice(-1)[0];\n\t  var hasTrailingSlash = (\n\t      (result.host || relative.host) && (last === '.' || last === '..') ||\n\t      last === '');\n\t\n\t  // strip single dots, resolve double dots to parent dir\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = srcPath.length; i >= 0; i--) {\n\t    last = srcPath[i];\n\t    if (last == '.') {\n\t      srcPath.splice(i, 1);\n\t    } else if (last === '..') {\n\t      srcPath.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      srcPath.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (!mustEndAbs && !removeAllDots) {\n\t    for (; up--; up) {\n\t      srcPath.unshift('..');\n\t    }\n\t  }\n\t\n\t  if (mustEndAbs && srcPath[0] !== '' &&\n\t      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n\t    srcPath.push('');\n\t  }\n\t\n\t  var isAbsolute = srcPath[0] === '' ||\n\t      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\t\n\t  // put the host back\n\t  if (psychotic) {\n\t    result.hostname = result.host = isAbsolute ? '' :\n\t                                    srcPath.length ? srcPath.shift() : '';\n\t    //occationaly the auth can get stuck only in host\n\t    //this especialy happens in cases like\n\t    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n\t    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n\t                     result.host.split('@') : false;\n\t    if (authInHost) {\n\t      result.auth = authInHost.shift();\n\t      result.host = result.hostname = authInHost.shift();\n\t    }\n\t  }\n\t\n\t  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\t\n\t  if (mustEndAbs && !isAbsolute) {\n\t    srcPath.unshift('');\n\t  }\n\t\n\t  if (!srcPath.length) {\n\t    result.pathname = null;\n\t    result.path = null;\n\t  } else {\n\t    result.pathname = srcPath.join('/');\n\t  }\n\t\n\t  //to support request.http\n\t  if (!isNull(result.pathname) || !isNull(result.search)) {\n\t    result.path = (result.pathname ? result.pathname : '') +\n\t                  (result.search ? result.search : '');\n\t  }\n\t  result.auth = relative.auth || result.auth;\n\t  result.slashes = result.slashes || relative.slashes;\n\t  result.href = result.format();\n\t  return result;\n\t};\n\t\n\tUrl.prototype.parseHost = function() {\n\t  var host = this.host;\n\t  var port = portPattern.exec(host);\n\t  if (port) {\n\t    port = port[0];\n\t    if (port !== ':') {\n\t      this.port = port.substr(1);\n\t    }\n\t    host = host.substr(0, host.length - port.length);\n\t  }\n\t  if (host) this.hostname = host;\n\t};\n\t\n\tfunction isString(arg) {\n\t  return typeof arg === \"string\";\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isNull(arg) {\n\t  return arg === null;\n\t}\n\tfunction isNullOrUndefined(arg) {\n\t  return  arg == null;\n\t}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tif(typeof window !== 'undefined') {\n\t  if (typeof Promise === 'undefined') {\n\t    __webpack_require__(34).enable();\n\t    window.Promise = __webpack_require__(33);\n\t  }\n\t  __webpack_require__(48);\n\t  Object.assign = __webpack_require__(32);\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t\n\t  var object =  true ? exports : this; // #8: web workers\n\t  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t\n\t  function InvalidCharacterError(message) {\n\t    this.message = message;\n\t  }\n\t  InvalidCharacterError.prototype = new Error;\n\t  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t  // encoder\n\t  // [https://gist.github.com/999166] by [https://github.com/nignag]\n\t  object.btoa || (\n\t  object.btoa = function (input) {\n\t    for (\n\t      // initialize result and counter\n\t      var block, charCode, idx = 0, map = chars, output = '';\n\t      // if the next input index does not exist:\n\t      //   change the mapping table to \"=\"\n\t      //   check if d has no fractional digits\n\t      input.charAt(idx | 0) || (map = '=', idx % 1);\n\t      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n\t      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n\t    ) {\n\t      charCode = input.charCodeAt(idx += 3/4);\n\t      if (charCode > 0xFF) {\n\t        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n\t      }\n\t      block = block << 8 | charCode;\n\t    }\n\t    return output;\n\t  });\n\t\n\t  // decoder\n\t  // [https://gist.github.com/1020396] by [https://github.com/atk]\n\t  object.atob || (\n\t  object.atob = function (input) {\n\t    input = input.replace(/=+$/, '');\n\t    if (input.length % 4 == 1) {\n\t      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n\t    }\n\t    for (\n\t      // initialize result and counters\n\t      var bc = 0, bs, buffer, idx = 0, output = '';\n\t      // get next character\n\t      buffer = input.charAt(idx++);\n\t      // character found in table? initialize bit storage and add its ascii value;\n\t      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n\t        // and if not first of each 4 characters,\n\t        // convert the first 8 bits to one ascii character\n\t        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n\t    ) {\n\t      // try to find character in table (0-63, not found => -1)\n\t      buffer = chars.indexOf(buffer);\n\t    }\n\t    return output;\n\t  });\n\t\n\t}());\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n\t// original notice:\n\t\n\t/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\tfunction compare(a, b) {\n\t  if (a === b) {\n\t    return 0;\n\t  }\n\t\n\t  var x = a.length;\n\t  var y = b.length;\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i];\n\t      y = b[i];\n\t      break;\n\t    }\n\t  }\n\t\n\t  if (x < y) {\n\t    return -1;\n\t  }\n\t  if (y < x) {\n\t    return 1;\n\t  }\n\t  return 0;\n\t}\n\tfunction isBuffer(b) {\n\t  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n\t    return global.Buffer.isBuffer(b);\n\t  }\n\t  return !!(b != null && b._isBuffer);\n\t}\n\t\n\t// based on node assert, original notice:\n\t\n\t// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n\t//\n\t// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n\t//\n\t// Originally from narwhal.js (http://narwhaljs.org)\n\t// Copyright (c) 2009 Thomas Robinson <280north.com>\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy\n\t// of this software and associated documentation files (the 'Software'), to\n\t// deal in the Software without restriction, including without limitation the\n\t// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n\t// sell copies of the Software, and to permit persons to whom the Software is\n\t// furnished to do so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in\n\t// all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n\t// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n\t// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tvar util = __webpack_require__(11);\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\tvar pSlice = Array.prototype.slice;\n\tvar functionsHaveNames = (function () {\n\t  return function foo() {}.name === 'foo';\n\t}());\n\tfunction pToString (obj) {\n\t  return Object.prototype.toString.call(obj);\n\t}\n\tfunction isView(arrbuf) {\n\t  if (isBuffer(arrbuf)) {\n\t    return false;\n\t  }\n\t  if (typeof global.ArrayBuffer !== 'function') {\n\t    return false;\n\t  }\n\t  if (typeof ArrayBuffer.isView === 'function') {\n\t    return ArrayBuffer.isView(arrbuf);\n\t  }\n\t  if (!arrbuf) {\n\t    return false;\n\t  }\n\t  if (arrbuf instanceof DataView) {\n\t    return true;\n\t  }\n\t  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t// 1. The assert module provides functions that throw\n\t// AssertionError's when particular conditions are not met. The\n\t// assert module must conform to the following interface.\n\t\n\tvar assert = module.exports = ok;\n\t\n\t// 2. The AssertionError is defined in assert.\n\t// new assert.AssertionError({ message: message,\n\t//                             actual: actual,\n\t//                             expected: expected })\n\t\n\tvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n\t// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\n\tfunction getName(func) {\n\t  if (!util.isFunction(func)) {\n\t    return;\n\t  }\n\t  if (functionsHaveNames) {\n\t    return func.name;\n\t  }\n\t  var str = func.toString();\n\t  var match = str.match(regex);\n\t  return match && match[1];\n\t}\n\tassert.AssertionError = function AssertionError(options) {\n\t  this.name = 'AssertionError';\n\t  this.actual = options.actual;\n\t  this.expected = options.expected;\n\t  this.operator = options.operator;\n\t  if (options.message) {\n\t    this.message = options.message;\n\t    this.generatedMessage = false;\n\t  } else {\n\t    this.message = getMessage(this);\n\t    this.generatedMessage = true;\n\t  }\n\t  var stackStartFunction = options.stackStartFunction || fail;\n\t  if (Error.captureStackTrace) {\n\t    Error.captureStackTrace(this, stackStartFunction);\n\t  } else {\n\t    // non v8 browsers so we can have a stacktrace\n\t    var err = new Error();\n\t    if (err.stack) {\n\t      var out = err.stack;\n\t\n\t      // try to strip useless frames\n\t      var fn_name = getName(stackStartFunction);\n\t      var idx = out.indexOf('\\n' + fn_name);\n\t      if (idx >= 0) {\n\t        // once we have located the function frame\n\t        // we need to strip out everything before it (and its line)\n\t        var next_line = out.indexOf('\\n', idx + 1);\n\t        out = out.substring(next_line + 1);\n\t      }\n\t\n\t      this.stack = out;\n\t    }\n\t  }\n\t};\n\t\n\t// assert.AssertionError instanceof Error\n\tutil.inherits(assert.AssertionError, Error);\n\t\n\tfunction truncate(s, n) {\n\t  if (typeof s === 'string') {\n\t    return s.length < n ? s : s.slice(0, n);\n\t  } else {\n\t    return s;\n\t  }\n\t}\n\tfunction inspect(something) {\n\t  if (functionsHaveNames || !util.isFunction(something)) {\n\t    return util.inspect(something);\n\t  }\n\t  var rawname = getName(something);\n\t  var name = rawname ? ': ' + rawname : '';\n\t  return '[Function' +  name + ']';\n\t}\n\tfunction getMessage(self) {\n\t  return truncate(inspect(self.actual), 128) + ' ' +\n\t         self.operator + ' ' +\n\t         truncate(inspect(self.expected), 128);\n\t}\n\t\n\t// At present only the three keys mentioned above are used and\n\t// understood by the spec. Implementations or sub modules can pass\n\t// other keys to the AssertionError's constructor - they will be\n\t// ignored.\n\t\n\t// 3. All of the following functions must throw an AssertionError\n\t// when a corresponding condition is not met, with a message that\n\t// may be undefined if not provided.  All assertion methods provide\n\t// both the actual and expected values to the assertion error for\n\t// display purposes.\n\t\n\tfunction fail(actual, expected, message, operator, stackStartFunction) {\n\t  throw new assert.AssertionError({\n\t    message: message,\n\t    actual: actual,\n\t    expected: expected,\n\t    operator: operator,\n\t    stackStartFunction: stackStartFunction\n\t  });\n\t}\n\t\n\t// EXTENSION! allows for well behaved errors defined elsewhere.\n\tassert.fail = fail;\n\t\n\t// 4. Pure assertion tests whether a value is truthy, as determined\n\t// by !!guard.\n\t// assert.ok(guard, message_opt);\n\t// This statement is equivalent to assert.equal(true, !!guard,\n\t// message_opt);. To test strictly for the value true, use\n\t// assert.strictEqual(true, guard, message_opt);.\n\t\n\tfunction ok(value, message) {\n\t  if (!value) fail(value, true, message, '==', assert.ok);\n\t}\n\tassert.ok = ok;\n\t\n\t// 5. The equality assertion tests shallow, coercive equality with\n\t// ==.\n\t// assert.equal(actual, expected, message_opt);\n\t\n\tassert.equal = function equal(actual, expected, message) {\n\t  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n\t};\n\t\n\t// 6. The non-equality assertion tests for whether two objects are not equal\n\t// with != assert.notEqual(actual, expected, message_opt);\n\t\n\tassert.notEqual = function notEqual(actual, expected, message) {\n\t  if (actual == expected) {\n\t    fail(actual, expected, message, '!=', assert.notEqual);\n\t  }\n\t};\n\t\n\t// 7. The equivalence assertion tests a deep equality relation.\n\t// assert.deepEqual(actual, expected, message_opt);\n\t\n\tassert.deepEqual = function deepEqual(actual, expected, message) {\n\t  if (!_deepEqual(actual, expected, false)) {\n\t    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n\t  }\n\t};\n\t\n\tassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n\t  if (!_deepEqual(actual, expected, true)) {\n\t    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n\t  }\n\t};\n\t\n\tfunction _deepEqual(actual, expected, strict, memos) {\n\t  // 7.1. All identical values are equivalent, as determined by ===.\n\t  if (actual === expected) {\n\t    return true;\n\t  } else if (isBuffer(actual) && isBuffer(expected)) {\n\t    return compare(actual, expected) === 0;\n\t\n\t  // 7.2. If the expected value is a Date object, the actual value is\n\t  // equivalent if it is also a Date object that refers to the same time.\n\t  } else if (util.isDate(actual) && util.isDate(expected)) {\n\t    return actual.getTime() === expected.getTime();\n\t\n\t  // 7.3 If the expected value is a RegExp object, the actual value is\n\t  // equivalent if it is also a RegExp object with the same source and\n\t  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n\t  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n\t    return actual.source === expected.source &&\n\t           actual.global === expected.global &&\n\t           actual.multiline === expected.multiline &&\n\t           actual.lastIndex === expected.lastIndex &&\n\t           actual.ignoreCase === expected.ignoreCase;\n\t\n\t  // 7.4. Other pairs that do not both pass typeof value == 'object',\n\t  // equivalence is determined by ==.\n\t  } else if ((actual === null || typeof actual !== 'object') &&\n\t             (expected === null || typeof expected !== 'object')) {\n\t    return strict ? actual === expected : actual == expected;\n\t\n\t  // If both values are instances of typed arrays, wrap their underlying\n\t  // ArrayBuffers in a Buffer each to increase performance\n\t  // This optimization requires the arrays to have the same type as checked by\n\t  // Object.prototype.toString (aka pToString). Never perform binary\n\t  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n\t  // bit patterns are not identical.\n\t  } else if (isView(actual) && isView(expected) &&\n\t             pToString(actual) === pToString(expected) &&\n\t             !(actual instanceof Float32Array ||\n\t               actual instanceof Float64Array)) {\n\t    return compare(new Uint8Array(actual.buffer),\n\t                   new Uint8Array(expected.buffer)) === 0;\n\t\n\t  // 7.5 For all other Object pairs, including Array objects, equivalence is\n\t  // determined by having the same number of owned properties (as verified\n\t  // with Object.prototype.hasOwnProperty.call), the same set of keys\n\t  // (although not necessarily the same order), equivalent values for every\n\t  // corresponding key, and an identical 'prototype' property. Note: this\n\t  // accounts for both named and indexed properties on Arrays.\n\t  } else if (isBuffer(actual) !== isBuffer(expected)) {\n\t    return false;\n\t  } else {\n\t    memos = memos || {actual: [], expected: []};\n\t\n\t    var actualIndex = memos.actual.indexOf(actual);\n\t    if (actualIndex !== -1) {\n\t      if (actualIndex === memos.expected.indexOf(expected)) {\n\t        return true;\n\t      }\n\t    }\n\t\n\t    memos.actual.push(actual);\n\t    memos.expected.push(expected);\n\t\n\t    return objEquiv(actual, expected, strict, memos);\n\t  }\n\t}\n\t\n\tfunction isArguments(object) {\n\t  return Object.prototype.toString.call(object) == '[object Arguments]';\n\t}\n\t\n\tfunction objEquiv(a, b, strict, actualVisitedObjects) {\n\t  if (a === null || a === undefined || b === null || b === undefined)\n\t    return false;\n\t  // if one is a primitive, the other must be same\n\t  if (util.isPrimitive(a) || util.isPrimitive(b))\n\t    return a === b;\n\t  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n\t    return false;\n\t  var aIsArgs = isArguments(a);\n\t  var bIsArgs = isArguments(b);\n\t  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n\t    return false;\n\t  if (aIsArgs) {\n\t    a = pSlice.call(a);\n\t    b = pSlice.call(b);\n\t    return _deepEqual(a, b, strict);\n\t  }\n\t  var ka = objectKeys(a);\n\t  var kb = objectKeys(b);\n\t  var key, i;\n\t  // having the same number of owned properties (keys incorporates\n\t  // hasOwnProperty)\n\t  if (ka.length !== kb.length)\n\t    return false;\n\t  //the same set of keys (although not necessarily the same order),\n\t  ka.sort();\n\t  kb.sort();\n\t  //~~~cheap key test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    if (ka[i] !== kb[i])\n\t      return false;\n\t  }\n\t  //equivalent values for every corresponding key, and\n\t  //~~~possibly expensive deep test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    key = ka[i];\n\t    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n\t      return false;\n\t  }\n\t  return true;\n\t}\n\t\n\t// 8. The non-equivalence assertion tests for any deep inequality.\n\t// assert.notDeepEqual(actual, expected, message_opt);\n\t\n\tassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n\t  if (_deepEqual(actual, expected, false)) {\n\t    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n\t  }\n\t};\n\t\n\tassert.notDeepStrictEqual = notDeepStrictEqual;\n\tfunction notDeepStrictEqual(actual, expected, message) {\n\t  if (_deepEqual(actual, expected, true)) {\n\t    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n\t  }\n\t}\n\t\n\t\n\t// 9. The strict equality assertion tests strict equality, as determined by ===.\n\t// assert.strictEqual(actual, expected, message_opt);\n\t\n\tassert.strictEqual = function strictEqual(actual, expected, message) {\n\t  if (actual !== expected) {\n\t    fail(actual, expected, message, '===', assert.strictEqual);\n\t  }\n\t};\n\t\n\t// 10. The strict non-equality assertion tests for strict inequality, as\n\t// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\t\n\tassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n\t  if (actual === expected) {\n\t    fail(actual, expected, message, '!==', assert.notStrictEqual);\n\t  }\n\t};\n\t\n\tfunction expectedException(actual, expected) {\n\t  if (!actual || !expected) {\n\t    return false;\n\t  }\n\t\n\t  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n\t    return expected.test(actual);\n\t  }\n\t\n\t  try {\n\t    if (actual instanceof expected) {\n\t      return true;\n\t    }\n\t  } catch (e) {\n\t    // Ignore.  The instanceof check doesn't work for arrow functions.\n\t  }\n\t\n\t  if (Error.isPrototypeOf(expected)) {\n\t    return false;\n\t  }\n\t\n\t  return expected.call({}, actual) === true;\n\t}\n\t\n\tfunction _tryBlock(block) {\n\t  var error;\n\t  try {\n\t    block();\n\t  } catch (e) {\n\t    error = e;\n\t  }\n\t  return error;\n\t}\n\t\n\tfunction _throws(shouldThrow, block, expected, message) {\n\t  var actual;\n\t\n\t  if (typeof block !== 'function') {\n\t    throw new TypeError('\"block\" argument must be a function');\n\t  }\n\t\n\t  if (typeof expected === 'string') {\n\t    message = expected;\n\t    expected = null;\n\t  }\n\t\n\t  actual = _tryBlock(block);\n\t\n\t  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n\t            (message ? ' ' + message : '.');\n\t\n\t  if (shouldThrow && !actual) {\n\t    fail(actual, expected, 'Missing expected exception' + message);\n\t  }\n\t\n\t  var userProvidedMessage = typeof message === 'string';\n\t  var isUnwantedException = !shouldThrow && util.isError(actual);\n\t  var isUnexpectedException = !shouldThrow && actual && !expected;\n\t\n\t  if ((isUnwantedException &&\n\t      userProvidedMessage &&\n\t      expectedException(actual, expected)) ||\n\t      isUnexpectedException) {\n\t    fail(actual, expected, 'Got unwanted exception' + message);\n\t  }\n\t\n\t  if ((shouldThrow && actual && expected &&\n\t      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n\t    throw actual;\n\t  }\n\t}\n\t\n\t// 11. Expected to throw an error:\n\t// assert.throws(block, Error_opt, message_opt);\n\t\n\tassert.throws = function(block, /*optional*/error, /*optional*/message) {\n\t  _throws(true, block, error, message);\n\t};\n\t\n\t// EXTENSION! This is annoying to write outside this module.\n\tassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n\t  _throws(false, block, error, message);\n\t};\n\t\n\tassert.ifError = function(err) { if (err) throw err; };\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t  var keys = [];\n\t  for (var key in obj) {\n\t    if (hasOwn.call(obj, key)) keys.push(key);\n\t  }\n\t  return keys;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _fabric = __webpack_require__(26);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t//import bot_bar from 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/bottom_bar%402x.png';\n\t//import celeb_spiral from 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/celeberation-spiral%402x.png';\n\t//import non_moving_parts from 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/non-moving-parts%20copy.png';\n\t//import dat_wheel from 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/wheel%402x.png';\n\t\n\t_fabric.fabric.Object.prototype.originX = _fabric.fabric.Object.prototype.originY = 'center';\n\t\n\tvar wheel = null;\n\tvar bg = null;\n\tvar username = null;\n\tvar subscribed = null;\n\tvar winsTxt = null;\n\tvar winningsTxt = null;\n\tvar ray = null;\n\t\n\tvar Notify = function () {\n\t  function Notify(width, height, widget, canvas) {\n\t    var _this = this;\n\t\n\t    _classCallCheck(this, Notify);\n\t\n\t    this.width = width;\n\t    this.height = height;\n\t    this.widget = widget;\n\t    this.canvas = new _fabric.fabric.StaticCanvas(canvas);\n\t    /*\n\t     ^^Only nessecary if you're using fabric. Otherwise, just do:\n\t     this.canvas = canvas;\n\t     */\n\t    this.onMessage = this.onMessage.bind(this);\n\t    this.enqueueAnimation = this.enqueueAnimation.bind(this);\n\t    this.render = this.render.bind(this);\n\t    this.finish = this.finish.bind(this);\n\t    this.spin = this.spin.bind(this);\n\t    this.calculateFromEndPoint = this.calculateFromEndPoint.bind(this);\n\t    this.afterSpin = this.afterSpin.bind(this);\n\t    this.afterAnimation = this.afterAnimation.bind(this);\n\t\n\t    this.canvas.on('object:added', function (e) {\n\t      if (e.target && e.target._isWheel && !wheel) {\n\t        wheel = e.target;\n\t        _this.spin(e.target._optionsPassThrough);\n\t      }\n\t      if (e.target && e.target._isBg && !bg) {\n\t        bg = e.target;\n\t      }\n\t      if (e.target && e.target._isRay && !ray) {\n\t        ray = e.target;\n\t      }\n\t    });\n\t\n\t    //^^Set variables\n\t    this.queue = [];\n\t    this.isRunning = false;\n\t  }\n\t\n\t  _createClass(Notify, [{\n\t    key: 'render',\n\t    value: function render(options) {\n\t      var _this2 = this;\n\t\n\t      this.canvas.setHeight(this.height);\n\t      this.canvas.setWidth(this.width);\n\t\n\t      _fabric.fabric.Image.fromURL('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/celeberation-spiral%402x.png', function (img0) {\n\t        img0.setLeft(_this2.width / 2).setTop(_this2.height / 1.095).scaleToWidth(_this2.width * 1.4).setAngle(180).set('opacity', 0);\n\t        img0._isRay = true;\n\t        _this2.canvas.add(img0);\n\t\n\t        _fabric.fabric.Image.fromURL('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/wheel%402x.png', function (img1) {\n\t          img1.setLeft(_this2.width / 2).setTop(_this2.height / 1.095).setWidth(_this2.width - _this2.width * .045).setHeight(_this2.width - _this2.width * .045);\n\t          img1._isWheel = true;\n\t          img1._optionsPassThrough = options;\n\t          _this2.canvas.add(img1);\n\t          _fabric.fabric.Image.fromURL('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/non-moving-parts%20copy.png', function (img2) {\n\t            img2._isBg = true;\n\t            img2.setLeft(_this2.width / 2).setTop(_this2.height / 1.1).scaleToWidth(_this2.width);\n\t            _this2.canvas.add(img2);\n\t            _fabric.fabric.Image.fromURL('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/bottom_bar%402x.png', function (img3) {\n\t              img3.setLeft(_this2.width / 1.98).setTop(_this2.height / 1.095).scaleToWidth(_this2.width);\n\t              _this2.canvas.add(img3);\n\t\n\t              _this2.canvas.add(username = new _fabric.fabric.Text('' + options.username, {\n\t                width: _this2.width,\n\t                height: _this2.height,\n\t                left: _this2.width / 2,\n\t                top: _this2.height / 4,\n\t                fill: 'turquoise',\n\t                fontFamily: 'Titillium Web',\n\t                fontSize: 48 / 450 * _this2.height,\n\t                fontWeight: 600\n\t              }));\n\t              _this2.canvas.add(subscribed = new _fabric.fabric.Text(options.isResub ? options.months + ' MONTH RESUB' : 'NEW SUBSCRIBER', {\n\t                width: _this2.width,\n\t                height: _this2.height,\n\t                left: _this2.width / 2,\n\t                top: _this2.height / 3,\n\t                fill: 'white',\n\t                fontFamily: 'Titillium Web',\n\t                fontSize: 28 / 450 * _this2.height,\n\t                fontWeight: 600\n\t              }));\n\t              _this2.canvas.add(winsTxt = new _fabric.fabric.Text('WINS', {\n\t                width: _this2.width,\n\t                height: _this2.height,\n\t                left: _this2.width / 2,\n\t                top: _this2.height / 3,\n\t                fill: 'red',\n\t                fontFamily: 'Titillium Web',\n\t                fontSize: 36 / 450 * _this2.height,\n\t                fontWeight: 900,\n\t                opacity: 0\n\t              }));\n\t              _this2.canvas.add(winningsTxt = new _fabric.fabric.Text('', {\n\t                width: _this2.width,\n\t                height: _this2.height,\n\t                left: _this2.width / 2,\n\t                top: _this2.height / 2.3,\n\t                fill: 'white',\n\t                fontFamily: 'Titillium Web',\n\t                fontSize: 36 / 450 * _this2.height,\n\t                fontWeight: 700,\n\t                opacity: 0\n\t              }));\n\t            });\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'calculateFromEndPoint',\n\t    value: function calculateFromEndPoint(landOn) {\n\t      var endAngle = 0;\n\t\n\t      switch (landOn) {\n\t        case 50:\n\t          endAngle = [20, 110, 201, 291][Math.floor(Math.random() * 4)];\n\t          break;\n\t        case 100:\n\t          endAngle = [43, 88, 133, 224, 269, 314][Math.floor(Math.random() * 6)];\n\t          break;\n\t        case 200:\n\t          endAngle = [64, 155, 246, 336][Math.floor(Math.random() * 4)];\n\t          break;\n\t        case 1500:\n\t          endAngle = 178;\n\t          break;\n\t        case 'jack':\n\t          endAngle = 359;\n\t          break;\n\t        default:\n\t          endAngle = 30;\n\t          break;\n\t      }\n\t      endAngle -= Math.floor(Math.random() * 18);\n\t      return endAngle;\n\t    }\n\t  }, {\n\t    key: 'spin',\n\t    value: function spin(options) {\n\t      var _this3 = this;\n\t\n\t      var calculatedAngle = this.calculateFromEndPoint(options.win);\n\t      wheel.animate('angle', 7200 - calculatedAngle, {\n\t        onChange: this.canvas.renderAll.bind(this.canvas),\n\t        duration: 6000,\n\t        easing: _fabric.fabric.util.ease.easeOutCirc\n\t      });\n\t      setTimeout(function () {\n\t        _this3.afterSpin(options);\n\t      }, 6000);\n\t    }\n\t  }, {\n\t    key: 'afterSpin',\n\t    value: function afterSpin(options) {\n\t      var _this4 = this;\n\t\n\t      //fade out & remove (re)sub text\n\t\n\t      if (options.win !== 'jack') {\n\t        if (options.months === 0) {\n\t          winningsTxt.setText(options.win + ' coins');\n\t        } else {\n\t          winningsTxt.setText(options.months + ' x ' + options.win + ' coins');\n\t        }\n\t      } else {\n\t        winningsTxt.setText('THE JACKPOT');\n\t      }\n\t\n\t      ray.animate('opacity', .8, {\n\t        duration: 300,\n\t        onChange: this.canvas.renderAll.bind(this.canvas)\n\t      });\n\t\n\t      ray.animate('angle', 720, {\n\t        onChange: this.canvas.renderAll.bind(this.canvas),\n\t        duration: 10000\n\t      });\n\t\n\t      subscribed.animate('opacity', '0', {\n\t        duration: 500,\n\t        onChange: this.canvas.renderAll.bind(this.canvas),\n\t        onComplete: function onComplete() {\n\t          _this4.canvas.remove(subscribed);\n\t        }\n\t      });\n\t\n\t      winsTxt.animate('opacity', '1', {\n\t        duration: 500,\n\t        onChange: this.canvas.renderAll.bind(this.canvas)\n\t      });\n\t\n\t      winsTxt.animate('top', this.height / 3.5, {\n\t        duration: 500,\n\t        onChange: this.canvas.renderAll.bind(this.canvas)\n\t      });\n\t\n\t      winningsTxt.animate('opacity', '1', {\n\t        duration: 500,\n\t        onChange: this.canvas.renderAll.bind(this.canvas)\n\t      });\n\t\n\t      winningsTxt.animate('top', this.height / 2.8, {\n\t        duration: 500,\n\t        onChange: this.canvas.renderAll.bind(this.canvas)\n\t      });\n\t\n\t      username.animate('top', this.height / 5, {\n\t        duration: 500,\n\t        onChange: this.canvas.renderAll.bind(this.canvas)\n\t      });\n\t\n\t      setTimeout(this.afterAnimation, 3000);\n\t    }\n\t  }, {\n\t    key: 'afterAnimation',\n\t    value: function afterAnimation() {\n\t      var _this5 = this;\n\t\n\t      this.canvas.getObjects().map(function (o) {\n\t        o.animate('top', _this5.height, {\n\t          duration: 300,\n\t          onChange: _this5.canvas.renderAll.bind(_this5.canvas)\n\t        });\n\t        o.animate('opacity', 0, {\n\t          duration: 300,\n\t          onChange: _this5.canvas.renderAll.bind(_this5.canvas),\n\t          onComplete: function onComplete() {\n\t            _this5.canvas.remove(o);\n\t            wheel = null;\n\t            bg = null;\n\t            username = null;\n\t            subscribed = null;\n\t            winsTxt = null;\n\t            winningsTxt = null;\n\t            ray = null;\n\t          }\n\t        });\n\t      });\n\t      setTimeout(this.finish, 400);\n\t    }\n\t  }, {\n\t    key: 'finish',\n\t    value: function finish() {\n\t      this.isRunning = false;\n\t      if (this.queue && this.queue.length) {\n\t        var nextInQueue = this.queue.shift();\n\t        this.enqueueAnimation(nextInQueue);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'enqueueAnimation',\n\t    value: function enqueueAnimation(options) {\n\t      if (this.isRunning) {\n\t        this.queue.push(options);\n\t      } else {\n\t        this.isRunning = true;\n\t        this.render(options);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onMessage',\n\t    value: function onMessage(streamAction) {\n\t      //Called when someone in Twitch calls your command\n\t\n\t      this.enqueueAnimation(streamAction.data);\n\t    }\n\t  }]);\n\t\n\t  return Notify;\n\t}();\n\t\n\texports.default = Notify;\n\t\n\t//^^Nessecary for Webpack to compile\n\t\n\tif (window !== undefined) {\n\t  window.notify = Notify;\n\t}\n\t\n\t//^^Nessecary for Bebo to require in NOTE: make the property lowercase (i.e example !== Example)\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return b64.length * 3 / 4 - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, j, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr(len * 3 / 4 - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = now\n\t\n\tfunction now() {\n\t    return new Date().getTime()\n\t}\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, console, process) {/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n\t /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\t\n\tvar fabric = fabric || { version: \"1.7.3\" };\n\tif (true) {\n\t  exports.fabric = fabric;\n\t}\n\t\n\tif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t  fabric.document = document;\n\t  fabric.window = window;\n\t  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n\t  window.fabric = fabric;\n\t}\n\telse {\n\t  // assume we're running under node.js when document/window are not present\n\t  fabric.document = __webpack_require__(50)\n\t    .jsdom(\n\t      decodeURIComponent(\"%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E\")\n\t    );\n\t\n\t  if (fabric.document.createWindow) {\n\t    fabric.window = fabric.document.createWindow();\n\t  } else {\n\t    fabric.window = fabric.document.parentWindow;\n\t  }\n\t}\n\t\n\t/**\n\t * True when in environment that supports touch events\n\t * @type boolean\n\t */\n\tfabric.isTouchSupported = \"ontouchstart\" in fabric.document.documentElement;\n\t\n\t/**\n\t * True when in environment that's probably Node.js\n\t * @type boolean\n\t */\n\tfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n\t                      typeof window === 'undefined';\n\t\n\t/* _FROM_SVG_START_ */\n\t/**\n\t * Attributes parsed from all SVG elements\n\t * @type array\n\t */\n\tfabric.SHARED_ATTRIBUTES = [\n\t  \"display\",\n\t  \"transform\",\n\t  \"fill\", \"fill-opacity\", \"fill-rule\",\n\t  \"opacity\",\n\t  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n\t  \"stroke-linejoin\", \"stroke-miterlimit\",\n\t  \"stroke-opacity\", \"stroke-width\",\n\t  \"id\"\n\t];\n\t/* _FROM_SVG_END_ */\n\t\n\t/**\n\t * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n\t */\n\tfabric.DPI = 96;\n\tfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\n\tfabric.fontPaths = { };\n\t\n\t/**\n\t * Cache Object for widths of chars in text rendering.\n\t */\n\tfabric.charWidthsCache = { };\n\t\n\t/**\n\t * Device Pixel Ratio\n\t * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n\t */\n\tfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n\t                          fabric.window.webkitDevicePixelRatio ||\n\t                          fabric.window.mozDevicePixelRatio ||\n\t                          1;\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  function _removeEventListener(eventName, handler) {\n\t    if (!this.__eventListeners[eventName]) {\n\t      return;\n\t    }\n\t    var eventListener = this.__eventListeners[eventName];\n\t    if (handler) {\n\t      eventListener[eventListener.indexOf(handler)] = false;\n\t    }\n\t    else {\n\t      fabric.util.array.fill(eventListener, false);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Observes specified event\n\t   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias on\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function observe(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      this.__eventListeners = { };\n\t    }\n\t    // one object with key/value pairs was passed\n\t    if (arguments.length === 1) {\n\t      for (var prop in eventName) {\n\t        this.on(prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      if (!this.__eventListeners[eventName]) {\n\t        this.__eventListeners[eventName] = [];\n\t      }\n\t      this.__eventListeners[eventName].push(handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Stops event observing for a particular event handler. Calling this method\n\t   * without arguments removes all handlers for all events\n\t   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias off\n\t   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n\t   * @param {Function} handler Function to be deleted from EventListeners\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function stopObserving(eventName, handler) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    // remove all key/value pairs (event name -> event handler)\n\t    if (arguments.length === 0) {\n\t      for (eventName in this.__eventListeners) {\n\t        _removeEventListener.call(this, eventName);\n\t      }\n\t    }\n\t    // one object with key/value pairs was passed\n\t    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n\t      for (var prop in eventName) {\n\t        _removeEventListener.call(this, prop, eventName[prop]);\n\t      }\n\t    }\n\t    else {\n\t      _removeEventListener.call(this, eventName, handler);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * Fires event with an optional options object\n\t   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n\t   * @memberOf fabric.Observable\n\t   * @alias trigger\n\t   * @param {String} eventName Event name to fire\n\t   * @param {Object} [options] Options object\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  function fire(eventName, options) {\n\t    if (!this.__eventListeners) {\n\t      return;\n\t    }\n\t\n\t    var listenersForEvent = this.__eventListeners[eventName];\n\t    if (!listenersForEvent) {\n\t      return;\n\t    }\n\t\n\t    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n\t      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n\t    }\n\t    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n\t      return value !== false;\n\t    });\n\t    return this;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.Observable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n\t   * @see {@link http://fabricjs.com/events|Events demo}\n\t   */\n\t  fabric.Observable = {\n\t    observe: observe,\n\t    stopObserving: stopObserving,\n\t    fire: fire,\n\t\n\t    on: observe,\n\t    off: stopObserving,\n\t    trigger: fire\n\t  };\n\t})();\n\t\n\t\n\t/**\n\t * @namespace fabric.Collection\n\t */\n\tfabric.Collection = {\n\t\n\t  _objects: [],\n\t\n\t  /**\n\t   * Adds objects to collection, Canvas or Group, then renders canvas\n\t   * (if `renderOnAddRemove` is not `false`).\n\t   * in case of Group no changes to bounding box are made.\n\t   * Objects should be instances of (or inherit from) fabric.Object\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  add: function () {\n\t    this._objects.push.apply(this._objects, arguments);\n\t    if (this._onObjectAdded) {\n\t      for (var i = 0, length = arguments.length; i < length; i++) {\n\t        this._onObjectAdded(arguments[i]);\n\t      }\n\t    }\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * An object should be an instance of (or inherit from) fabric.Object\n\t   * @param {Object} object Object to insert\n\t   * @param {Number} index Index to insert object at\n\t   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  insertAt: function (object, index, nonSplicing) {\n\t    var objects = this.getObjects();\n\t    if (nonSplicing) {\n\t      objects[index] = object;\n\t    }\n\t    else {\n\t      objects.splice(index, 0, object);\n\t    }\n\t    this._onObjectAdded && this._onObjectAdded(object);\n\t    this.renderOnAddRemove && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n\t   * @param {...fabric.Object} object Zero or more fabric instances\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  remove: function() {\n\t    var objects = this.getObjects(),\n\t        index, somethingRemoved = false;\n\t\n\t    for (var i = 0, length = arguments.length; i < length; i++) {\n\t      index = objects.indexOf(arguments[i]);\n\t\n\t      // only call onObjectRemoved if an object was actually removed\n\t      if (index !== -1) {\n\t        somethingRemoved = true;\n\t        objects.splice(index, 1);\n\t        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n\t      }\n\t    }\n\t\n\t    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Executes given function for each object in this group\n\t   * @param {Function} callback\n\t   *                   Callback invoked with current object as first argument,\n\t   *                   index - as second and an array of all objects - as third.\n\t   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n\t   *                   when no `context` argument is given\n\t   *\n\t   * @param {Object} context Context (aka thisObject)\n\t   * @return {Self} thisArg\n\t   * @chainable\n\t   */\n\t  forEachObject: function(callback, context) {\n\t    var objects = this.getObjects();\n\t    for (var i = 0, len = objects.length; i < len; i++) {\n\t      callback.call(context, objects[i], i, objects);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Returns an array of children objects of this instance\n\t   * Type parameter introduced in 1.3.10\n\t   * @param {String} [type] When specified, only objects of this type are returned\n\t   * @return {Array}\n\t   */\n\t  getObjects: function(type) {\n\t    if (typeof type === 'undefined') {\n\t      return this._objects;\n\t    }\n\t    return this._objects.filter(function(o) {\n\t      return o.type === type;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Returns object at specified index\n\t   * @param {Number} index\n\t   * @return {Self} thisArg\n\t   */\n\t  item: function (index) {\n\t    return this.getObjects()[index];\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains no objects\n\t   * @return {Boolean} true if collection is empty\n\t   */\n\t  isEmpty: function () {\n\t    return this.getObjects().length === 0;\n\t  },\n\t\n\t  /**\n\t   * Returns a size of a collection (i.e: length of an array containing its objects)\n\t   * @return {Number} Collection size\n\t   */\n\t  size: function() {\n\t    return this.getObjects().length;\n\t  },\n\t\n\t  /**\n\t   * Returns true if collection contains an object\n\t   * @param {Object} object Object to check against\n\t   * @return {Boolean} `true` if collection contains an object\n\t   */\n\t  contains: function(object) {\n\t    return this.getObjects().indexOf(object) > -1;\n\t  },\n\t\n\t  /**\n\t   * Returns number representation of a collection complexity\n\t   * @return {Number} complexity\n\t   */\n\t  complexity: function () {\n\t    return this.getObjects().reduce(function (memo, current) {\n\t      memo += current.complexity ? current.complexity() : 0;\n\t      return memo;\n\t    }, 0);\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * @namespace fabric.CommonMethods\n\t */\n\tfabric.CommonMethods = {\n\t\n\t  /**\n\t   * Sets object's properties from options\n\t   * @param {Object} [options] Options object\n\t   */\n\t  _setOptions: function(options) {\n\t    for (var prop in options) {\n\t      this.set(prop, options[prop]);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} [filler] Options object\n\t   * @param {String} [property] property to set the Gradient to\n\t   */\n\t  _initGradient: function(filler, property) {\n\t    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n\t      this.set(property, new fabric.Gradient(filler));\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} [filler] Options object\n\t   * @param {String} [property] property to set the Pattern to\n\t   * @param {Function} [callback] callback to invoke after pattern load\n\t   */\n\t  _initPattern: function(filler, property, callback) {\n\t    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n\t      this.set(property, new fabric.Pattern(filler, callback));\n\t    }\n\t    else {\n\t      callback && callback();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} [options] Options object\n\t   */\n\t  _initClipping: function(options) {\n\t    if (!options.clipTo || typeof options.clipTo !== 'string') {\n\t      return;\n\t    }\n\t\n\t    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\t    if (typeof functionBody !== 'undefined') {\n\t      this.clipTo = new Function('ctx', functionBody);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _setObject: function(obj) {\n\t    for (var prop in obj) {\n\t      this._set(prop, obj[prop]);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n\t   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n\t   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  set: function(key, value) {\n\t    if (typeof key === 'object') {\n\t      this._setObject(key);\n\t    }\n\t    else {\n\t      if (typeof value === 'function' && key !== 'clipTo') {\n\t        this._set(key, value(this.get(key)));\n\t      }\n\t      else {\n\t        this._set(key, value);\n\t      }\n\t    }\n\t    return this;\n\t  },\n\t\n\t  _set: function(key, value) {\n\t    this[key] = value;\n\t  },\n\t\n\t  /**\n\t   * Toggles specified property from `true` to `false` or from `false` to `true`\n\t   * @param {String} property Property to toggle\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  toggle: function(property) {\n\t    var value = this.get(property);\n\t    if (typeof value === 'boolean') {\n\t      this.set(property, !value);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Basic getter\n\t   * @param {String} property Property name\n\t   * @return {*} value of a property\n\t   */\n\t  get: function(property) {\n\t    return this[property];\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  var sqrt = Math.sqrt,\n\t      atan2 = Math.atan2,\n\t      pow = Math.pow,\n\t      abs = Math.abs,\n\t      PiBy180 = Math.PI / 180;\n\t\n\t  /**\n\t   * @namespace fabric.util\n\t   */\n\t  fabric.util = {\n\t\n\t    /**\n\t     * Removes value from an array.\n\t     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} array\n\t     * @param {*} value\n\t     * @return {Array} original array\n\t     */\n\t    removeFromArray: function(array, value) {\n\t      var idx = array.indexOf(value);\n\t      if (idx !== -1) {\n\t        array.splice(idx, 1);\n\t      }\n\t      return array;\n\t    },\n\t\n\t    /**\n\t     * Returns random number between 2 specified ones.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} min lower limit\n\t     * @param {Number} max upper limit\n\t     * @return {Number} random value (between min and max)\n\t     */\n\t    getRandomInt: function(min, max) {\n\t      return Math.floor(Math.random() * (max - min + 1)) + min;\n\t    },\n\t\n\t    /**\n\t     * Transforms degrees to radians.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} degrees value in degrees\n\t     * @return {Number} value in radians\n\t     */\n\t    degreesToRadians: function(degrees) {\n\t      return degrees * PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Transforms radians to degrees.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number} radians value in radians\n\t     * @return {Number} value in degrees\n\t     */\n\t    radiansToDegrees: function(radians) {\n\t      return radians / PiBy180;\n\t    },\n\t\n\t    /**\n\t     * Rotates `point` around `origin` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Point} point The point to rotate\n\t     * @param {fabric.Point} origin The origin of the rotation\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {fabric.Point} The new rotated point\n\t     */\n\t    rotatePoint: function(point, origin, radians) {\n\t      point.subtractEquals(origin);\n\t      var v = fabric.util.rotateVector(point, radians);\n\t      return new fabric.Point(v.x, v.y).addEquals(origin);\n\t    },\n\t\n\t    /**\n\t     * Rotates `vector` with `radians`\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} vector The vector to rotate (x and y)\n\t     * @param {Number} radians The radians of the angle for the rotation\n\t     * @return {Object} The new rotated point\n\t     */\n\t    rotateVector: function(vector, radians) {\n\t      var sin = Math.sin(radians),\n\t          cos = Math.cos(radians),\n\t          rx = vector.x * cos - vector.y * sin,\n\t          ry = vector.x * sin + vector.y * cos;\n\t      return {\n\t        x: rx,\n\t        y: ry\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Apply transform t to point p\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {fabric.Point} p The point to transform\n\t     * @param  {Array} t The transform\n\t     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n\t     * @return {fabric.Point} The transformed point\n\t     */\n\t    transformPoint: function(p, t, ignoreOffset) {\n\t      if (ignoreOffset) {\n\t        return new fabric.Point(\n\t          t[0] * p.x + t[2] * p.y,\n\t          t[1] * p.x + t[3] * p.y\n\t        );\n\t      }\n\t      return new fabric.Point(\n\t        t[0] * p.x + t[2] * p.y + t[4],\n\t        t[1] * p.x + t[3] * p.y + t[5]\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n\t     * @param {Array} points 4 points array\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    makeBoundingBoxFromPoints: function(points) {\n\t      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n\t          minX = fabric.util.array.min(xPoints),\n\t          maxX = fabric.util.array.max(xPoints),\n\t          width = Math.abs(minX - maxX),\n\t          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n\t          minY = fabric.util.array.min(yPoints),\n\t          maxY = fabric.util.array.max(yPoints),\n\t          height = Math.abs(minY - maxY);\n\t\n\t      return {\n\t        left: minX,\n\t        top: minY,\n\t        width: width,\n\t        height: height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Invert transformation t\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} t The transform\n\t     * @return {Array} The inverted transform\n\t     */\n\t    invertTransform: function(t) {\n\t      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n\t          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n\t          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n\t      r[4] = -o.x;\n\t      r[5] = -o.y;\n\t      return r;\n\t    },\n\t\n\t    /**\n\t     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Number|String} number number to operate on\n\t     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n\t     * @return {Number}\n\t     */\n\t    toFixed: function(number, fractionDigits) {\n\t      return parseFloat(Number(number).toFixed(fractionDigits));\n\t    },\n\t\n\t    /**\n\t     * Converts from attribute value to pixel value if applicable.\n\t     * Returns converted pixels or original value not converted.\n\t     * @param {Number|String} value number to operate on\n\t     * @param {Number} fontSize\n\t     * @return {Number|String}\n\t     */\n\t    parseUnit: function(value, fontSize) {\n\t      var unit = /\\D{0,2}$/.exec(value),\n\t          number = parseFloat(value);\n\t      if (!fontSize) {\n\t        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t      }\n\t      switch (unit[0]) {\n\t        case 'mm':\n\t          return number * fabric.DPI / 25.4;\n\t\n\t        case 'cm':\n\t          return number * fabric.DPI / 2.54;\n\t\n\t        case 'in':\n\t          return number * fabric.DPI;\n\t\n\t        case 'pt':\n\t          return number * fabric.DPI / 72; // or * 4 / 3\n\t\n\t        case 'pc':\n\t          return number * fabric.DPI / 72 * 12; // or * 16\n\t\n\t        case 'em':\n\t          return number * fontSize;\n\t\n\t        default:\n\t          return number;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Function which always returns `false`.\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {Boolean}\n\t     */\n\t    falseFunction: function() {\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Returns klass \"Class\" object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} type Type of object (eg. 'circle')\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @return {Object} klass \"Class\"\n\t     */\n\t    getKlass: function(type, namespace) {\n\t      // capitalize first letter only\n\t      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n\t      return fabric.util.resolveNamespace(namespace)[type];\n\t    },\n\t\n\t    /**\n\t     * Returns object of given namespace\n\t     * @memberOf fabric.util\n\t     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n\t     * @return {Object} Object for given namespace (default fabric)\n\t     */\n\t    resolveNamespace: function(namespace) {\n\t      if (!namespace) {\n\t        return fabric;\n\t      }\n\t\n\t      var parts = namespace.split('.'),\n\t          len = parts.length, i,\n\t          obj = global || fabric.window;\n\t\n\t      for (i = 0; i < len; ++i) {\n\t        obj = obj[parts[i]];\n\t      }\n\t\n\t      return obj;\n\t    },\n\t\n\t    /**\n\t     * Loads image element from given url and passes it to a callback\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL representing an image\n\t     * @param {Function} callback Callback; invoked with loaded image\n\t     * @param {*} [context] Context to invoke callback in\n\t     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n\t     */\n\t    loadImage: function(url, callback, context, crossOrigin) {\n\t      if (!url) {\n\t        callback && callback.call(context, url);\n\t        return;\n\t      }\n\t\n\t      var img = fabric.util.createImage();\n\t\n\t      /** @ignore */\n\t      img.onload = function () {\n\t        callback && callback.call(context, img);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      /** @ignore */\n\t      img.onerror = function() {\n\t        fabric.log('Error loading ' + img.src);\n\t        callback && callback.call(context, null, true);\n\t        img = img.onload = img.onerror = null;\n\t      };\n\t\n\t      // data-urls appear to be buggy with crossOrigin\n\t      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n\t      // see https://code.google.com/p/chromium/issues/detail?id=315152\n\t      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\t      if (url.indexOf('data') !== 0 && crossOrigin) {\n\t        img.crossOrigin = crossOrigin;\n\t      }\n\t\n\t      img.src = url;\n\t    },\n\t\n\t    /**\n\t     * Creates corresponding fabric instances from their object representations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} objects Objects to enliven\n\t     * @param {Function} callback Callback to invoke when all objects are created\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @param {Function} reviver Method for further parsing of object elements,\n\t     * called after each fabric object created.\n\t     */\n\t    enlivenObjects: function(objects, callback, namespace, reviver) {\n\t      objects = objects || [];\n\t\n\t      function onLoaded() {\n\t        if (++numLoadedObjects === numTotalObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }\n\t      }\n\t\n\t      var enlivenedObjects = [],\n\t          numLoadedObjects = 0,\n\t          numTotalObjects = objects.length,\n\t          forceAsync = true;\n\t\n\t      if (!numTotalObjects) {\n\t        callback && callback(enlivenedObjects);\n\t        return;\n\t      }\n\t\n\t      objects.forEach(function (o, index) {\n\t        // if sparse array\n\t        if (!o || !o.type) {\n\t          onLoaded();\n\t          return;\n\t        }\n\t        var klass = fabric.util.getKlass(o.type, namespace);\n\t        klass.fromObject(o, function (obj, error) {\n\t          error || (enlivenedObjects[index] = obj);\n\t          reviver && reviver(o, obj, error);\n\t          onLoaded();\n\t        }, forceAsync);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Create and wait for loading of patterns\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} objects Objects to enliven\n\t     * @param {Function} callback Callback to invoke when all objects are created\n\t     * @param {String} namespace Namespace to get klass \"Class\" object from\n\t     * @param {Function} reviver Method for further parsing of object elements,\n\t     * called after each fabric object created.\n\t     */\n\t    enlivenPatterns: function(patterns, callback) {\n\t      patterns = patterns || [];\n\t\n\t      function onLoaded() {\n\t        if (++numLoadedPatterns === numPatterns) {\n\t          callback && callback(enlivenedPatterns);\n\t        }\n\t      }\n\t\n\t      var enlivenedPatterns = [],\n\t          numLoadedPatterns = 0,\n\t          numPatterns = patterns.length;\n\t\n\t      if (!numPatterns) {\n\t        callback && callback(enlivenedPatterns);\n\t        return;\n\t      }\n\t\n\t      patterns.forEach(function (p, index) {\n\t        if (p && p.source) {\n\t          new fabric.Pattern(p, function(pattern) {\n\t            enlivenedPatterns[index] = pattern;\n\t            onLoaded();\n\t          });\n\t        }\n\t        else {\n\t          enlivenedPatterns[index] = p;\n\t          onLoaded();\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Groups SVG elements (usually those retrieved from SVG document)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Array} elements SVG elements to group\n\t     * @param {Object} [options] Options object\n\t     * @param {String} path Value to set sourcePath to\n\t     * @return {fabric.Object|fabric.PathGroup}\n\t     */\n\t    groupSVGElements: function(elements, options, path) {\n\t      var object;\n\t\n\t      object = new fabric.PathGroup(elements, options);\n\t\n\t      if (typeof path !== 'undefined') {\n\t        object.setSourcePath(path);\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Populates an object with properties of another object\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} source Source object\n\t     * @param {Object} destination Destination object\n\t     * @return {Array} properties Propertie names to include\n\t     */\n\t    populateWithProperties: function(source, destination, properties) {\n\t      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n\t        for (var i = 0, len = properties.length; i < len; i++) {\n\t          if (properties[i] in source) {\n\t            destination[properties[i]] = source[properties[i]];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Draws a dashed line between two points\n\t     *\n\t     * This method is used to draw dashed line around selection area.\n\t     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x  start x coordinate\n\t     * @param {Number} y start y coordinate\n\t     * @param {Number} x2 end x coordinate\n\t     * @param {Number} y2 end y coordinate\n\t     * @param {Array} da dash array pattern\n\t     */\n\t    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n\t      var dx = x2 - x,\n\t          dy = y2 - y,\n\t          len = sqrt(dx * dx + dy * dy),\n\t          rot = atan2(dy, dx),\n\t          dc = da.length,\n\t          di = 0,\n\t          draw = true;\n\t\n\t      ctx.save();\n\t      ctx.translate(x, y);\n\t      ctx.moveTo(0, 0);\n\t      ctx.rotate(rot);\n\t\n\t      x = 0;\n\t      while (len > x) {\n\t        x += da[di++ % dc];\n\t        if (x > len) {\n\t          x = len;\n\t        }\n\t        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n\t        draw = !draw;\n\t      }\n\t\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Creates canvas element and initializes it via excanvas if necessary\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n\t     * when not given, element is created implicitly\n\t     * @return {CanvasElement} initialized canvas element\n\t     */\n\t    createCanvasElement: function(canvasEl) {\n\t      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n\t      /* eslint-disable camelcase */\n\t      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n\t        G_vmlCanvasManager.initElement(canvasEl);\n\t      }\n\t      /* eslint-enable camelcase */\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * Creates image element (works on client and node)\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @return {HTMLImageElement} HTML image element\n\t     */\n\t    createImage: function() {\n\t      return fabric.isLikelyNode\n\t        ? new (__webpack_require__(12).Image)()\n\t        : fabric.document.createElement('img');\n\t    },\n\t\n\t    /**\n\t     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {Object} klass \"Class\" to create accessors for\n\t     */\n\t    createAccessors: function(klass) {\n\t      var proto = klass.prototype, i, propName,\n\t          capitalizedPropName, setterName, getterName;\n\t\n\t      for (i = proto.stateProperties.length; i--; ) {\n\t\n\t        propName = proto.stateProperties[i];\n\t        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n\t        setterName = 'set' + capitalizedPropName;\n\t        getterName = 'get' + capitalizedPropName;\n\t\n\t        // using `new Function` for better introspection\n\t        if (!proto[getterName]) {\n\t          proto[getterName] = (function(property) {\n\t            return new Function('return this.get(\"' + property + '\")');\n\t          })(propName);\n\t        }\n\t        if (!proto[setterName]) {\n\t          proto[setterName] = (function(property) {\n\t            return new Function('value', 'return this.set(\"' + property + '\", value)');\n\t          })(propName);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param {fabric.Object} receiver Object implementing `clipTo` method\n\t     * @param {CanvasRenderingContext2D} ctx Context to clip\n\t     */\n\t    clipContext: function(receiver, ctx) {\n\t      ctx.save();\n\t      ctx.beginPath();\n\t      receiver.clipTo(ctx);\n\t      ctx.clip();\n\t    },\n\t\n\t    /**\n\t     * Multiply matrix A by matrix B to nest transformations\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a First transformMatrix\n\t     * @param  {Array} b Second transformMatrix\n\t     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n\t     * @return {Array} The product of the two transform matrices\n\t     */\n\t    multiplyTransformMatrices: function(a, b, is2x2) {\n\t      // Matrix multiply a * b\n\t      return [\n\t        a[0] * b[0] + a[2] * b[1],\n\t        a[1] * b[0] + a[3] * b[1],\n\t        a[0] * b[2] + a[2] * b[3],\n\t        a[1] * b[2] + a[3] * b[3],\n\t        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n\t        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Decomposes standard 2x2 matrix into transform componentes\n\t     * @static\n\t     * @memberOf fabric.util\n\t     * @param  {Array} a transformMatrix\n\t     * @return {Object} Components of transform\n\t     */\n\t    qrDecompose: function(a) {\n\t      var angle = atan2(a[1], a[0]),\n\t          denom = pow(a[0], 2) + pow(a[1], 2),\n\t          scaleX = sqrt(denom),\n\t          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n\t          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n\t      return {\n\t        angle: angle  / PiBy180,\n\t        scaleX: scaleX,\n\t        scaleY: scaleY,\n\t        skewX: skewX / PiBy180,\n\t        skewY: 0,\n\t        translateX: a[4],\n\t        translateY: a[5]\n\t      };\n\t    },\n\t\n\t    customTransformMatrix: function(scaleX, scaleY, skewX) {\n\t      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n\t          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n\t      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n\t    },\n\t\n\t    resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.flipX = false;\n\t      target.flipY = false;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of function body\n\t     * @param {Function} fn Function to get body of\n\t     * @return {String} Function body\n\t     */\n\t    getFunctionBody: function(fn) {\n\t      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n\t    },\n\t\n\t    /**\n\t     * Returns true if context has transparent pixel\n\t     * at specified location (taking tolerance into account)\n\t     * @param {CanvasRenderingContext2D} ctx context\n\t     * @param {Number} x x coordinate\n\t     * @param {Number} y y coordinate\n\t     * @param {Number} tolerance Tolerance\n\t     */\n\t    isTransparent: function(ctx, x, y, tolerance) {\n\t\n\t      // If tolerance is > 0 adjust start coords to take into account.\n\t      // If moves off Canvas fix to 0\n\t      if (tolerance > 0) {\n\t        if (x > tolerance) {\n\t          x -= tolerance;\n\t        }\n\t        else {\n\t          x = 0;\n\t        }\n\t        if (y > tolerance) {\n\t          y -= tolerance;\n\t        }\n\t        else {\n\t          y = 0;\n\t        }\n\t      }\n\t\n\t      var _isTransparent = true, i, temp,\n\t          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n\t          l = imageData.data.length;\n\t\n\t      // Split image data - for tolerance > 1, pixelDataSize = 4;\n\t      for (i = 3; i < l; i += 4) {\n\t        temp = imageData.data[i];\n\t        _isTransparent = temp <= 0;\n\t        if (_isTransparent === false) {\n\t          break; // Stop if colour found\n\t        }\n\t      }\n\t\n\t      imageData = null;\n\t\n\t      return _isTransparent;\n\t    },\n\t\n\t    /**\n\t     * Parse preserveAspectRatio attribute from element\n\t     * @param {string} attribute to be parsed\n\t     * @return {Object} an object containing align and meetOrSlice attribute\n\t     */\n\t    parsePreserveAspectRatioAttribute: function(attribute) {\n\t      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n\t          aspectRatioAttrs = attribute.split(' '), align;\n\t\n\t      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n\t        meetOrSlice = aspectRatioAttrs.pop();\n\t        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n\t          align = meetOrSlice;\n\t          meetOrSlice = 'meet';\n\t        }\n\t        else if (aspectRatioAttrs.length) {\n\t          align = aspectRatioAttrs.pop();\n\t        }\n\t      }\n\t      //divide align in alignX and alignY\n\t      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n\t      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n\t      return {\n\t        meetOrSlice: meetOrSlice,\n\t        alignX: alignX,\n\t        alignY: alignY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Clear char widths cache for a font family.\n\t     * @memberOf fabric.util\n\t     * @param {String} [fontFamily] font family to clear\n\t     */\n\t    clearFabricFontCache: function(fontFamily) {\n\t      if (!fontFamily) {\n\t        fabric.charWidthsCache = { };\n\t      }\n\t      else if (fabric.charWidthsCache[fontFamily]) {\n\t        delete fabric.charWidthsCache[fontFamily];\n\t      }\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var arcToSegmentsCache = { },\n\t      segmentToBezierCache = { },\n\t      boundsOfCurveCache = { },\n\t      _join = Array.prototype.join;\n\t\n\t  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n\t   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n\t   * http://mozilla.org/MPL/2.0/\n\t   */\n\t  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n\t    var argsString = _join.call(arguments);\n\t    if (arcToSegmentsCache[argsString]) {\n\t      return arcToSegmentsCache[argsString];\n\t    }\n\t\n\t    var PI = Math.PI, th = rotateX * PI / 180,\n\t        sinTh = Math.sin(th),\n\t        cosTh = Math.cos(th),\n\t        fromX = 0, fromY = 0;\n\t\n\t    rx = Math.abs(rx);\n\t    ry = Math.abs(ry);\n\t\n\t    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n\t        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n\t        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n\t        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n\t        root = 0;\n\t\n\t    if (pl < 0) {\n\t      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n\t      rx *= s;\n\t      ry *= s;\n\t    }\n\t    else {\n\t      root = (large === sweep ? -1.0 : 1.0) *\n\t              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n\t    }\n\t\n\t    var cx = root * rx * py / ry,\n\t        cy = -root * ry * px / rx,\n\t        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n\t        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n\t        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n\t        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\t\n\t    if (sweep === 0 && dtheta > 0) {\n\t      dtheta -= 2 * PI;\n\t    }\n\t    else if (sweep === 1 && dtheta < 0) {\n\t      dtheta += 2 * PI;\n\t    }\n\t\n\t    // Convert into cubic bezier segments <= 90deg\n\t    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n\t        result = [], mDelta = dtheta / segments,\n\t        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n\t        th3 = mTheta + mDelta;\n\t\n\t    for (var i = 0; i < segments; i++) {\n\t      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n\t      fromX = result[i][4];\n\t      fromY = result[i][5];\n\t      mTheta = th3;\n\t      th3 += mDelta;\n\t    }\n\t    arcToSegmentsCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n\t    var argsString2 = _join.call(arguments);\n\t    if (segmentToBezierCache[argsString2]) {\n\t      return segmentToBezierCache[argsString2];\n\t    }\n\t\n\t    var costh2 = Math.cos(th2),\n\t        sinth2 = Math.sin(th2),\n\t        costh3 = Math.cos(th3),\n\t        sinth3 = Math.sin(th3),\n\t        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n\t        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n\t        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n\t        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n\t        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n\t        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\t\n\t    segmentToBezierCache[argsString2] = [\n\t      cp1X, cp1Y,\n\t      cp2X, cp2Y,\n\t      toX, toY\n\t    ];\n\t    return segmentToBezierCache[argsString2];\n\t  }\n\t\n\t  /*\n\t   * Private\n\t   */\n\t  function calcVectorAngle(ux, uy, vx, vy) {\n\t    var ta = Math.atan2(uy, ux),\n\t        tb = Math.atan2(vy, vx);\n\t    if (tb >= ta) {\n\t      return tb - ta;\n\t    }\n\t    else {\n\t      return 2 * Math.PI - (ta - tb);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Draws arc\n\t   * @param {CanvasRenderingContext2D} ctx\n\t   * @param {Number} fx\n\t   * @param {Number} fy\n\t   * @param {Array} coords\n\t   */\n\t  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n\t    var rx = coords[0],\n\t        ry = coords[1],\n\t        rot = coords[2],\n\t        large = coords[3],\n\t        sweep = coords[4],\n\t        tx = coords[5],\n\t        ty = coords[6],\n\t        segs = [[], [], [], []],\n\t        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segsNorm.length; i < len; i++) {\n\t      segs[i][0] = segsNorm[i][0] + fx;\n\t      segs[i][1] = segsNorm[i][1] + fy;\n\t      segs[i][2] = segsNorm[i][2] + fx;\n\t      segs[i][3] = segsNorm[i][3] + fy;\n\t      segs[i][4] = segsNorm[i][4] + fx;\n\t      segs[i][5] = segsNorm[i][5] + fy;\n\t      ctx.bezierCurveTo.apply(ctx, segs[i]);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a elliptic-arc\n\t   * @param {Number} fx start point of arc\n\t   * @param {Number} fy\n\t   * @param {Number} rx horizontal radius\n\t   * @param {Number} ry vertical radius\n\t   * @param {Number} rot angle of horizontal axe\n\t   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n\t   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n\t   * @param {Number} tx end point of arc\n\t   * @param {Number} ty\n\t   */\n\t  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\t\n\t    var fromX = 0, fromY = 0, bound, bounds = [],\n\t        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\t\n\t    for (var i = 0, len = segs.length; i < len; i++) {\n\t      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n\t      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n\t      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n\t      fromX = segs[i][4];\n\t      fromY = segs[i][5];\n\t    }\n\t    return bounds;\n\t  };\n\t\n\t  /**\n\t   * Calculate bounding box of a beziercurve\n\t   * @param {Number} x0 starting point\n\t   * @param {Number} y0\n\t   * @param {Number} x1 first control point\n\t   * @param {Number} y1\n\t   * @param {Number} x2 secondo control point\n\t   * @param {Number} y2\n\t   * @param {Number} x3 end of beizer\n\t   * @param {Number} y3\n\t   */\n\t  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\t  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t    var argsString = _join.call(arguments);\n\t    if (boundsOfCurveCache[argsString]) {\n\t      return boundsOfCurveCache[argsString];\n\t    }\n\t\n\t    var sqrt = Math.sqrt,\n\t        min = Math.min, max = Math.max,\n\t        abs = Math.abs, tvalues = [],\n\t        bounds = [[], []],\n\t        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t\n\t    b = 6 * x0 - 12 * x1 + 6 * x2;\n\t    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t    c = 3 * x1 - 3 * x0;\n\t\n\t    for (var i = 0; i < 2; ++i) {\n\t      if (i > 0) {\n\t        b = 6 * y0 - 12 * y1 + 6 * y2;\n\t        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t        c = 3 * y1 - 3 * y0;\n\t      }\n\t\n\t      if (abs(a) < 1e-12) {\n\t        if (abs(b) < 1e-12) {\n\t          continue;\n\t        }\n\t        t = -c / b;\n\t        if (0 < t && t < 1) {\n\t          tvalues.push(t);\n\t        }\n\t        continue;\n\t      }\n\t      b2ac = b * b - 4 * c * a;\n\t      if (b2ac < 0) {\n\t        continue;\n\t      }\n\t      sqrtb2ac = sqrt(b2ac);\n\t      t1 = (-b + sqrtb2ac) / (2 * a);\n\t      if (0 < t1 && t1 < 1) {\n\t        tvalues.push(t1);\n\t      }\n\t      t2 = (-b - sqrtb2ac) / (2 * a);\n\t      if (0 < t2 && t2 < 1) {\n\t        tvalues.push(t2);\n\t      }\n\t    }\n\t\n\t    var x, y, j = tvalues.length, jlen = j, mt;\n\t    while (j--) {\n\t      t = tvalues[j];\n\t      mt = 1 - t;\n\t      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n\t      bounds[0][j] = x;\n\t\n\t      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n\t      bounds[1][j] = y;\n\t    }\n\t\n\t    bounds[0][jlen] = x0;\n\t    bounds[1][jlen] = y0;\n\t    bounds[0][jlen + 1] = x3;\n\t    bounds[1][jlen + 1] = y3;\n\t    var result = [\n\t      {\n\t        x: min.apply(null, bounds[0]),\n\t        y: min.apply(null, bounds[1])\n\t      },\n\t      {\n\t        x: max.apply(null, bounds[0]),\n\t        y: max.apply(null, bounds[1])\n\t      }\n\t    ];\n\t    boundsOfCurveCache[argsString] = result;\n\t    return result;\n\t  }\n\t\n\t  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice;\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t\n\t  if (!Array.prototype.indexOf) {\n\t    /**\n\t     * Finds index of an element in an array\n\t     * @param {*} searchElement\n\t     * @return {Number}\n\t     */\n\t    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t      if (this === void 0 || this === null) {\n\t        throw new TypeError();\n\t      }\n\t      var t = Object(this), len = t.length >>> 0;\n\t      if (len === 0) {\n\t        return -1;\n\t      }\n\t      var n = 0;\n\t      if (arguments.length > 0) {\n\t        n = Number(arguments[1]);\n\t        if (n !== n) { // shortcut for verifying if it's NaN\n\t          n = 0;\n\t        }\n\t        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n\t          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t        }\n\t      }\n\t      if (n >= len) {\n\t        return -1;\n\t      }\n\t      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t      for (; k < len; k++) {\n\t        if (k in t && t[k] === searchElement) {\n\t          return k;\n\t        }\n\t      }\n\t      return -1;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.forEach) {\n\t    /**\n\t     * Iterates an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.forEach = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.map) {\n\t    /**\n\t     * Returns a result of iterating over an array, invoking callback for each element\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.map = function(fn, context) {\n\t      var result = [];\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          result[i] = fn.call(context, this[i], i, this);\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.every) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for all elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.every = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && !fn.call(context, this[i], i, this)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.some) {\n\t    /**\n\t     * Returns true if a callback returns truthy value for at least one element in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Boolean}\n\t     */\n\t    Array.prototype.some = function(fn, context) {\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this && fn.call(context, this[i], i, this)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.filter) {\n\t    /**\n\t     * Returns the result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @param {Object} [context] Context to invoke callback in\n\t     * @return {Array}\n\t     */\n\t    Array.prototype.filter = function(fn, context) {\n\t      var result = [], val;\n\t      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n\t        if (i in this) {\n\t          val = this[i]; // in case fn mutates this\n\t          if (fn.call(context, val, i, this)) {\n\t            result.push(val);\n\t          }\n\t        }\n\t      }\n\t      return result;\n\t    };\n\t  }\n\t\n\t  if (!Array.prototype.reduce) {\n\t    /**\n\t     * Returns \"folded\" (reduced) result of iterating over elements in an array\n\t     * @param {Function} fn Callback to invoke for each element\n\t     * @return {*}\n\t     */\n\t    Array.prototype.reduce = function(fn /*, initial*/) {\n\t      var len = this.length >>> 0,\n\t          i = 0,\n\t          rv;\n\t\n\t      if (arguments.length > 1) {\n\t        rv = arguments[1];\n\t      }\n\t      else {\n\t        do {\n\t          if (i in this) {\n\t            rv = this[i++];\n\t            break;\n\t          }\n\t          // if array contains no values, no initial value to return\n\t          if (++i >= len) {\n\t            throw new TypeError();\n\t          }\n\t        }\n\t        while (true);\n\t      }\n\t      for (; i < len; i++) {\n\t        if (i in this) {\n\t          rv = fn.call(null, rv, this[i], i, this);\n\t        }\n\t      }\n\t      return rv;\n\t    };\n\t  }\n\t\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Invokes method on all items in a given array\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} method Name of a method to invoke\n\t   * @return {Array}\n\t   */\n\t  function invoke(array, method) {\n\t    var args = slice.call(arguments, 2), result = [];\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Finds maximum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {*}\n\t   */\n\t  function max(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 >= value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Finds minimum value in array (not necessarily \"first\" one)\n\t   * @memberOf fabric.util.array\n\t   * @param {Array} array Array to iterate over\n\t   * @param {String} byProperty\n\t   * @return {*}\n\t   */\n\t  function min(array, byProperty) {\n\t    return find(array, byProperty, function(value1, value2) {\n\t      return value1 < value2;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function fill(array, value) {\n\t    var k = array.length;\n\t    while (k--) {\n\t      array[k] = value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function find(array, byProperty, condition) {\n\t    if (!array || array.length === 0) {\n\t      return;\n\t    }\n\t\n\t    var i = array.length - 1,\n\t        result = byProperty ? array[i][byProperty] : array[i];\n\t    if (byProperty) {\n\t      while (i--) {\n\t        if (condition(array[i][byProperty], result)) {\n\t          result = array[i][byProperty];\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      while (i--) {\n\t        if (condition(array[i], result)) {\n\t          result = array[i];\n\t        }\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * @namespace fabric.util.array\n\t   */\n\t  fabric.util.array = {\n\t    fill: fill,\n\t    invoke: invoke,\n\t    min: min,\n\t    max: max\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t  /**\n\t   * Copies all enumerable properties of one js object to another\n\t   * Does not clone or extend fabric.Object subclasses.\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} destination Where to copy to\n\t   * @param {Object} source Where to copy from\n\t   * @return {Object}\n\t   */\n\t\n\t  function extend(destination, source, deep) {\n\t    // JScript DontEnum bug is not taken care of\n\t    // the deep clone is for internal use, is not meant to avoid\n\t    // javascript traps or cloning html element or self referenced objects.\n\t    if (deep) {\n\t      if (!fabric.isLikelyNode && source instanceof Element) {\n\t        // avoid cloning deep images, canvases,\n\t        destination = source;\n\t      }\n\t      else if (source instanceof Array) {\n\t        destination = [];\n\t        for (var i = 0, len = source.length; i < len; i++) {\n\t          destination[i] = extend({ }, source[i], deep);\n\t        }\n\t      }\n\t      else if (source && typeof source === 'object') {\n\t        for (var property in source) {\n\t          if (source.hasOwnProperty(property)) {\n\t            destination[property] = extend({ }, source[property], deep);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        // this sounds odd for an extend but is ok for recursive use\n\t        destination = source;\n\t      }\n\t    }\n\t    else {\n\t      for (var property in source) {\n\t        destination[property] = source[property];\n\t      }\n\t    }\n\t    return destination;\n\t  }\n\t\n\t  /**\n\t   * Creates an empty object and copies all enumerable properties of another object to it\n\t   * @memberOf fabric.util.object\n\t   * @param {Object} object Object to clone\n\t   * @return {Object}\n\t   */\n\t  function clone(object, deep) {\n\t    return extend({ }, object, deep);\n\t  }\n\t\n\t  /** @namespace fabric.util.object */\n\t  fabric.util.object = {\n\t    extend: extend,\n\t    clone: clone\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  /* _ES5_COMPAT_START_ */\n\t  if (!String.prototype.trim) {\n\t    /**\n\t     * Trims a string (removing whitespace from the beginning and the end)\n\t     * @function external:String#trim\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n\t     */\n\t    String.prototype.trim = function () {\n\t      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n\t      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n\t    };\n\t  }\n\t  /* _ES5_COMPAT_END_ */\n\t\n\t  /**\n\t   * Camelizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to camelize\n\t   * @return {String} Camelized version of a string\n\t   */\n\t  function camelize(string) {\n\t    return string.replace(/-+(.)?/g, function(match, character) {\n\t      return character ? character.toUpperCase() : '';\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Capitalizes a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to capitalize\n\t   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n\t   * and other letters stay untouched, if false first letter is capitalized\n\t   * and other letters are converted to lowercase.\n\t   * @return {String} Capitalized version of a string\n\t   */\n\t  function capitalize(string, firstLetterOnly) {\n\t    return string.charAt(0).toUpperCase() +\n\t      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n\t  }\n\t\n\t  /**\n\t   * Escapes XML in a string\n\t   * @memberOf fabric.util.string\n\t   * @param {String} string String to escape\n\t   * @return {String} Escaped version of a string\n\t   */\n\t  function escapeXml(string) {\n\t    return string.replace(/&/g, '&amp;')\n\t       .replace(/\"/g, '&quot;')\n\t       .replace(/'/g, '&apos;')\n\t       .replace(/</g, '&lt;')\n\t       .replace(/>/g, '&gt;');\n\t  }\n\t\n\t  /**\n\t   * String utilities\n\t   * @namespace fabric.util.string\n\t   */\n\t  fabric.util.string = {\n\t    camelize: camelize,\n\t    capitalize: capitalize,\n\t    escapeXml: escapeXml\n\t  };\n\t})();\n\t\n\t\n\t/* _ES5_COMPAT_START_ */\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice,\n\t      apply = Function.prototype.apply,\n\t      Dummy = function() { };\n\t\n\t  if (!Function.prototype.bind) {\n\t    /**\n\t     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n\t     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n\t     * @param {Object} thisArg Object to bind function to\n\t     * @param {Any[]} Values to pass to a bound function\n\t     * @return {Function}\n\t     */\n\t    Function.prototype.bind = function(thisArg) {\n\t      var _this = this, args = slice.call(arguments, 1), bound;\n\t      if (args.length) {\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n\t        };\n\t      }\n\t      else {\n\t        /** @ignore */\n\t        bound = function() {\n\t          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n\t        };\n\t      }\n\t      Dummy.prototype = this.prototype;\n\t      bound.prototype = new Dummy();\n\t\n\t      return bound;\n\t    };\n\t  }\n\t\n\t})();\n\t/* _ES5_COMPAT_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var slice = Array.prototype.slice, emptyFunction = function() { },\n\t\n\t      IS_DONTENUM_BUGGY = (function() {\n\t        for (var p in { toString: 1 }) {\n\t          if (p === 'toString') {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      })(),\n\t\n\t      /** @ignore */\n\t      addMethods = function(klass, source, parent) {\n\t        for (var property in source) {\n\t\n\t          if (property in klass.prototype &&\n\t              typeof klass.prototype[property] === 'function' &&\n\t              (source[property] + '').indexOf('callSuper') > -1) {\n\t\n\t            klass.prototype[property] = (function(property) {\n\t              return function() {\n\t\n\t                var superclass = this.constructor.superclass;\n\t                this.constructor.superclass = parent;\n\t                var returnValue = source[property].apply(this, arguments);\n\t                this.constructor.superclass = superclass;\n\t\n\t                if (property !== 'initialize') {\n\t                  return returnValue;\n\t                }\n\t              };\n\t            })(property);\n\t          }\n\t          else {\n\t            klass.prototype[property] = source[property];\n\t          }\n\t\n\t          if (IS_DONTENUM_BUGGY) {\n\t            if (source.toString !== Object.prototype.toString) {\n\t              klass.prototype.toString = source.toString;\n\t            }\n\t            if (source.valueOf !== Object.prototype.valueOf) {\n\t              klass.prototype.valueOf = source.valueOf;\n\t            }\n\t          }\n\t        }\n\t      };\n\t\n\t  function Subclass() { }\n\t\n\t  function callSuper(methodName) {\n\t    var fn = this.constructor.superclass.prototype[methodName];\n\t    return (arguments.length > 1)\n\t      ? fn.apply(this, slice.call(arguments, 1))\n\t      : fn.call(this);\n\t  }\n\t\n\t  /**\n\t   * Helper for creation of \"classes\".\n\t   * @memberOf fabric.util\n\t   * @param {Function} [parent] optional \"Class\" to inherit from\n\t   * @param {Object} [properties] Properties shared by all instances of this class\n\t   *                  (be careful modifying objects defined here as this would affect all instances)\n\t   */\n\t  function createClass() {\n\t    var parent = null,\n\t        properties = slice.call(arguments, 0);\n\t\n\t    if (typeof properties[0] === 'function') {\n\t      parent = properties.shift();\n\t    }\n\t    function klass() {\n\t      this.initialize.apply(this, arguments);\n\t    }\n\t\n\t    klass.superclass = parent;\n\t    klass.subclasses = [];\n\t\n\t    if (parent) {\n\t      Subclass.prototype = parent.prototype;\n\t      klass.prototype = new Subclass();\n\t      parent.subclasses.push(klass);\n\t    }\n\t    for (var i = 0, length = properties.length; i < length; i++) {\n\t      addMethods(klass, properties[i], parent);\n\t    }\n\t    if (!klass.prototype.initialize) {\n\t      klass.prototype.initialize = emptyFunction;\n\t    }\n\t    klass.prototype.constructor = klass;\n\t    klass.prototype.callSuper = callSuper;\n\t    return klass;\n\t  }\n\t\n\t  fabric.util.createClass = createClass;\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var unknown = 'unknown';\n\t\n\t  /* EVENT HANDLING */\n\t\n\t  function areHostMethods(object) {\n\t    var methodNames = Array.prototype.slice.call(arguments, 1),\n\t        t, i, len = methodNames.length;\n\t    for (i = 0; i < len; i++) {\n\t      t = typeof object[methodNames[i]];\n\t      if (!(/^(?:function|object|unknown)$/).test(t)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /** @ignore */\n\t  var getElement,\n\t      setElement,\n\t      getUniqueId = (function () {\n\t        var uid = 0;\n\t        return function (element) {\n\t          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n\t        };\n\t      })();\n\t\n\t  (function () {\n\t    var elements = { };\n\t    /** @ignore */\n\t    getElement = function (uid) {\n\t      return elements[uid];\n\t    };\n\t    /** @ignore */\n\t    setElement = function (uid, element) {\n\t      elements[uid] = element;\n\t    };\n\t  })();\n\t\n\t  function createListener(uid, handler) {\n\t    return {\n\t      handler: handler,\n\t      wrappedHandler: createWrappedHandler(uid, handler)\n\t    };\n\t  }\n\t\n\t  function createWrappedHandler(uid, handler) {\n\t    return function (e) {\n\t      handler.call(getElement(uid), e || fabric.window.event);\n\t    };\n\t  }\n\t\n\t  function createDispatcher(uid, eventName) {\n\t    return function (e) {\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          handlersForEvent[i].call(this, e || fabric.window.event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  var shouldUseAddListenerRemoveListener = (\n\t        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n\t        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\t\n\t      shouldUseAttachEventDetachEvent = (\n\t        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n\t        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\t\n\t      // IE branch\n\t      listeners = { },\n\t\n\t      // DOM L0 branch\n\t      handlers = { },\n\t\n\t      addListener, removeListener;\n\t\n\t  if (shouldUseAddListenerRemoveListener) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      element.addEventListener(eventName, handler, false);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      element.removeEventListener(eventName, handler, false);\n\t    };\n\t  }\n\t\n\t  else if (shouldUseAttachEventDetachEvent) {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      setElement(uid, element);\n\t      if (!listeners[uid]) {\n\t        listeners[uid] = { };\n\t      }\n\t      if (!listeners[uid][eventName]) {\n\t        listeners[uid][eventName] = [];\n\t\n\t      }\n\t      var listener = createListener(uid, handler);\n\t      listeners[uid][eventName].push(listener);\n\t      element.attachEvent('on' + eventName, listener.wrappedHandler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element), listener;\n\t      if (listeners[uid] && listeners[uid][eventName]) {\n\t        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n\t          listener = listeners[uid][eventName][i];\n\t          if (listener && listener.handler === handler) {\n\t            element.detachEvent('on' + eventName, listener.wrappedHandler);\n\t            listeners[uid][eventName][i] = null;\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t  else {\n\t    /** @ignore */\n\t    addListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      if (!handlers[uid]) {\n\t        handlers[uid] = { };\n\t      }\n\t      if (!handlers[uid][eventName]) {\n\t        handlers[uid][eventName] = [];\n\t        var existingHandler = element['on' + eventName];\n\t        if (existingHandler) {\n\t          handlers[uid][eventName].push(existingHandler);\n\t        }\n\t        element['on' + eventName] = createDispatcher(uid, eventName);\n\t      }\n\t      handlers[uid][eventName].push(handler);\n\t    };\n\t    /** @ignore */\n\t    removeListener = function (element, eventName, handler) {\n\t      var uid = getUniqueId(element);\n\t      if (handlers[uid] && handlers[uid][eventName]) {\n\t        var handlersForEvent = handlers[uid][eventName];\n\t        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n\t          if (handlersForEvent[i] === handler) {\n\t            handlersForEvent.splice(i, 1);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Adds an event listener to an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.addListener = addListener;\n\t\n\t  /**\n\t   * Removes an event listener from an element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {String} eventName\n\t   * @param {Function} handler\n\t   */\n\t  fabric.util.removeListener = removeListener;\n\t\n\t  /**\n\t   * Cross-browser wrapper for getting event's coordinates\n\t   * @memberOf fabric.util\n\t   * @param {Event} event Event object\n\t   */\n\t  function getPointer(event) {\n\t    event || (event = fabric.window.event);\n\t\n\t    var element = event.target ||\n\t                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\t\n\t        scroll = fabric.util.getScrollLeftTop(element);\n\t\n\t    return {\n\t      x: pointerX(event) + scroll.left,\n\t      y: pointerY(event) + scroll.top\n\t    };\n\t  }\n\t\n\t  var pointerX = function(event) {\n\t    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n\t    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n\t    // need to investigate later\n\t        return (typeof event.clientX !== unknown ? event.clientX : 0);\n\t      },\n\t\n\t      pointerY = function(event) {\n\t        return (typeof event.clientY !== unknown ? event.clientY : 0);\n\t      };\n\t\n\t  function _getPointer(event, pageProp, clientProp) {\n\t    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\t\n\t    return (event[touchProp] && event[touchProp][0]\n\t      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n\t        || event[clientProp]\n\t      : event[clientProp]);\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    pointerX = function(event) {\n\t      return _getPointer(event, 'pageX', 'clientX');\n\t    };\n\t    pointerY = function(event) {\n\t      return _getPointer(event, 'pageY', 'clientY');\n\t    };\n\t  }\n\t\n\t  fabric.util.getPointer = getPointer;\n\t\n\t  fabric.util.object.extend(fabric.util, fabric.Observable);\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  /**\n\t   * Cross-browser wrapper for setting element's style\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element\n\t   * @param {Object} styles\n\t   * @return {HTMLElement} Element that was passed as a first argument\n\t   */\n\t  function setStyle(element, styles) {\n\t    var elementStyle = element.style;\n\t    if (!elementStyle) {\n\t      return element;\n\t    }\n\t    if (typeof styles === 'string') {\n\t      element.style.cssText += ';' + styles;\n\t      return styles.indexOf('opacity') > -1\n\t        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n\t        : element;\n\t    }\n\t    for (var property in styles) {\n\t      if (property === 'opacity') {\n\t        setOpacity(element, styles[property]);\n\t      }\n\t      else {\n\t        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n\t          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n\t          : property;\n\t        elementStyle[normalizedProperty] = styles[property];\n\t      }\n\t    }\n\t    return element;\n\t  }\n\t\n\t  var parseEl = fabric.document.createElement('div'),\n\t      supportsOpacity = typeof parseEl.style.opacity === 'string',\n\t      supportsFilters = typeof parseEl.style.filter === 'string',\n\t      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\t\n\t      /** @ignore */\n\t      setOpacity = function (element) { return element; };\n\t\n\t  if (supportsOpacity) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      element.style.opacity = value;\n\t      return element;\n\t    };\n\t  }\n\t  else if (supportsFilters) {\n\t    /** @ignore */\n\t    setOpacity = function(element, value) {\n\t      var es = element.style;\n\t      if (element.currentStyle && !element.currentStyle.hasLayout) {\n\t        es.zoom = 1;\n\t      }\n\t      if (reOpacity.test(es.filter)) {\n\t        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n\t        es.filter = es.filter.replace(reOpacity, value);\n\t      }\n\t      else {\n\t        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n\t      }\n\t      return element;\n\t    };\n\t  }\n\t\n\t  fabric.util.setStyle = setStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var _slice = Array.prototype.slice;\n\t\n\t  /**\n\t   * Takes id and returns an element with that id (if one exists in a document)\n\t   * @memberOf fabric.util\n\t   * @param {String|HTMLElement} id\n\t   * @return {HTMLElement|null}\n\t   */\n\t  function getById(id) {\n\t    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n\t  }\n\t\n\t  var sliceCanConvertNodelists,\n\t      /**\n\t       * Converts an array-like object (e.g. arguments or NodeList) to an array\n\t       * @memberOf fabric.util\n\t       * @param {Object} arrayLike\n\t       * @return {Array}\n\t       */\n\t      toArray = function(arrayLike) {\n\t        return _slice.call(arrayLike, 0);\n\t      };\n\t\n\t  try {\n\t    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n\t  }\n\t  catch (err) { }\n\t\n\t  if (!sliceCanConvertNodelists) {\n\t    toArray = function(arrayLike) {\n\t      var arr = new Array(arrayLike.length), i = arrayLike.length;\n\t      while (i--) {\n\t        arr[i] = arrayLike[i];\n\t      }\n\t      return arr;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates specified element with specified attributes\n\t   * @memberOf fabric.util\n\t   * @param {String} tagName Type of an element to create\n\t   * @param {Object} [attributes] Attributes to set on an element\n\t   * @return {HTMLElement} Newly created element\n\t   */\n\t  function makeElement(tagName, attributes) {\n\t    var el = fabric.document.createElement(tagName);\n\t    for (var prop in attributes) {\n\t      if (prop === 'class') {\n\t        el.className = attributes[prop];\n\t      }\n\t      else if (prop === 'for') {\n\t        el.htmlFor = attributes[prop];\n\t      }\n\t      else {\n\t        el.setAttribute(prop, attributes[prop]);\n\t      }\n\t    }\n\t    return el;\n\t  }\n\t\n\t  /**\n\t   * Adds class to an element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to add class to\n\t   * @param {String} className Class to add to an element\n\t   */\n\t  function addClass(element, className) {\n\t    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n\t      element.className += (element.className ? ' ' : '') + className;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Wraps element with another element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to wrap\n\t   * @param {HTMLElement|String} wrapper Element to wrap with\n\t   * @param {Object} [attributes] Attributes to set on a wrapper\n\t   * @return {HTMLElement} wrapper\n\t   */\n\t  function wrapElement(element, wrapper, attributes) {\n\t    if (typeof wrapper === 'string') {\n\t      wrapper = makeElement(wrapper, attributes);\n\t    }\n\t    if (element.parentNode) {\n\t      element.parentNode.replaceChild(wrapper, element);\n\t    }\n\t    wrapper.appendChild(element);\n\t    return wrapper;\n\t  }\n\t\n\t  /**\n\t   * Returns element scroll offsets\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to operate on\n\t   * @return {Object} Object with left/top values\n\t   */\n\t  function getScrollLeftTop(element) {\n\t\n\t    var left = 0,\n\t        top = 0,\n\t        docElement = fabric.document.documentElement,\n\t        body = fabric.document.body || {\n\t          scrollLeft: 0, scrollTop: 0\n\t        };\n\t\n\t    // While loop checks (and then sets element to) .parentNode OR .host\n\t    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n\t    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n\t    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n\t    while (element && (element.parentNode || element.host)) {\n\t\n\t      // Set element to element parent, or 'host' in case of ShadowDOM\n\t      element = element.parentNode || element.host;\n\t\n\t      if (element === fabric.document) {\n\t        left = body.scrollLeft || docElement.scrollLeft || 0;\n\t        top = body.scrollTop ||  docElement.scrollTop || 0;\n\t      }\n\t      else {\n\t        left += element.scrollLeft || 0;\n\t        top += element.scrollTop || 0;\n\t      }\n\t\n\t      if (element.nodeType === 1 &&\n\t          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n\t        break;\n\t      }\n\t    }\n\t\n\t    return { left: left, top: top };\n\t  }\n\t\n\t  /**\n\t   * Returns offset for a given element\n\t   * @function\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get offset for\n\t   * @return {Object} Object with \"left\" and \"top\" properties\n\t   */\n\t  function getElementOffset(element) {\n\t    var docElem,\n\t        doc = element && element.ownerDocument,\n\t        box = { left: 0, top: 0 },\n\t        offset = { left: 0, top: 0 },\n\t        scrollLeftTop,\n\t        offsetAttributes = {\n\t          borderLeftWidth: 'left',\n\t          borderTopWidth:  'top',\n\t          paddingLeft:     'left',\n\t          paddingTop:      'top'\n\t        };\n\t\n\t    if (!doc) {\n\t      return offset;\n\t    }\n\t\n\t    for (var attr in offsetAttributes) {\n\t      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n\t    }\n\t\n\t    docElem = doc.documentElement;\n\t    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n\t      box = element.getBoundingClientRect();\n\t    }\n\t\n\t    scrollLeftTop = getScrollLeftTop(element);\n\t\n\t    return {\n\t      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n\t      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Returns style attribute value of a given element\n\t   * @memberOf fabric.util\n\t   * @param {HTMLElement} element Element to get style attribute for\n\t   * @param {String} attr Style attribute to get for element\n\t   * @return {String} Style attribute value of the given element.\n\t   */\n\t  var getElementStyle;\n\t  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n\t    getElementStyle = function(element, attr) {\n\t      var style = fabric.document.defaultView.getComputedStyle(element, null);\n\t      return style ? style[attr] : undefined;\n\t    };\n\t  }\n\t  else {\n\t    getElementStyle = function(element, attr) {\n\t      var value = element.style[attr];\n\t      if (!value && element.currentStyle) {\n\t        value = element.currentStyle[attr];\n\t      }\n\t      return value;\n\t    };\n\t  }\n\t\n\t  (function () {\n\t    var style = fabric.document.documentElement.style,\n\t        selectProp = 'userSelect' in style\n\t          ? 'userSelect'\n\t          : 'MozUserSelect' in style\n\t            ? 'MozUserSelect'\n\t            : 'WebkitUserSelect' in style\n\t              ? 'WebkitUserSelect'\n\t              : 'KhtmlUserSelect' in style\n\t                ? 'KhtmlUserSelect'\n\t                : '';\n\t\n\t    /**\n\t     * Makes element unselectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make unselectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementUnselectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = fabric.util.falseFunction;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = 'none';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = 'on';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    /**\n\t     * Makes element selectable\n\t     * @memberOf fabric.util\n\t     * @param {HTMLElement} element Element to make selectable\n\t     * @return {HTMLElement} Element that was passed in\n\t     */\n\t    function makeElementSelectable(element) {\n\t      if (typeof element.onselectstart !== 'undefined') {\n\t        element.onselectstart = null;\n\t      }\n\t      if (selectProp) {\n\t        element.style[selectProp] = '';\n\t      }\n\t      else if (typeof element.unselectable === 'string') {\n\t        element.unselectable = '';\n\t      }\n\t      return element;\n\t    }\n\t\n\t    fabric.util.makeElementUnselectable = makeElementUnselectable;\n\t    fabric.util.makeElementSelectable = makeElementSelectable;\n\t  })();\n\t\n\t  (function() {\n\t\n\t    /**\n\t     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n\t     * @memberOf fabric.util\n\t     * @param {String} url URL of a script to load\n\t     * @param {Function} callback Callback to execute when script is finished loading\n\t     */\n\t    function getScript(url, callback) {\n\t      var headEl = fabric.document.getElementsByTagName('head')[0],\n\t          scriptEl = fabric.document.createElement('script'),\n\t          loading = true;\n\t\n\t      /** @ignore */\n\t      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n\t        if (loading) {\n\t          if (typeof this.readyState === 'string' &&\n\t              this.readyState !== 'loaded' &&\n\t              this.readyState !== 'complete') {\n\t            return;\n\t          }\n\t          loading = false;\n\t          callback(e || fabric.window.event);\n\t          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n\t        }\n\t      };\n\t      scriptEl.src = url;\n\t      headEl.appendChild(scriptEl);\n\t      // causes issue in Opera\n\t      // headEl.removeChild(scriptEl);\n\t    }\n\t\n\t    fabric.util.getScript = getScript;\n\t  })();\n\t\n\t  fabric.util.getById = getById;\n\t  fabric.util.toArray = toArray;\n\t  fabric.util.makeElement = makeElement;\n\t  fabric.util.addClass = addClass;\n\t  fabric.util.wrapElement = wrapElement;\n\t  fabric.util.getScrollLeftTop = getScrollLeftTop;\n\t  fabric.util.getElementOffset = getElementOffset;\n\t  fabric.util.getElementStyle = getElementStyle;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function addParamToUrl(url, param) {\n\t    return url + (/\\?/.test(url) ? '&' : '?') + param;\n\t  }\n\t\n\t  var makeXHR = (function() {\n\t    var factories = [\n\t      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n\t      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n\t      function() { return new XMLHttpRequest(); }\n\t    ];\n\t    for (var i = factories.length; i--; ) {\n\t      try {\n\t        var req = factories[i]();\n\t        if (req) {\n\t          return factories[i];\n\t        }\n\t      }\n\t      catch (err) { }\n\t    }\n\t  })();\n\t\n\t  function emptyFn() { }\n\t\n\t  /**\n\t   * Cross-browser abstraction for sending XMLHttpRequest\n\t   * @memberOf fabric.util\n\t   * @param {String} url URL to send XMLHttpRequest to\n\t   * @param {Object} [options] Options object\n\t   * @param {String} [options.method=\"GET\"]\n\t   * @param {String} [options.parameters] parameters to append to url in GET or in body\n\t   * @param {String} [options.body] body to send with POST or PUT request\n\t   * @param {Function} options.onComplete Callback to invoke when request is completed\n\t   * @return {XMLHttpRequest} request\n\t   */\n\t  function request(url, options) {\n\t\n\t    options || (options = { });\n\t\n\t    var method = options.method ? options.method.toUpperCase() : 'GET',\n\t        onComplete = options.onComplete || function() { },\n\t        xhr = makeXHR(),\n\t        body = options.body || options.parameters;\n\t\n\t    /** @ignore */\n\t    xhr.onreadystatechange = function() {\n\t      if (xhr.readyState === 4) {\n\t        onComplete(xhr);\n\t        xhr.onreadystatechange = emptyFn;\n\t      }\n\t    };\n\t\n\t    if (method === 'GET') {\n\t      body = null;\n\t      if (typeof options.parameters === 'string') {\n\t        url = addParamToUrl(url, options.parameters);\n\t      }\n\t    }\n\t\n\t    xhr.open(method, url, true);\n\t\n\t    if (method === 'POST' || method === 'PUT') {\n\t      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t    }\n\t\n\t    xhr.send(body);\n\t    return xhr;\n\t  }\n\t\n\t  fabric.util.request = request;\n\t})();\n\t\n\t\n\t/**\n\t * Wrapper around `console.log` (when available)\n\t * @param {*} [values] Values to log\n\t */\n\tfabric.log = function() { };\n\t\n\t/**\n\t * Wrapper around `console.warn` (when available)\n\t * @param {*} [values] Values to log as a warning\n\t */\n\tfabric.warn = function() { };\n\t\n\t/* eslint-disable */\n\tif (typeof console !== 'undefined') {\n\t\n\t  ['log', 'warn'].forEach(function(methodName) {\n\t\n\t    if (typeof console[methodName] !== 'undefined' &&\n\t        typeof console[methodName].apply === 'function') {\n\t\n\t      fabric[methodName] = function() {\n\t        return console[methodName].apply(console, arguments);\n\t      };\n\t    }\n\t  });\n\t}\n\t/* eslint-enable */\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n\t   * @memberOf fabric.util\n\t   * @param {Object} [options] Animation options\n\t   * @param {Function} [options.onChange] Callback; invoked on every value change\n\t   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n\t   * @param {Number} [options.startValue=0] Starting value\n\t   * @param {Number} [options.endValue=100] Ending value\n\t   * @param {Number} [options.byValue=100] Value to modify the property by\n\t   * @param {Function} [options.easing] Easing function\n\t   * @param {Number} [options.duration=500] Duration of change (in ms)\n\t   */\n\t  function animate(options) {\n\t\n\t    requestAnimFrame(function(timestamp) {\n\t      options || (options = { });\n\t\n\t      var start = timestamp || +new Date(),\n\t          duration = options.duration || 500,\n\t          finish = start + duration, time,\n\t          onChange = options.onChange || function() { },\n\t          abort = options.abort || function() { return false; },\n\t          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n\t          startValue = 'startValue' in options ? options.startValue : 0,\n\t          endValue = 'endValue' in options ? options.endValue : 100,\n\t          byValue = options.byValue || endValue - startValue;\n\t\n\t      options.onStart && options.onStart();\n\t\n\t      (function tick(ticktime) {\n\t        time = ticktime || +new Date();\n\t        var currentTime = time > finish ? duration : (time - start);\n\t        if (abort()) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        onChange(easing(currentTime, startValue, byValue, duration));\n\t        if (time > finish) {\n\t          options.onComplete && options.onComplete();\n\t          return;\n\t        }\n\t        requestAnimFrame(tick);\n\t      })(start);\n\t    });\n\t\n\t  }\n\t\n\t  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n\t                          fabric.window.webkitRequestAnimationFrame ||\n\t                          fabric.window.mozRequestAnimationFrame    ||\n\t                          fabric.window.oRequestAnimationFrame      ||\n\t                          fabric.window.msRequestAnimationFrame     ||\n\t                          function(callback) {\n\t                            fabric.window.setTimeout(callback, 1000 / 60);\n\t                          };\n\t\n\t  /**\n\t   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n\t   * @memberOf fabric.util\n\t   * @param {Function} callback Callback to invoke\n\t   * @param {DOMElement} element optional Element to associate with animation\n\t   */\n\t  function requestAnimFrame() {\n\t    return _requestAnimFrame.apply(fabric.window, arguments);\n\t  }\n\t\n\t  fabric.util.animate = animate;\n\t  fabric.util.requestAnimFrame = requestAnimFrame;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t  // Calculate an in-between color. Returns a \"rgba()\" string.\n\t  // Credit: Edwin Martin <edwin@bitstorm.org>\n\t  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n\t  function calculateColor(begin, end, pos) {\n\t    var color = 'rgba('\n\t        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n\t        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n\t        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\t\n\t    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n\t    color += ')';\n\t    return color;\n\t  }\n\t\n\t  /**\n\t   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n\t   * @memberOf fabric.util\n\t   * @param {String} fromColor The starting color in hex or rgb(a) format.\n\t   * @param {String} toColor The starting color in hex or rgb(a) format.\n\t   * @param {Number} [duration] Duration of change (in ms).\n\t   * @param {Object} [options] Animation options\n\t   * @param {Function} [options.onChange] Callback; invoked on every value change\n\t   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n\t   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n\t   */\n\t  function animateColor(fromColor, toColor, duration, options) {\n\t    var startColor = new fabric.Color(fromColor).getSource(),\n\t        endColor = new fabric.Color(toColor).getSource();\n\t\n\t    options = options || {};\n\t\n\t    fabric.util.animate(fabric.util.object.extend(options, {\n\t      duration: duration || 500,\n\t      startValue: startColor,\n\t      endValue: endColor,\n\t      byValue: endColor,\n\t      easing: function (currentTime, startValue, byValue, duration) {\n\t        var posValue = options.colorEasing\n\t              ? options.colorEasing(currentTime, duration)\n\t              : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n\t        return calculateColor(startValue, byValue, posValue);\n\t      }\n\t    }));\n\t  }\n\t\n\t  fabric.util.animateColor = animateColor;\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function normalize(a, c, p, s) {\n\t    if (a < Math.abs(c)) {\n\t      a = c;\n\t      s = p / 4;\n\t    }\n\t    else {\n\t      //handle the 0/0 case:\n\t      if (c === 0 && a === 0) {\n\t        s = p / (2 * Math.PI) * Math.asin(1);\n\t      }\n\t      else {\n\t        s = p / (2 * Math.PI) * Math.asin(c / a);\n\t      }\n\t    }\n\t    return { a: a, c: c, p: p, s: s };\n\t  }\n\t\n\t  function elastic(opts, t, d) {\n\t    return opts.a *\n\t      Math.pow(2, 10 * (t -= 1)) *\n\t      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n\t  }\n\t\n\t  /**\n\t   * Cubic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCubic(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Cubic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCubic(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuart(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuart(t, b, c, d) {\n\t    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quartic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuart(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t + b;\n\t    }\n\t    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInQuint(t, b, c, d) {\n\t    return c * (t /= d) * t * t * t * t + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutQuint(t, b, c, d) {\n\t    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Quintic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutQuint(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * t * t * t * t * t + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInSine(t, b, c, d) {\n\t    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutSine(t, b, c, d) {\n\t    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n\t  }\n\t\n\t  /**\n\t   * Sinusoidal easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutSine(t, b, c, d) {\n\t    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInExpo(t, b, c, d) {\n\t    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutExpo(t, b, c, d) {\n\t    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Exponential easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutExpo(t, b, c, d) {\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    if (t === d) {\n\t      return b + c;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n\t    }\n\t    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInCirc(t, b, c, d) {\n\t    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutCirc(t, b, c, d) {\n\t    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\t  }\n\t\n\t  /**\n\t   * Circular easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutCirc(t, b, c, d) {\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n\t    }\n\t    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return -elastic(opts, t, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d;\n\t    if (t === 1) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * 0.3;\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Elastic easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutElastic(t, b, c, d) {\n\t    var s = 1.70158, p = 0, a = c;\n\t    if (t === 0) {\n\t      return b;\n\t    }\n\t    t /= d / 2;\n\t    if (t === 2) {\n\t      return b + c;\n\t    }\n\t    if (!p) {\n\t      p = d * (0.3 * 1.5);\n\t    }\n\t    var opts = normalize(a, c, p, s);\n\t    if (t < 1) {\n\t      return -0.5 * elastic(opts, t, d) + b;\n\t    }\n\t    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n\t      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\t  }\n\t\n\t  /**\n\t   * Backwards easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBack(t, b, c, d, s) {\n\t    if (s === undefined) {\n\t      s = 1.70158;\n\t    }\n\t    t /= d / 2;\n\t    if (t < 1) {\n\t      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n\t    }\n\t    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInBounce(t, b, c, d) {\n\t    return c - easeOutBounce (d - t, 0, c, d) + b;\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeOutBounce(t, b, c, d) {\n\t    if ((t /= d) < (1 / 2.75)) {\n\t      return c * (7.5625 * t * t) + b;\n\t    }\n\t    else if (t < (2 / 2.75)) {\n\t      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n\t    }\n\t    else if (t < (2.5 / 2.75)) {\n\t      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n\t    }\n\t    else {\n\t      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Bouncing easing in and out\n\t   * @memberOf fabric.util.ease\n\t   */\n\t  function easeInOutBounce(t, b, c, d) {\n\t    if (t < d / 2) {\n\t      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n\t    }\n\t    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\t  }\n\t\n\t  /**\n\t   * Easing functions\n\t   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n\t   * @namespace fabric.util.ease\n\t   */\n\t  fabric.util.ease = {\n\t\n\t    /**\n\t     * Quadratic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInQuad: function(t, b, c, d) {\n\t      return c * (t /= d) * t + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeOutQuad: function(t, b, c, d) {\n\t      return -c * (t /= d) * (t - 2) + b;\n\t    },\n\t\n\t    /**\n\t     * Quadratic easing in and out\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInOutQuad: function(t, b, c, d) {\n\t      t /= (d / 2);\n\t      if (t < 1) {\n\t        return c / 2 * t * t + b;\n\t      }\n\t      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n\t    },\n\t\n\t    /**\n\t     * Cubic easing in\n\t     * @memberOf fabric.util.ease\n\t     */\n\t    easeInCubic: function(t, b, c, d) {\n\t      return c * (t /= d) * t * t + b;\n\t    },\n\t\n\t    easeOutCubic: easeOutCubic,\n\t    easeInOutCubic: easeInOutCubic,\n\t    easeInQuart: easeInQuart,\n\t    easeOutQuart: easeOutQuart,\n\t    easeInOutQuart: easeInOutQuart,\n\t    easeInQuint: easeInQuint,\n\t    easeOutQuint: easeOutQuint,\n\t    easeInOutQuint: easeInOutQuint,\n\t    easeInSine: easeInSine,\n\t    easeOutSine: easeOutSine,\n\t    easeInOutSine: easeInOutSine,\n\t    easeInExpo: easeInExpo,\n\t    easeOutExpo: easeOutExpo,\n\t    easeInOutExpo: easeInOutExpo,\n\t    easeInCirc: easeInCirc,\n\t    easeOutCirc: easeOutCirc,\n\t    easeInOutCirc: easeInOutCirc,\n\t    easeInElastic: easeInElastic,\n\t    easeOutElastic: easeOutElastic,\n\t    easeInOutElastic: easeInOutElastic,\n\t    easeInBack: easeInBack,\n\t    easeOutBack: easeOutBack,\n\t    easeInOutBack: easeInOutBack,\n\t    easeInBounce: easeInBounce,\n\t    easeOutBounce: easeOutBounce,\n\t    easeInOutBounce: easeInOutBounce\n\t  };\n\t\n\t})();\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /**\n\t   * @name fabric\n\t   * @namespace\n\t   */\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      parseUnit = fabric.util.parseUnit,\n\t      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\t\n\t      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n\t      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n\t      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata|clipPath|mask)$/i,\n\t      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\t\n\t      attributesMap = {\n\t        cx:                   'left',\n\t        x:                    'left',\n\t        r:                    'radius',\n\t        cy:                   'top',\n\t        y:                    'top',\n\t        display:              'visible',\n\t        visibility:           'visible',\n\t        transform:            'transformMatrix',\n\t        'fill-opacity':       'fillOpacity',\n\t        'fill-rule':          'fillRule',\n\t        'font-family':        'fontFamily',\n\t        'font-size':          'fontSize',\n\t        'font-style':         'fontStyle',\n\t        'font-weight':        'fontWeight',\n\t        'stroke-dasharray':   'strokeDashArray',\n\t        'stroke-linecap':     'strokeLineCap',\n\t        'stroke-linejoin':    'strokeLineJoin',\n\t        'stroke-miterlimit':  'strokeMiterLimit',\n\t        'stroke-opacity':     'strokeOpacity',\n\t        'stroke-width':       'strokeWidth',\n\t        'text-decoration':    'textDecoration',\n\t        'text-anchor':        'originX'\n\t      },\n\t\n\t      colorAttributes = {\n\t        stroke: 'strokeOpacity',\n\t        fill:   'fillOpacity'\n\t      };\n\t\n\t  fabric.cssRules = { };\n\t  fabric.gradientDefs = { };\n\t\n\t  function normalizeAttr(attr) {\n\t    // transform attribute names\n\t    if (attr in attributesMap) {\n\t      return attributesMap[attr];\n\t    }\n\t    return attr;\n\t  }\n\t\n\t  function normalizeValue(attr, value, parentAttributes, fontSize) {\n\t    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n\t        parsed;\n\t\n\t    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n\t      value = '';\n\t    }\n\t    else if (attr === 'strokeDashArray') {\n\t      if (value === 'none') {\n\t        value = null;\n\t      }\n\t      else {\n\t        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n\t          return parseFloat(n);\n\t        });\n\t      }\n\t    }\n\t    else if (attr === 'transformMatrix') {\n\t      if (parentAttributes && parentAttributes.transformMatrix) {\n\t        value = multiplyTransformMatrices(\n\t          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n\t      }\n\t      else {\n\t        value = fabric.parseTransformAttribute(value);\n\t      }\n\t    }\n\t    else if (attr === 'visible') {\n\t      value = (value === 'none' || value === 'hidden') ? false : true;\n\t      // display=none on parent element always takes precedence over child element\n\t      if (parentAttributes && parentAttributes.visible === false) {\n\t        value = false;\n\t      }\n\t    }\n\t    else if (attr === 'originX' /* text-anchor */) {\n\t      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n\t    }\n\t    else {\n\t      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n\t    }\n\t\n\t    return (!isArray && isNaN(parsed) ? value : parsed);\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} attributes Array of attributes to parse\n\t   */\n\t  function _setStrokeFillOpacity(attributes) {\n\t    for (var attr in colorAttributes) {\n\t\n\t      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n\t        continue;\n\t      }\n\t\n\t      if (typeof attributes[attr] === 'undefined') {\n\t        if (!fabric.Object.prototype[attr]) {\n\t          continue;\n\t        }\n\t        attributes[attr] = fabric.Object.prototype[attr];\n\t      }\n\t\n\t      if (attributes[attr].indexOf('url(') === 0) {\n\t        continue;\n\t      }\n\t\n\t      var color = new fabric.Color(attributes[attr]);\n\t      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n\t    }\n\t    return attributes;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _getMultipleNodes(doc, nodeNames) {\n\t    var nodeName, nodeArray = [], nodeList;\n\t    for (var i = 0; i < nodeNames.length; i++) {\n\t      nodeName = nodeNames[i];\n\t      nodeList = doc.getElementsByTagName(nodeName);\n\t      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n\t    }\n\t    return nodeArray;\n\t  }\n\t\n\t  /**\n\t   * Parses \"transform\" attribute, returning an array of values\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {String} attributeValue String containing attribute value\n\t   * @return {Array} Array of 6 elements representing transformation matrix\n\t   */\n\t  fabric.parseTransformAttribute = (function() {\n\t    function rotateMatrix(matrix, args) {\n\t      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n\t          x = 0, y = 0;\n\t      if (args.length === 3) {\n\t        x = args[1];\n\t        y = args[2];\n\t      }\n\t\n\t      matrix[0] = cos;\n\t      matrix[1] = sin;\n\t      matrix[2] = -sin;\n\t      matrix[3] = cos;\n\t      matrix[4] = x - (cos * x - sin * y);\n\t      matrix[5] = y - (sin * x + cos * y);\n\t    }\n\t\n\t    function scaleMatrix(matrix, args) {\n\t      var multiplierX = args[0],\n\t          multiplierY = (args.length === 2) ? args[1] : args[0];\n\t\n\t      matrix[0] = multiplierX;\n\t      matrix[3] = multiplierY;\n\t    }\n\t\n\t    function skewMatrix(matrix, args, pos) {\n\t      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n\t    }\n\t\n\t    function translateMatrix(matrix, args) {\n\t      matrix[4] = args[0];\n\t      if (args.length === 2) {\n\t        matrix[5] = args[1];\n\t      }\n\t    }\n\t\n\t    // identity matrix\n\t    var iMatrix = [\n\t          1, // a\n\t          0, // b\n\t          0, // c\n\t          1, // d\n\t          0, // e\n\t          0  // f\n\t        ],\n\t\n\t        // == begin transform regexp\n\t        number = fabric.reNum,\n\t\n\t        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\t\n\t        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\t\n\t        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + ')' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n\t                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\t\n\t        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' + commaWsp +\n\t                  '(' + number + ')' +\n\t                  '\\\\s*\\\\))',\n\t\n\t        transform = '(?:' +\n\t                    matrix + '|' +\n\t                    translate + '|' +\n\t                    scale + '|' +\n\t                    rotate + '|' +\n\t                    skewX + '|' +\n\t                    skewY +\n\t                    ')',\n\t\n\t        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\t\n\t        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\t\n\t        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n\t        reTransformList = new RegExp(transformList),\n\t        // == end transform regexp\n\t\n\t        reTransform = new RegExp(transform, 'g');\n\t\n\t    return function(attributeValue) {\n\t\n\t      // start with identity matrix\n\t      var matrix = iMatrix.concat(),\n\t          matrices = [];\n\t\n\t      // return if no argument was given or\n\t      // an argument does not match transform attribute regexp\n\t      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n\t        return matrix;\n\t      }\n\t\n\t      attributeValue.replace(reTransform, function(match) {\n\t\n\t        var m = new RegExp(transform).exec(match).filter(function (match) {\n\t              // match !== '' && match != null\n\t              return (!!match);\n\t            }),\n\t            operation = m[1],\n\t            args = m.slice(2).map(parseFloat);\n\t\n\t        switch (operation) {\n\t          case 'translate':\n\t            translateMatrix(matrix, args);\n\t            break;\n\t          case 'rotate':\n\t            args[0] = fabric.util.degreesToRadians(args[0]);\n\t            rotateMatrix(matrix, args);\n\t            break;\n\t          case 'scale':\n\t            scaleMatrix(matrix, args);\n\t            break;\n\t          case 'skewX':\n\t            skewMatrix(matrix, args, 2);\n\t            break;\n\t          case 'skewY':\n\t            skewMatrix(matrix, args, 1);\n\t            break;\n\t          case 'matrix':\n\t            matrix = args;\n\t            break;\n\t        }\n\t\n\t        // snapshot current matrix into matrices array\n\t        matrices.push(matrix.concat());\n\t        // reset\n\t        matrix = iMatrix.concat();\n\t      });\n\t\n\t      var combinedMatrix = matrices[0];\n\t      while (matrices.length > 1) {\n\t        matrices.shift();\n\t        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n\t      }\n\t      return combinedMatrix;\n\t    };\n\t  })();\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleString(style, oStyle) {\n\t    var attr, value;\n\t    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n\t      var pair = chunk.split(':');\n\t\n\t      attr = normalizeAttr(pair[0].trim().toLowerCase());\n\t      value = normalizeValue(attr, pair[1].trim());\n\t\n\t      oStyle[attr] = value;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseStyleObject(style, oStyle) {\n\t    var attr, value;\n\t    for (var prop in style) {\n\t      if (typeof style[prop] === 'undefined') {\n\t        continue;\n\t      }\n\t\n\t      attr = normalizeAttr(prop.toLowerCase());\n\t      value = normalizeValue(attr, style[prop]);\n\t\n\t      oStyle[attr] = value;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function getGlobalStylesForElement(element, svgUid) {\n\t    var styles = { };\n\t    for (var rule in fabric.cssRules[svgUid]) {\n\t      if (elementMatchesRule(element, rule.split(' '))) {\n\t        for (var property in fabric.cssRules[svgUid][rule]) {\n\t          styles[property] = fabric.cssRules[svgUid][rule][property];\n\t        }\n\t      }\n\t    }\n\t    return styles;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function elementMatchesRule(element, selectors) {\n\t    var firstMatching, parentMatching = true;\n\t    //start from rightmost selector.\n\t    firstMatching = selectorMatches(element, selectors.pop());\n\t    if (firstMatching && selectors.length) {\n\t      parentMatching = doesSomeParentMatch(element, selectors);\n\t    }\n\t    return firstMatching && parentMatching && (selectors.length === 0);\n\t  }\n\t\n\t  function doesSomeParentMatch(element, selectors) {\n\t    var selector, parentMatching = true;\n\t    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n\t      if (parentMatching) {\n\t        selector = selectors.pop();\n\t      }\n\t      element = element.parentNode;\n\t      parentMatching = selectorMatches(element, selector);\n\t    }\n\t    return selectors.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function selectorMatches(element, selector) {\n\t    var nodeName = element.nodeName,\n\t        classNames = element.getAttribute('class'),\n\t        id = element.getAttribute('id'), matcher;\n\t    // i check if a selector matches slicing away part from it.\n\t    // if i get empty string i should match\n\t    matcher = new RegExp('^' + nodeName, 'i');\n\t    selector = selector.replace(matcher, '');\n\t    if (id && selector.length) {\n\t      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n\t      selector = selector.replace(matcher, '');\n\t    }\n\t    if (classNames && selector.length) {\n\t      classNames = classNames.split(' ');\n\t      for (var i = classNames.length; i--;) {\n\t        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n\t        selector = selector.replace(matcher, '');\n\t      }\n\t    }\n\t    return selector.length === 0;\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   * to support IE8 missing getElementById on SVGdocument\n\t   */\n\t  function elementById(doc, id) {\n\t    var el;\n\t    doc.getElementById && (el = doc.getElementById(id));\n\t    if (el) {\n\t      return el;\n\t    }\n\t    var node, i, nodelist = doc.getElementsByTagName('*');\n\t    for (i = 0; i < nodelist.length; i++) {\n\t      node = nodelist[i];\n\t      if (id === node.getAttribute('id')) {\n\t        return node;\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function parseUseDirectives(doc) {\n\t    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\t\n\t    while (nodelist.length && i < nodelist.length) {\n\t      var el = nodelist[i],\n\t          xlink = el.getAttribute('xlink:href').substr(1),\n\t          x = el.getAttribute('x') || 0,\n\t          y = el.getAttribute('y') || 0,\n\t          el2 = elementById(doc, xlink).cloneNode(true),\n\t          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n\t          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\t\n\t      applyViewboxTransform(el2);\n\t      if (/^svg$/i.test(el2.nodeName)) {\n\t        var el3 = el2.ownerDocument.createElement('g');\n\t        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n\t          attr = attrs.item(j);\n\t          el3.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t        // el2.firstChild != null\n\t        while (el2.firstChild) {\n\t          el3.appendChild(el2.firstChild);\n\t        }\n\t        el2 = el3;\n\t      }\n\t\n\t      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n\t        attr = attrs.item(j);\n\t        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n\t          continue;\n\t        }\n\t\n\t        if (attr.nodeName === 'transform') {\n\t          currentTrans = attr.nodeValue + ' ' + currentTrans;\n\t        }\n\t        else {\n\t          el2.setAttribute(attr.nodeName, attr.nodeValue);\n\t        }\n\t      }\n\t\n\t      el2.setAttribute('transform', currentTrans);\n\t      el2.setAttribute('instantiated_by_use', '1');\n\t      el2.removeAttribute('id');\n\t      parentNode = el.parentNode;\n\t      parentNode.replaceChild(el2, el);\n\t      // some browsers do not shorten nodelist after replaceChild (IE8)\n\t      if (nodelist.length === oldLength) {\n\t        i++;\n\t      }\n\t    }\n\t  }\n\t\n\t  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n\t  // matches, e.g.: +14.56e-12, etc.\n\t  var reViewBoxAttrValue = new RegExp(\n\t    '^' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n\t    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n\t    '$'\n\t  );\n\t\n\t  /**\n\t   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n\t   */\n\t  function applyViewboxTransform(element) {\n\t\n\t    var viewBoxAttr = element.getAttribute('viewBox'),\n\t        scaleX = 1,\n\t        scaleY = 1,\n\t        minX = 0,\n\t        minY = 0,\n\t        viewBoxWidth, viewBoxHeight, matrix, el,\n\t        widthAttr = element.getAttribute('width'),\n\t        heightAttr = element.getAttribute('height'),\n\t        x = element.getAttribute('x') || 0,\n\t        y = element.getAttribute('y') || 0,\n\t        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n\t        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n\t                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n\t        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n\t        toBeParsed = missingViewBox && missingDimAttr,\n\t        parsedDim = { }, translateMatrix = '';\n\t\n\t    parsedDim.width = 0;\n\t    parsedDim.height = 0;\n\t    parsedDim.toBeParsed = toBeParsed;\n\t\n\t    if (toBeParsed) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (missingViewBox) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      return parsedDim;\n\t    }\n\t\n\t    minX = -parseFloat(viewBoxAttr[1]);\n\t    minY = -parseFloat(viewBoxAttr[2]);\n\t    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n\t    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\t\n\t    if (!missingDimAttr) {\n\t      parsedDim.width = parseUnit(widthAttr);\n\t      parsedDim.height = parseUnit(heightAttr);\n\t      scaleX = parsedDim.width / viewBoxWidth;\n\t      scaleY = parsedDim.height / viewBoxHeight;\n\t    }\n\t    else {\n\t      parsedDim.width = viewBoxWidth;\n\t      parsedDim.height = viewBoxHeight;\n\t    }\n\t\n\t    // default is to preserve aspect ratio\n\t    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n\t    if (preserveAspectRatio.alignX !== 'none') {\n\t      //translate all container for the effect of Mid, Min, Max\n\t      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n\t    }\n\t\n\t    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n\t      return parsedDim;\n\t    }\n\t\n\t    if (x || y) {\n\t      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n\t    }\n\t\n\t    matrix = translateMatrix + ' matrix(' + scaleX +\n\t                  ' 0' +\n\t                  ' 0 ' +\n\t                  scaleY + ' ' +\n\t                  (minX * scaleX) + ' ' +\n\t                  (minY * scaleY) + ') ';\n\t\n\t    if (element.nodeName === 'svg') {\n\t      el = element.ownerDocument.createElement('g');\n\t      // element.firstChild != null\n\t      while (element.firstChild) {\n\t        el.appendChild(element.firstChild);\n\t      }\n\t      element.appendChild(el);\n\t    }\n\t    else {\n\t      el = element;\n\t      matrix = el.getAttribute('transform') + matrix;\n\t    }\n\t\n\t    el.setAttribute('transform', matrix);\n\t    return parsedDim;\n\t  }\n\t\n\t  function hasAncestorWithNodeName(element, nodeName) {\n\t    while (element && (element = element.parentNode)) {\n\t      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n\t        && !element.getAttribute('instantiated_by_use')) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric\n\t   * @param {SVGDocument} doc SVG document to parse\n\t   * @param {Function} callback Callback to call when parsing is finished;\n\t   * It's being passed an array of elements (parsed from a document).\n\t   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t   */\n\t  fabric.parseSVGDocument = function(doc, callback, reviver) {\n\t    if (!doc) {\n\t      return;\n\t    }\n\t\n\t    parseUseDirectives(doc);\n\t\n\t    var svgUid =  fabric.Object.__uid++,\n\t        options = applyViewboxTransform(doc),\n\t        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\t\n\t    options.svgUid = svgUid;\n\t\n\t    if (descendants.length === 0 && fabric.isLikelyNode) {\n\t      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n\t      // https://github.com/ajaxorg/node-o3-xml/issues/21\n\t      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n\t      var arr = [];\n\t      for (var i = 0, len = descendants.length; i < len; i++) {\n\t        arr[i] = descendants[i];\n\t      }\n\t      descendants = arr;\n\t    }\n\t\n\t    var elements = descendants.filter(function(el) {\n\t      applyViewboxTransform(el);\n\t      return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n\t            !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n\t    });\n\t\n\t    if (!elements || (elements && !elements.length)) {\n\t      callback && callback([], {});\n\t      return;\n\t    }\n\t\n\t    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n\t    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n\t    // Precedence of rules:   style > class > attribute\n\t    fabric.parseElements(elements, function(instances) {\n\t      if (callback) {\n\t        callback(instances, options);\n\t      }\n\t    }, clone(options), reviver);\n\t  };\n\t\n\t  var reFontDeclaration = new RegExp(\n\t    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n\t    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n\t      fabric.reNum +\n\t    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\t\n\t  extend(fabric, {\n\t    /**\n\t     * Parses a short font declaration, building adding its properties to a style object\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {String} value font declaration\n\t     * @param {Object} oStyle definition\n\t     */\n\t    parseFontDeclaration: function(value, oStyle) {\n\t      var match = value.match(reFontDeclaration);\n\t\n\t      if (!match) {\n\t        return;\n\t      }\n\t      var fontStyle = match[1],\n\t          // font variant is not used\n\t          // fontVariant = match[2],\n\t          fontWeight = match[3],\n\t          fontSize = match[4],\n\t          lineHeight = match[5],\n\t          fontFamily = match[6];\n\t\n\t      if (fontStyle) {\n\t        oStyle.fontStyle = fontStyle;\n\t      }\n\t      if (fontWeight) {\n\t        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n\t      }\n\t      if (fontSize) {\n\t        oStyle.fontSize = parseUnit(fontSize);\n\t      }\n\t      if (fontFamily) {\n\t        oStyle.fontFamily = fontFamily;\n\t      }\n\t      if (lineHeight) {\n\t        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Parses an SVG document, returning all of the gradient declarations found in it\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n\t     */\n\t    getGradientDefs: function(doc) {\n\t      var tagArray = [\n\t            'linearGradient',\n\t            'radialGradient',\n\t            'svg:linearGradient',\n\t            'svg:radialGradient'],\n\t          elList = _getMultipleNodes(doc, tagArray),\n\t          el, j = 0, id, xlink,\n\t          gradientDefs = { }, idsToXlinkMap = { };\n\t\n\t      j = elList.length;\n\t\n\t      while (j--) {\n\t        el = elList[j];\n\t        xlink = el.getAttribute('xlink:href');\n\t        id = el.getAttribute('id');\n\t        if (xlink) {\n\t          idsToXlinkMap[id] = xlink.substr(1);\n\t        }\n\t        gradientDefs[id] = el;\n\t      }\n\t\n\t      for (id in idsToXlinkMap) {\n\t        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n\t        el = gradientDefs[id];\n\t        while (el2.firstChild) {\n\t          el.appendChild(el2.firstChild);\n\t        }\n\t      }\n\t      return gradientDefs;\n\t    },\n\t\n\t    /**\n\t     * Returns an object of attributes' name/value, given element and an array of attribute names;\n\t     * Parses parent \"g\" nodes recursively upwards.\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {DOMElement} element Element to parse\n\t     * @param {Array} attributes Array of attributes to parse\n\t     * @return {Object} object containing parsed attributes' names/values\n\t     */\n\t    parseAttributes: function(element, attributes, svgUid) {\n\t\n\t      if (!element) {\n\t        return;\n\t      }\n\t\n\t      var value,\n\t          parentAttributes = { },\n\t          fontSize;\n\t\n\t      if (typeof svgUid === 'undefined') {\n\t        svgUid = element.getAttribute('svgUid');\n\t      }\n\t      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\t      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n\t        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n\t      }\n\t      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n\t                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t\n\t      var ownAttributes = attributes.reduce(function(memo, attr) {\n\t        value = element.getAttribute(attr);\n\t        if (value) {\n\t          attr = normalizeAttr(attr);\n\t          value = normalizeValue(attr, value, parentAttributes, fontSize);\n\t\n\t          memo[attr] = value;\n\t        }\n\t        return memo;\n\t      }, { });\n\t\n\t      // add values parsed from style, which take precedence over attributes\n\t      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\t      ownAttributes = extend(ownAttributes,\n\t        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\t      if (ownAttributes.font) {\n\t        fabric.parseFontDeclaration(ownAttributes.font, ownAttributes);\n\t      }\n\t      return _setStrokeFillOpacity(extend(parentAttributes, ownAttributes));\n\t    },\n\t\n\t    /**\n\t     * Transforms an array of svg elements to corresponding fabric.* instances\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {Array} elements Array of elements to parse\n\t     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n\t     * @param {Object} [options] Options object\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    parseElements: function(elements, callback, options, reviver) {\n\t      new fabric.ElementsParser(elements, callback, options, reviver).parse();\n\t    },\n\t\n\t    /**\n\t     * Parses \"style\" attribute, retuning an object with values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {SVGElement} element Element to parse\n\t     * @return {Object} Objects with values parsed from style attribute of an element\n\t     */\n\t    parseStyleAttribute: function(element) {\n\t      var oStyle = { },\n\t          style = element.getAttribute('style');\n\t\n\t      if (!style) {\n\t        return oStyle;\n\t      }\n\t\n\t      if (typeof style === 'string') {\n\t        parseStyleString(style, oStyle);\n\t      }\n\t      else {\n\t        parseStyleObject(style, oStyle);\n\t      }\n\t\n\t      return oStyle;\n\t    },\n\t\n\t    /**\n\t     * Parses \"points\" attribute, returning an array of values\n\t     * @static\n\t     * @memberOf fabric\n\t     * @param {String} points points attribute string\n\t     * @return {Array} array of points\n\t     */\n\t    parsePointsAttribute: function(points) {\n\t\n\t      // points attribute is required and must not be empty\n\t      if (!points) {\n\t        return null;\n\t      }\n\t\n\t      // replace commas with whitespace and remove bookending whitespace\n\t      points = points.replace(/,/g, ' ').trim();\n\t\n\t      points = points.split(/\\s+/);\n\t      var parsedPoints = [], i, len;\n\t\n\t      i = 0;\n\t      len = points.length;\n\t      for (; i < len; i += 2) {\n\t        parsedPoints.push({\n\t          x: parseFloat(points[i]),\n\t          y: parseFloat(points[i + 1])\n\t        });\n\t      }\n\t\n\t      // odd number of points is an error\n\t      // if (parsedPoints.length % 2 !== 0) {\n\t      //   return null;\n\t      // }\n\t\n\t      return parsedPoints;\n\t    },\n\t\n\t    /**\n\t     * Returns CSS rules for a given SVG document\n\t     * @static\n\t     * @function\n\t     * @memberOf fabric\n\t     * @param {SVGDocument} doc SVG document to parse\n\t     * @return {Object} CSS rules of this document\n\t     */\n\t    getCSSRules: function(doc) {\n\t      var styles = doc.getElementsByTagName('style'),\n\t          allRules = { }, rules;\n\t\n\t      // very crude parsing of style contents\n\t      for (var i = 0, len = styles.length; i < len; i++) {\n\t        // IE9 doesn't support textContent, but provides text instead.\n\t        var styleContents = styles[i].textContent || styles[i].text;\n\t\n\t        // remove comments\n\t        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\t        if (styleContents.trim() === '') {\n\t          continue;\n\t        }\n\t        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n\t        rules = rules.map(function(rule) { return rule.trim(); });\n\t        rules.forEach(function(rule) {\n\t\n\t          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n\t              ruleObj = { }, declaration = match[2].trim(),\n\t              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\t\n\t          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n\t            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n\t                property = normalizeAttr(pair[0]),\n\t                value = normalizeValue(property, pair[1], pair[0]);\n\t            ruleObj[property] = value;\n\t          }\n\t          rule = match[1];\n\t          rule.split(',').forEach(function(_rule) {\n\t            _rule = _rule.replace(/^svg/i, '').trim();\n\t            if (_rule === '') {\n\t              return;\n\t            }\n\t            if (allRules[_rule]) {\n\t              fabric.util.object.extend(allRules[_rule], ruleObj);\n\t            }\n\t            else {\n\t              allRules[_rule] = fabric.util.object.clone(ruleObj);\n\t            }\n\t          });\n\t        });\n\t      }\n\t      return allRules;\n\t    },\n\t\n\t    /**\n\t     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n\t     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n\t     * @memberOf fabric\n\t     * @param {String} url\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    loadSVGFromURL: function(url, callback, reviver) {\n\t\n\t      url = url.replace(/^\\n\\s*/, '').trim();\n\t      new fabric.util.request(url, {\n\t        method: 'get',\n\t        onComplete: onComplete\n\t      });\n\t\n\t      function onComplete(r) {\n\t\n\t        var xml = r.responseXML;\n\t        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n\t          xml = new ActiveXObject('Microsoft.XMLDOM');\n\t          xml.async = 'false';\n\t          //IE chokes on DOCTYPE\n\t          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t        }\n\t        if (!xml || !xml.documentElement) {\n\t          callback && callback(null);\n\t        }\n\t\n\t        fabric.parseSVGDocument(xml.documentElement, function (results, options) {\n\t          callback && callback(results, options);\n\t        }, reviver);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n\t     * @memberOf fabric\n\t     * @param {String} string\n\t     * @param {Function} callback\n\t     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n\t     */\n\t    loadSVGFromString: function(string, callback, reviver) {\n\t      string = string.trim();\n\t      var doc;\n\t      if (typeof DOMParser !== 'undefined') {\n\t        var parser = new DOMParser();\n\t        if (parser && parser.parseFromString) {\n\t          doc = parser.parseFromString(string, 'text/xml');\n\t        }\n\t      }\n\t      else if (fabric.window.ActiveXObject) {\n\t        doc = new ActiveXObject('Microsoft.XMLDOM');\n\t        doc.async = 'false';\n\t        // IE chokes on DOCTYPE\n\t        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n\t      }\n\t\n\t      fabric.parseSVGDocument(doc.documentElement, function (results, options) {\n\t        callback(results, options);\n\t      }, reviver);\n\t    }\n\t  });\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.ElementsParser = function(elements, callback, options, reviver) {\n\t  this.elements = elements;\n\t  this.callback = callback;\n\t  this.options = options;\n\t  this.reviver = reviver;\n\t  this.svgUid = (options && options.svgUid) || 0;\n\t};\n\t\n\tfabric.ElementsParser.prototype.parse = function() {\n\t  this.instances = new Array(this.elements.length);\n\t  this.numElements = this.elements.length;\n\t\n\t  this.createObjects();\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObjects = function() {\n\t  for (var i = 0, len = this.elements.length; i < len; i++) {\n\t    this.elements[i].setAttribute('svgUid', this.svgUid);\n\t    (function(_obj, i) {\n\t      setTimeout(function() {\n\t        _obj.createObject(_obj.elements[i], i);\n\t      }, 0);\n\t    })(this, i);\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createObject = function(el, index) {\n\t  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n\t  if (klass && klass.fromElement) {\n\t    try {\n\t      this._createObject(klass, el, index);\n\t    }\n\t    catch (err) {\n\t      fabric.log(err);\n\t    }\n\t  }\n\t  else {\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n\t  if (klass.async) {\n\t    klass.fromElement(el, this.createCallback(index, el), this.options);\n\t  }\n\t  else {\n\t    var obj = klass.fromElement(el, this.options);\n\t    this.resolveGradient(obj, 'fill');\n\t    this.resolveGradient(obj, 'stroke');\n\t    this.reviver && this.reviver(el, obj);\n\t    this.instances[index] = obj;\n\t    this.checkIfDone();\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.createCallback = function(index, el) {\n\t  var _this = this;\n\t  return function(obj) {\n\t    _this.resolveGradient(obj, 'fill');\n\t    _this.resolveGradient(obj, 'stroke');\n\t    _this.reviver && _this.reviver(el, obj);\n\t    _this.instances[index] = obj;\n\t    _this.checkIfDone();\n\t  };\n\t};\n\t\n\tfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\t\n\t  var instanceFillValue = obj.get(property);\n\t  if (!(/^url\\(/).test(instanceFillValue)) {\n\t    return;\n\t  }\n\t  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n\t  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n\t    obj.set(property,\n\t      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n\t  }\n\t};\n\t\n\tfabric.ElementsParser.prototype.checkIfDone = function() {\n\t  if (--this.numElements === 0) {\n\t    this.instances = this.instances.filter(function(el) {\n\t      // eslint-disable-next-line no-eq-null, eqeqeq\n\t      return el != null;\n\t    });\n\t    this.callback(this.instances);\n\t  }\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Point) {\n\t    fabric.warn('fabric.Point is already defined');\n\t    return;\n\t  }\n\t\n\t  fabric.Point = Point;\n\t\n\t  /**\n\t   * Point class\n\t   * @class fabric.Point\n\t   * @memberOf fabric\n\t   * @constructor\n\t   * @param {Number} x\n\t   * @param {Number} y\n\t   * @return {fabric.Point} thisArg\n\t   */\n\t  function Point(x, y) {\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  Point.prototype = /** @lends fabric.Point.prototype */ {\n\t\n\t    type: 'point',\n\t\n\t    constructor: Point,\n\t\n\t    /**\n\t     * Adds another point to this one and returns another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point instance with added values\n\t     */\n\t    add: function (that) {\n\t      return new Point(this.x + that.x, this.y + that.y);\n\t    },\n\t\n\t    /**\n\t     * Adds another point to this one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    addEquals: function (that) {\n\t      this.x += that.x;\n\t      this.y += that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} new Point with added value\n\t     */\n\t    scalarAdd: function (scalar) {\n\t      return new Point(this.x + scalar, this.y + scalar);\n\t    },\n\t\n\t    /**\n\t     * Adds value to this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    scalarAddEquals: function (scalar) {\n\t      this.x += scalar;\n\t      this.y += scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point and returns a new one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} new Point object with subtracted values\n\t     */\n\t    subtract: function (that) {\n\t      return new Point(this.x - that.x, this.y - that.y);\n\t    },\n\t\n\t    /**\n\t     * Subtracts another point from this point\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    subtractEquals: function (that) {\n\t      this.x -= that.x;\n\t      this.y -= that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point and returns a new one\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    scalarSubtract: function (scalar) {\n\t      return new Point(this.x - scalar, this.y - scalar);\n\t    },\n\t\n\t    /**\n\t     * Subtracts value from this point\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    scalarSubtractEquals: function (scalar) {\n\t      this.x -= scalar;\n\t      this.y -= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value and returns a new one\n\t     * TODO: rename in scalarMultiply in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    multiply: function (scalar) {\n\t      return new Point(this.x * scalar, this.y * scalar);\n\t    },\n\t\n\t    /**\n\t     * Miltiplies this point by a value\n\t     * TODO: rename in scalarMultiplyEquals in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    multiplyEquals: function (scalar) {\n\t      this.x *= scalar;\n\t      this.y *= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value and returns a new one\n\t     * TODO: rename in scalarDivide in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point}\n\t     */\n\t    divide: function (scalar) {\n\t      return new Point(this.x / scalar, this.y / scalar);\n\t    },\n\t\n\t    /**\n\t     * Divides this point by a value\n\t     * TODO: rename in scalarDivideEquals in 2.0\n\t     * @param {Number} scalar\n\t     * @return {fabric.Point} thisArg\n\t     * @chainable\n\t     */\n\t    divideEquals: function (scalar) {\n\t      this.x /= scalar;\n\t      this.y /= scalar;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    eq: function (that) {\n\t      return (this.x === that.x && this.y === that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lt: function (that) {\n\t      return (this.x < that.x && this.y < that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is less than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    lte: function (that) {\n\t      return (this.x <= that.x && this.y <= that.y);\n\t    },\n\t\n\t    /**\n\t\n\t     * Returns true if this point is greater another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gt: function (that) {\n\t      return (this.x > that.x && this.y > that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns true if this point is greater than or equal to another one\n\t     * @param {fabric.Point} that\n\t     * @return {Boolean}\n\t     */\n\t    gte: function (that) {\n\t      return (this.x >= that.x && this.y >= that.y);\n\t    },\n\t\n\t    /**\n\t     * Returns new point which is the result of linear interpolation with this one and another one\n\t     * @param {fabric.Point} that\n\t     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n\t     * @return {fabric.Point}\n\t     */\n\t    lerp: function (that, t) {\n\t      if (typeof t === 'undefined') {\n\t        t = 0.5;\n\t      }\n\t      t = Math.max(Math.min(1, t), 0);\n\t      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n\t    },\n\t\n\t    /**\n\t     * Returns distance from this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {Number}\n\t     */\n\t    distanceFrom: function (that) {\n\t      var dx = this.x - that.x,\n\t          dy = this.y - that.y;\n\t      return Math.sqrt(dx * dx + dy * dy);\n\t    },\n\t\n\t    /**\n\t     * Returns the point between this point and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    midPointFrom: function (that) {\n\t      return this.lerp(that);\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the min of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    min: function (that) {\n\t      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns a new point which is the max of this and another one\n\t     * @param {fabric.Point} that\n\t     * @return {fabric.Point}\n\t     */\n\t    max: function (that) {\n\t      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of this point\n\t     * @return {String}\n\t     */\n\t    toString: function () {\n\t      return this.x + ',' + this.y;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point\n\t     * @param {Number} x\n\t     * @param {Number} y\n\t     * @chainable\n\t     */\n\t    setXY: function (x, y) {\n\t      this.x = x;\n\t      this.y = y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets x of this point\n\t     * @param {Number} x\n\t     * @chainable\n\t     */\n\t    setX: function (x) {\n\t      this.x = x;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets y of this point\n\t     * @param {Number} y\n\t     * @chainable\n\t     */\n\t    setY: function (y) {\n\t      this.y = y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets x/y of this point from another point\n\t     * @param {fabric.Point} that\n\t     * @chainable\n\t     */\n\t    setFromPoint: function (that) {\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Swaps x/y of this point and another point\n\t     * @param {fabric.Point} that\n\t     */\n\t    swap: function (that) {\n\t      var x = this.x,\n\t          y = this.y;\n\t      this.x = that.x;\n\t      this.y = that.y;\n\t      that.x = x;\n\t      that.y = y;\n\t    },\n\t\n\t    /**\n\t     * return a cloned instance of the point\n\t     * @return {fabric.Point}\n\t     */\n\t    clone: function () {\n\t      return new Point(this.x, this.y);\n\t    }\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Intersection) {\n\t    fabric.warn('fabric.Intersection is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Intersection class\n\t   * @class fabric.Intersection\n\t   * @memberOf fabric\n\t   * @constructor\n\t   */\n\t  function Intersection(status) {\n\t    this.status = status;\n\t    this.points = [];\n\t  }\n\t\n\t  fabric.Intersection = Intersection;\n\t\n\t  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\t\n\t    constructor: Intersection,\n\t\n\t    /**\n\t     * Appends a point to intersection\n\t     * @param {fabric.Point} point\n\t     * @return {fabric.Intersection} thisArg\n\t     * @chainable\n\t     */\n\t    appendPoint: function (point) {\n\t      this.points.push(point);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Appends points to intersection\n\t     * @param {Array} points\n\t     * @return {fabric.Intersection} thisArg\n\t     * @chainable\n\t     */\n\t    appendPoints: function (points) {\n\t      this.points = this.points.concat(points);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Checks if one line intersects another\n\t   * TODO: rename in intersectSegmentSegment\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {fabric.Point} b1\n\t   * @param {fabric.Point} b2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n\t    var result,\n\t        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n\t        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n\t        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\t    if (uB !== 0) {\n\t      var ua = uaT / uB,\n\t          ub = ubT / uB;\n\t      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n\t        result = new Intersection('Intersection');\n\t        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n\t      }\n\t      else {\n\t        result = new Intersection();\n\t      }\n\t    }\n\t    else {\n\t      if (uaT === 0 || ubT === 0) {\n\t        result = new Intersection('Coincident');\n\t      }\n\t      else {\n\t        result = new Intersection('Parallel');\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if line intersects polygon\n\t   * TODO: rename in intersectSegmentPolygon\n\t   * fix detection of coincident\n\t   * @static\n\t   * @param {fabric.Point} a1\n\t   * @param {fabric.Point} a2\n\t   * @param {Array} points\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n\t    var result = new Intersection(),\n\t        length = points.length,\n\t        b1, b2, inter;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      b1 = points[i];\n\t      b2 = points[(i + 1) % length];\n\t      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects another polygon\n\t   * @static\n\t   * @param {Array} points1\n\t   * @param {Array} points2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n\t    var result = new Intersection(),\n\t        length = points1.length;\n\t\n\t    for (var i = 0; i < length; i++) {\n\t      var a1 = points1[i],\n\t          a2 = points1[(i + 1) % length],\n\t          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\t\n\t      result.appendPoints(inter.points);\n\t    }\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t  /**\n\t   * Checks if polygon intersects rectangle\n\t   * @static\n\t   * @param {Array} points\n\t   * @param {fabric.Point} r1\n\t   * @param {fabric.Point} r2\n\t   * @return {fabric.Intersection}\n\t   */\n\t  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n\t    var min = r1.min(r2),\n\t        max = r1.max(r2),\n\t        topRight = new fabric.Point(max.x, min.y),\n\t        bottomLeft = new fabric.Point(min.x, max.y),\n\t        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n\t        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n\t        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n\t        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n\t        result = new Intersection();\n\t\n\t    result.appendPoints(inter1.points);\n\t    result.appendPoints(inter2.points);\n\t    result.appendPoints(inter3.points);\n\t    result.appendPoints(inter4.points);\n\t\n\t    if (result.points.length > 0) {\n\t      result.status = 'Intersection';\n\t    }\n\t    return result;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Color) {\n\t    fabric.warn('fabric.Color is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Color class\n\t   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n\t   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n\t   *\n\t   * @class fabric.Color\n\t   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n\t   * @return {fabric.Color} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n\t   */\n\t  function Color(color) {\n\t    if (!color) {\n\t      this.setSource([0, 0, 0, 1]);\n\t    }\n\t    else {\n\t      this._tryParsingColor(color);\n\t    }\n\t  }\n\t\n\t  fabric.Color = Color;\n\t\n\t  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {String|Array} color Color value to parse\n\t     */\n\t    _tryParsingColor: function(color) {\n\t      var source;\n\t\n\t      if (color in Color.colorNameMap) {\n\t        color = Color.colorNameMap[color];\n\t      }\n\t\n\t      if (color === 'transparent') {\n\t        source = [255, 255, 255, 0];\n\t      }\n\t\n\t      if (!source) {\n\t        source = Color.sourceFromHex(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromRgb(color);\n\t      }\n\t      if (!source) {\n\t        source = Color.sourceFromHsl(color);\n\t      }\n\t      if (!source) {\n\t        //if color is not recognize let's make black as canvas does\n\t        source = [0, 0, 0, 1];\n\t      }\n\t      if (source) {\n\t        this.setSource(source);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t     * @private\n\t     * @param {Number} r Red color value\n\t     * @param {Number} g Green color value\n\t     * @param {Number} b Blue color value\n\t     * @return {Array} Hsl color\n\t     */\n\t    _rgbToHsl: function(r, g, b) {\n\t      r /= 255; g /= 255; b /= 255;\n\t\n\t      var h, s, l,\n\t          max = fabric.util.array.max([r, g, b]),\n\t          min = fabric.util.array.min([r, g, b]);\n\t\n\t      l = (max + min) / 2;\n\t\n\t      if (max === min) {\n\t        h = s = 0; // achromatic\n\t      }\n\t      else {\n\t        var d = max - min;\n\t        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t        switch (max) {\n\t          case r:\n\t            h = (g - b) / d + (g < b ? 6 : 0);\n\t            break;\n\t          case g:\n\t            h = (b - r) / d + 2;\n\t            break;\n\t          case b:\n\t            h = (r - g) / d + 4;\n\t            break;\n\t        }\n\t        h /= 6;\n\t      }\n\t\n\t      return [\n\t        Math.round(h * 360),\n\t        Math.round(s * 100),\n\t        Math.round(l * 100)\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @return {Array}\n\t     */\n\t    getSource: function() {\n\t      return this._source;\n\t    },\n\t\n\t    /**\n\t     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n\t     * @param {Array} source\n\t     */\n\t    setSource: function(source) {\n\t      this._source = source;\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in RGB format\n\t     * @return {String} ex: rgb(0-255,0-255,0-255)\n\t     */\n\t    toRgb: function() {\n\t      var source = this.getSource();\n\t      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in RGBA format\n\t     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n\t     */\n\t    toRgba: function() {\n\t      var source = this.getSource();\n\t      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HSL format\n\t     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n\t     */\n\t    toHsl: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HSLA format\n\t     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n\t     */\n\t    toHsla: function() {\n\t      var source = this.getSource(),\n\t          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\t\n\t      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n\t    },\n\t\n\t    /**\n\t     * Returns color represenation in HEX format\n\t     * @return {String} ex: FF5555\n\t     */\n\t    toHex: function() {\n\t      var source = this.getSource(), r, g, b;\n\t\n\t      r = source[0].toString(16);\n\t      r = (r.length === 1) ? ('0' + r) : r;\n\t\n\t      g = source[1].toString(16);\n\t      g = (g.length === 1) ? ('0' + g) : g;\n\t\n\t      b = source[2].toString(16);\n\t      b = (b.length === 1) ? ('0' + b) : b;\n\t\n\t      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n\t    },\n\t\n\t    /**\n\t     * Gets value of alpha channel for this color\n\t     * @return {Number} 0-1\n\t     */\n\t    getAlpha: function() {\n\t      return this.getSource()[3];\n\t    },\n\t\n\t    /**\n\t     * Sets value of alpha channel for this color\n\t     * @param {Number} alpha Alpha value 0-1\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    setAlpha: function(alpha) {\n\t      var source = this.getSource();\n\t      source[3] = alpha;\n\t      this.setSource(source);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its grayscale representation\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toGrayscale: function() {\n\t      var source = this.getSource(),\n\t          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n\t          currentAlpha = source[3];\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Transforms color to its black and white representation\n\t     * @param {Number} threshold\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    toBlackWhite: function(threshold) {\n\t      var source = this.getSource(),\n\t          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n\t          currentAlpha = source[3];\n\t\n\t      threshold = threshold || 127;\n\t\n\t      average = (Number(average) < Number(threshold)) ? 0 : 255;\n\t      this.setSource([average, average, average, currentAlpha]);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Overlays color with another color\n\t     * @param {String|fabric.Color} otherColor\n\t     * @return {fabric.Color} thisArg\n\t     */\n\t    overlayWith: function(otherColor) {\n\t      if (!(otherColor instanceof Color)) {\n\t        otherColor = new Color(otherColor);\n\t      }\n\t\n\t      var result = [],\n\t          alpha = this.getAlpha(),\n\t          otherAlpha = 0.5,\n\t          source = this.getSource(),\n\t          otherSource = otherColor.getSource();\n\t\n\t      for (var i = 0; i < 3; i++) {\n\t        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n\t      }\n\t\n\t      result[3] = alpha;\n\t      this.setSource(result);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t   // eslint-disable-next-line max-len\n\t  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\t\n\t  /**\n\t   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   */\n\t  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\t\n\t  /**\n\t   * Map of the 17 basic color names with HEX code\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Color\n\t   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n\t   */\n\t  fabric.Color.colorNameMap = {\n\t    aqua:    '#00FFFF',\n\t    black:   '#000000',\n\t    blue:    '#0000FF',\n\t    fuchsia: '#FF00FF',\n\t    gray:    '#808080',\n\t    grey:    '#808080',\n\t    green:   '#008000',\n\t    lime:    '#00FF00',\n\t    maroon:  '#800000',\n\t    navy:    '#000080',\n\t    olive:   '#808000',\n\t    orange:  '#FFA500',\n\t    purple:  '#800080',\n\t    red:     '#FF0000',\n\t    silver:  '#C0C0C0',\n\t    teal:    '#008080',\n\t    white:   '#FFFFFF',\n\t    yellow:  '#FFFF00'\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   * @param {Number} p\n\t   * @param {Number} q\n\t   * @param {Number} t\n\t   * @return {Number}\n\t   */\n\t  function hue2rgb(p, q, t) {\n\t    if (t < 0) {\n\t      t += 1;\n\t    }\n\t    if (t > 1) {\n\t      t -= 1;\n\t    }\n\t    if (t < 1 / 6) {\n\t      return p + (q - p) * 6 * t;\n\t    }\n\t    if (t < 1 / 2) {\n\t      return q;\n\t    }\n\t    if (t < 2 / 3) {\n\t      return p + (q - p) * (2 / 3 - t) * 6;\n\t    }\n\t    return p;\n\t  }\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGB format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgb = function(color) {\n\t    return Color.fromSource(Color.sourceFromRgb(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromRgb = function(color) {\n\t    var match = color.match(Color.reRGBa);\n\t    if (match) {\n\t      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n\t          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n\t          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\t\n\t      return [\n\t        parseInt(r, 10),\n\t        parseInt(g, 10),\n\t        parseInt(b, 10),\n\t        match[4] ? parseFloat(match[4]) : 1\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in RGBA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromRgba = Color.fromRgb;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSL format\n\t   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n\t   * @memberOf fabric.Color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsl = function(color) {\n\t    return Color.fromSource(Color.sourceFromHsl(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n\t   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n\t   * @return {Array} source\n\t   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n\t   */\n\t  fabric.Color.sourceFromHsl = function(color) {\n\t    var match = color.match(Color.reHSLa);\n\t    if (!match) {\n\t      return;\n\t    }\n\t\n\t    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n\t        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n\t        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n\t        r, g, b;\n\t\n\t    if (s === 0) {\n\t      r = g = b = l;\n\t    }\n\t    else {\n\t      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n\t          p = l * 2 - q;\n\t\n\t      r = hue2rgb(p, q, h + 1 / 3);\n\t      g = hue2rgb(p, q, h);\n\t      b = hue2rgb(p, q, h - 1 / 3);\n\t    }\n\t\n\t    return [\n\t      Math.round(r * 255),\n\t      Math.round(g * 255),\n\t      Math.round(b * 255),\n\t      match[4] ? parseFloat(match[4]) : 1\n\t    ];\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HSLA format\n\t   * @static\n\t   * @function\n\t   * @memberOf fabric.Color\n\t   * @param {String} color\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHsla = Color.fromHsl;\n\t\n\t  /**\n\t   * Returns new color object, when given a color in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color Color value ex: FF5555\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromHex = function(color) {\n\t    return Color.fromSource(Color.sourceFromHex(color));\n\t  };\n\t\n\t  /**\n\t   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n\t   * @return {Array} source\n\t   */\n\t  fabric.Color.sourceFromHex = function(color) {\n\t    if (color.match(Color.reHex)) {\n\t      var value = color.slice(color.indexOf('#') + 1),\n\t          isShortNotation = (value.length === 3 || value.length === 4),\n\t          isRGBa = (value.length === 8 || value.length === 4),\n\t          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n\t          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n\t          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n\t          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\t\n\t      return [\n\t        parseInt(r, 16),\n\t        parseInt(g, 16),\n\t        parseInt(b, 16),\n\t        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n\t      ];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n\t   * @static\n\t   * @memberOf fabric.Color\n\t   * @param {Array} source\n\t   * @return {fabric.Color}\n\t   */\n\t  fabric.Color.fromSource = function(source) {\n\t    var oColor = new Color();\n\t    oColor.setSource(source);\n\t    return oColor;\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /* _FROM_SVG_START_ */\n\t  function getColorStop(el) {\n\t    var style = el.getAttribute('style'),\n\t        offset = el.getAttribute('offset') || 0,\n\t        color, colorAlpha, opacity;\n\t\n\t    // convert percents to absolute values\n\t    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n\t    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\t    if (style) {\n\t      var keyValuePairs = style.split(/\\s*;\\s*/);\n\t\n\t      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n\t        keyValuePairs.pop();\n\t      }\n\t\n\t      for (var i = keyValuePairs.length; i--; ) {\n\t\n\t        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n\t            key = split[0].trim(),\n\t            value = split[1].trim();\n\t\n\t        if (key === 'stop-color') {\n\t          color = value;\n\t        }\n\t        else if (key === 'stop-opacity') {\n\t          opacity = value;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (!color) {\n\t      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n\t    }\n\t    if (!opacity) {\n\t      opacity = el.getAttribute('stop-opacity');\n\t    }\n\t\n\t    color = new fabric.Color(color);\n\t    colorAlpha = color.getAlpha();\n\t    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n\t    opacity *= colorAlpha;\n\t\n\t    return {\n\t      offset: offset,\n\t      color: color.toRgb(),\n\t      opacity: opacity\n\t    };\n\t  }\n\t\n\t  function getLinearCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('x1') || 0,\n\t      y1: el.getAttribute('y1') || 0,\n\t      x2: el.getAttribute('x2') || '100%',\n\t      y2: el.getAttribute('y2') || 0\n\t    };\n\t  }\n\t\n\t  function getRadialCoords(el) {\n\t    return {\n\t      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n\t      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n\t      r1: 0,\n\t      x2: el.getAttribute('cx') || '50%',\n\t      y2: el.getAttribute('cy') || '50%',\n\t      r2: el.getAttribute('r') || '50%'\n\t    };\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Gradient class\n\t   * @class fabric.Gradient\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n\t   * @see {@link fabric.Gradient#initialize} for constructor definition\n\t   */\n\t  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\t\n\t    /**\n\t     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      options || (options = { });\n\t\n\t      var coords = { };\n\t\n\t      this.id = fabric.Object.__uid++;\n\t      this.type = options.type || 'linear';\n\t\n\t      coords = {\n\t        x1: options.coords.x1 || 0,\n\t        y1: options.coords.y1 || 0,\n\t        x2: options.coords.x2 || 0,\n\t        y2: options.coords.y2 || 0\n\t      };\n\t\n\t      if (this.type === 'radial') {\n\t        coords.r1 = options.coords.r1 || 0;\n\t        coords.r2 = options.coords.r2 || 0;\n\t      }\n\t      this.coords = coords;\n\t      this.colorStops = options.colorStops.slice();\n\t      if (options.gradientTransform) {\n\t        this.gradientTransform = options.gradientTransform;\n\t      }\n\t      this.offsetX = options.offsetX || this.offsetX;\n\t      this.offsetY = options.offsetY || this.offsetY;\n\t    },\n\t\n\t    /**\n\t     * Adds another colorStop\n\t     * @param {Object} colorStop Object with offset and color\n\t     * @return {fabric.Gradient} thisArg\n\t     */\n\t    addColorStop: function(colorStops) {\n\t      for (var position in colorStops) {\n\t        var color = new fabric.Color(colorStops[position]);\n\t        this.colorStops.push({\n\t          offset: position,\n\t          color: color.toRgb(),\n\t          opacity: color.getAlpha()\n\t        });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of a gradient\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object}\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var object = {\n\t        type: this.type,\n\t        coords: this.coords,\n\t        colorStops: this.colorStops,\n\t        offsetX: this.offsetX,\n\t        offsetY: this.offsetY,\n\t        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n\t      };\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an gradient\n\t     * @param {Object} object Object to create a gradient for\n\t     * @return {String} SVG representation of an gradient (linear/radial)\n\t     */\n\t    toSVG: function(object) {\n\t      var coords = fabric.util.object.clone(this.coords),\n\t          markup, commonAttributes;\n\t\n\t      // colorStops must be sorted ascending\n\t      this.colorStops.sort(function(a, b) {\n\t        return a.offset - b.offset;\n\t      });\n\t\n\t      if (!(object.group && object.group.type === 'path-group')) {\n\t        for (var prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t            coords[prop] += this.offsetX - object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += this.offsetY - object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      commonAttributes = 'id=\"SVGID_' + this.id +\n\t                     '\" gradientUnits=\"userSpaceOnUse\"';\n\t      if (this.gradientTransform) {\n\t        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n\t      }\n\t      if (this.type === 'linear') {\n\t        markup = [\n\t          '<linearGradient ',\n\t          commonAttributes,\n\t          ' x1=\"', coords.x1,\n\t          '\" y1=\"', coords.y1,\n\t          '\" x2=\"', coords.x2,\n\t          '\" y2=\"', coords.y2,\n\t          '\">\\n'\n\t        ];\n\t      }\n\t      else if (this.type === 'radial') {\n\t        markup = [\n\t          '<radialGradient ',\n\t          commonAttributes,\n\t          ' cx=\"', coords.x2,\n\t          '\" cy=\"', coords.y2,\n\t          '\" r=\"', coords.r2,\n\t          '\" fx=\"', coords.x1,\n\t          '\" fy=\"', coords.y1,\n\t          '\">\\n'\n\t        ];\n\t      }\n\t\n\t      for (var i = 0; i < this.colorStops.length; i++) {\n\t        markup.push(\n\t          '<stop ',\n\t            'offset=\"', (this.colorStops[i].offset * 100) + '%',\n\t            '\" style=\"stop-color:', this.colorStops[i].color,\n\t            (this.colorStops[i].opacity !== null ? ';stop-opacity: ' + this.colorStops[i].opacity : ';'),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\t\n\t      return markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns an instance of CanvasGradient\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Object} object\n\t     * @return {CanvasGradient}\n\t     */\n\t    toLive: function(ctx, object) {\n\t      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\t\n\t      if (!this.type) {\n\t        return;\n\t      }\n\t\n\t      if (object.group && object.group.type === 'path-group') {\n\t        for (prop in coords) {\n\t          if (prop === 'x1' || prop === 'x2') {\n\t            coords[prop] += -this.offsetX + object.width / 2;\n\t          }\n\t          else if (prop === 'y1' || prop === 'y2') {\n\t            coords[prop] += -this.offsetY + object.height / 2;\n\t          }\n\t        }\n\t      }\n\t\n\t      if (this.type === 'linear') {\n\t        gradient = ctx.createLinearGradient(\n\t          coords.x1, coords.y1, coords.x2, coords.y2);\n\t      }\n\t      else if (this.type === 'radial') {\n\t        gradient = ctx.createRadialGradient(\n\t          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n\t      }\n\t\n\t      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n\t        var color = this.colorStops[i].color,\n\t            opacity = this.colorStops[i].opacity,\n\t            offset = this.colorStops[i].offset;\n\t\n\t        if (typeof opacity !== 'undefined') {\n\t          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n\t        }\n\t        gradient.addColorStop(parseFloat(offset), color);\n\t      }\n\t\n\t      return gradient;\n\t    }\n\t  });\n\t\n\t  fabric.util.object.extend(fabric.Gradient, {\n\t\n\t    /* _FROM_SVG_START_ */\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from an SVG element\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {SVGGradientElement} el SVG gradient element\n\t     * @param {fabric.Object} instance\n\t     * @return {fabric.Gradient} Gradient instance\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n\t     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n\t     */\n\t    fromElement: function(el, instance) {\n\t\n\t      /**\n\t       *  @example:\n\t       *\n\t       *  <linearGradient id=\"linearGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\"/>\n\t       *    <stop offset=\"100%\" stop-color=\"black\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <linearGradient id=\"linearGrad2\">\n\t       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n\t       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n\t       *  </linearGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad1\">\n\t       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n\t       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n\t       *  </radialGradient>\n\t       *\n\t       *  OR\n\t       *\n\t       *  <radialGradient id=\"radialGrad2\">\n\t       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n\t       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n\t       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n\t       *  </radialGradient>\n\t       *\n\t       */\n\t\n\t      var colorStopEls = el.getElementsByTagName('stop'),\n\t          type,\n\t          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n\t          gradientTransform = el.getAttribute('gradientTransform'),\n\t          colorStops = [],\n\t          coords, ellipseMatrix;\n\t\n\t      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n\t        type = 'linear';\n\t      }\n\t      else {\n\t        type = 'radial';\n\t      }\n\t\n\t      if (type === 'linear') {\n\t        coords = getLinearCoords(el);\n\t      }\n\t      else if (type === 'radial') {\n\t        coords = getRadialCoords(el);\n\t      }\n\t\n\t      for (var i = colorStopEls.length; i--; ) {\n\t        colorStops.push(getColorStop(colorStopEls[i]));\n\t      }\n\t\n\t      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\t\n\t      var gradient = new fabric.Gradient({\n\t        type: type,\n\t        coords: coords,\n\t        colorStops: colorStops,\n\t        offsetX: -instance.left,\n\t        offsetY: -instance.top\n\t      });\n\t\n\t      if (gradientTransform || ellipseMatrix !== '') {\n\t        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n\t      }\n\t      return gradient;\n\t    },\n\t    /* _FROM_SVG_END_ */\n\t\n\t    /**\n\t     * Returns {@link fabric.Gradient} instance from its object representation\n\t     * @static\n\t     * @memberOf fabric.Gradient\n\t     * @param {Object} obj\n\t     * @param {Object} [options] Options object\n\t     */\n\t    forObject: function(obj, options) {\n\t      options || (options = { });\n\t      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n\t      return new fabric.Gradient(options);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n\t    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n\t    for (var prop in options) {\n\t      if (options[prop] === 'Infinity') {\n\t        options[prop] = 1;\n\t      }\n\t      else if (options[prop] === '-Infinity') {\n\t        options[prop] = 0;\n\t      }\n\t      propValue = parseFloat(options[prop], 10);\n\t      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n\t        multFactor = 0.01;\n\t      }\n\t      else {\n\t        multFactor = 1;\n\t      }\n\t      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n\t      }\n\t      else if (prop === 'y1' || prop === 'y2') {\n\t        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n\t        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n\t      }\n\t      options[prop] = propValue * multFactor + addFactor;\n\t    }\n\t    if (object.type === 'ellipse' &&\n\t        options.r2 !== null &&\n\t        gradientUnits === 'objectBoundingBox' &&\n\t        object.rx !== object.ry) {\n\t\n\t      var scaleFactor = object.ry / object.rx;\n\t      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n\t      if (options.y1) {\n\t        options.y1 /= scaleFactor;\n\t      }\n\t      if (options.y2) {\n\t        options.y2 /= scaleFactor;\n\t      }\n\t    }\n\t    return ellipseMatrix;\n\t  }\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  'use strict';\n\t\n\t  var toFixed = fabric.util.toFixed;\n\t\n\t  /**\n\t   * Pattern class\n\t   * @class fabric.Pattern\n\t   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n\t   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n\t   * @see {@link fabric.Pattern#initialize} for constructor definition\n\t   */\n\t\n\t\n\t  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\t\n\t    /**\n\t     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t     * @type String\n\t     * @default\n\t     */\n\t    repeat: 'repeat',\n\t\n\t    /**\n\t     * Pattern horizontal offset from object's left/top corner\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Pattern vertical offset from object's left/top corner\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @param {Function} [callback] function to invoke after callback init.\n\t     * @return {fabric.Pattern} thisArg\n\t     */\n\t    initialize: function(options, callback) {\n\t      options || (options = { });\n\t\n\t      this.id = fabric.Object.__uid++;\n\t      this.setOptions(options);\n\t      if (!options.source || (options.source && typeof options.source !== 'string')) {\n\t        callback && callback(this);\n\t        return;\n\t      }\n\t      // function string\n\t      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n\t        this.source = new Function(fabric.util.getFunctionBody(options.source));\n\t        callback && callback(this);\n\t      }\n\t      else {\n\t        // img src string\n\t        var _this = this;\n\t        this.source = fabric.util.createImage();\n\t        fabric.util.loadImage(options.source, function(img) {\n\t          _this.source = img;\n\t          callback && callback(_this);\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of a pattern\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of a pattern instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t          source, object;\n\t\n\t      // callback\n\t      if (typeof this.source === 'function') {\n\t        source = String(this.source);\n\t      }\n\t      // <img> element\n\t      else if (typeof this.source.src === 'string') {\n\t        source = this.source.src;\n\t      }\n\t      // <canvas> element\n\t      else if (typeof this.source === 'object' && this.source.toDataURL) {\n\t        source = this.source.toDataURL();\n\t      }\n\t\n\t      object = {\n\t        type: 'pattern',\n\t        source: source,\n\t        repeat: this.repeat,\n\t        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n\t        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n\t      };\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of a pattern\n\t     * @param {fabric.Object} object\n\t     * @return {String} SVG representation of a pattern\n\t     */\n\t    toSVG: function(object) {\n\t      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n\t          patternWidth = patternSource.width / object.width,\n\t          patternHeight = patternSource.height / object.height,\n\t          patternOffsetX = this.offsetX / object.width,\n\t          patternOffsetY = this.offsetY / object.height,\n\t          patternImgSrc = '';\n\t      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n\t        patternHeight = 1;\n\t      }\n\t      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n\t        patternWidth = 1;\n\t      }\n\t      if (patternSource.src) {\n\t        patternImgSrc = patternSource.src;\n\t      }\n\t      else if (patternSource.toDataURL) {\n\t        patternImgSrc = patternSource.toDataURL();\n\t      }\n\t\n\t      return '<pattern id=\"SVGID_' + this.id +\n\t                    '\" x=\"' + patternOffsetX +\n\t                    '\" y=\"' + patternOffsetY +\n\t                    '\" width=\"' + patternWidth +\n\t                    '\" height=\"' + patternHeight + '\">\\n' +\n\t               '<image x=\"0\" y=\"0\"' +\n\t                      ' width=\"' + patternSource.width +\n\t                      '\" height=\"' + patternSource.height +\n\t                      '\" xlink:href=\"' + patternImgSrc +\n\t               '\"></image>\\n' +\n\t             '</pattern>\\n';\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    setOptions: function(options) {\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns an instance of CanvasPattern\n\t     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n\t     * @return {CanvasPattern}\n\t     */\n\t    toLive: function(ctx) {\n\t      var source = typeof this.source === 'function' ? this.source() : this.source;\n\t\n\t      // if the image failed to load, return, and allow rest to continue loading\n\t      if (!source) {\n\t        return '';\n\t      }\n\t\n\t      // if an image\n\t      if (typeof source.src !== 'undefined') {\n\t        if (!source.complete) {\n\t          return '';\n\t        }\n\t        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n\t          return '';\n\t        }\n\t      }\n\t      return ctx.createPattern(source, this.repeat);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Shadow) {\n\t    fabric.warn('fabric.Shadow is already defined.');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Shadow class\n\t   * @class fabric.Shadow\n\t   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n\t   * @see {@link fabric.Shadow#initialize} for constructor definition\n\t   */\n\t  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\t\n\t    /**\n\t     * Shadow color\n\t     * @type String\n\t     * @default\n\t     */\n\t    color: 'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Shadow blur\n\t     * @type Number\n\t     */\n\t    blur: 0,\n\t\n\t    /**\n\t     * Shadow horizontal offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetX: 0,\n\t\n\t    /**\n\t     * Shadow vertical offset\n\t     * @type Number\n\t     * @default\n\t     */\n\t    offsetY: 0,\n\t\n\t    /**\n\t     * Whether the shadow should affect stroke operations\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    affectStroke: false,\n\t\n\t    /**\n\t     * Indicates whether toObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @return {fabric.Shadow} thisArg\n\t     */\n\t    initialize: function(options) {\n\t\n\t      if (typeof options === 'string') {\n\t        options = this._parseShadow(options);\n\t      }\n\t\n\t      for (var prop in options) {\n\t        this[prop] = options[prop];\n\t      }\n\t\n\t      this.id = fabric.Object.__uid++;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} shadow Shadow value to parse\n\t     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n\t     */\n\t    _parseShadow: function(shadow) {\n\t      var shadowStr = shadow.trim(),\n\t          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n\t          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\t\n\t      return {\n\t        color: color.trim(),\n\t        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n\t        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n\t        blur: parseInt(offsetsAndBlur[3], 10) || 0\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n\t     * @return {String} Returns CSS3 text-shadow declaration\n\t     */\n\t    toString: function() {\n\t      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of a shadow\n\t     * @param {fabric.Object} object\n\t     * @return {String} SVG representation of a shadow\n\t     */\n\t    toSVG: function(object) {\n\t      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t          offset = fabric.util.rotateVector(\n\t            { x: this.offsetX, y: this.offsetY },\n\t            fabric.util.degreesToRadians(-object.angle)),\n\t          BLUR_BOX = 20;\n\t\n\t      if (object.width && object.height) {\n\t        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n\t        // we add some extra space to filter box to contain the blur ( 20 )\n\t        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n\t      }\n\t      if (object.flipX) {\n\t        offset.x *= -1;\n\t      }\n\t      if (object.flipY) {\n\t        offset.y *= -1;\n\t      }\n\t      return (\n\t        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n\t          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n\t          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n\t            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n\t          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n\t          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n\t          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n\t          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n\t          '\\t<feMerge>\\n' +\n\t            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n\t            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n\t          '\\t</feMerge>\\n' +\n\t        '</filter>\\n');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns object representation of a shadow\n\t     * @return {Object} Object representation of a shadow instance\n\t     */\n\t    toObject: function() {\n\t      if (this.includeDefaultValues) {\n\t        return {\n\t          color: this.color,\n\t          blur: this.blur,\n\t          offsetX: this.offsetX,\n\t          offsetY: this.offsetY,\n\t          affectStroke: this.affectStroke\n\t        };\n\t      }\n\t      var obj = { }, proto = fabric.Shadow.prototype;\n\t\n\t      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n\t        if (this[prop] !== proto[prop]) {\n\t          obj[prop] = this[prop];\n\t        }\n\t      }, this);\n\t\n\t      return obj;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n\t   * @static\n\t   * @field\n\t   * @memberOf fabric.Shadow\n\t   */\n\t  // eslint-disable-next-line max-len\n\t  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function () {\n\t\n\t  'use strict';\n\t\n\t  if (fabric.StaticCanvas) {\n\t    fabric.warn('fabric.StaticCanvas is already defined.');\n\t    return;\n\t  }\n\t\n\t  // aliases for faster resolution\n\t  var extend = fabric.util.object.extend,\n\t      getElementOffset = fabric.util.getElementOffset,\n\t      removeFromArray = fabric.util.removeFromArray,\n\t      toFixed = fabric.util.toFixed,\n\t\n\t      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\t\n\t  /**\n\t   * Static canvas class\n\t   * @class fabric.StaticCanvas\n\t   * @mixes fabric.Collection\n\t   * @mixes fabric.Observable\n\t   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n\t   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n\t   * @fires before:render\n\t   * @fires after:render\n\t   * @fires canvas:cleared\n\t   * @fires object:added\n\t   * @fires object:removed\n\t   */\n\t  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t    },\n\t\n\t    /**\n\t     * Background color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    backgroundColor: '',\n\t\n\t    /**\n\t     * Background image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n\t     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    backgroundImage: null,\n\t\n\t    /**\n\t     * Overlay color of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n\t     * @since 1.3.9\n\t     * @type {(String|fabric.Pattern)}\n\t     * @default\n\t     */\n\t    overlayColor: '',\n\t\n\t    /**\n\t     * Overlay image of canvas instance.\n\t     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n\t     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n\t     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n\t     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n\t     * @type fabric.Image\n\t     * @default\n\t     */\n\t    overlayImage: null,\n\t\n\t    /**\n\t     * Indicates whether toObject/toDatalessObject should include default values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues: true,\n\t\n\t    /**\n\t     * Indicates whether objects' state should be saved\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    stateful: false,\n\t\n\t    /**\n\t     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n\t     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n\t     * (followed by a manual rendering after addition/deletion)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    renderOnAddRemove: true,\n\t\n\t    /**\n\t     * Function that determines clipping of entire canvas area\n\t     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n\t     * @type Function\n\t     * @default\n\t     */\n\t    clipTo: null,\n\t\n\t    /**\n\t     * Indicates whether object controls (borders/controls) are rendered above overlay image\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    controlsAboveOverlay: false,\n\t\n\t    /**\n\t     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    allowTouchScrolling: false,\n\t\n\t    /**\n\t     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    imageSmoothingEnabled: true,\n\t\n\t    /**\n\t     * The transformation (in the format of Canvas transform) which focuses the viewport\n\t     * @type Array\n\t     * @default\n\t     */\n\t    viewportTransform: [1, 0, 0, 1, 0, 0],\n\t\n\t    /**\n\t     * if set to false background image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    backgroundVpt: true,\n\t\n\t    /**\n\t     * if set to false overlya image is not affected by viewport transform\n\t     * @since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    overlayVpt: true,\n\t\n\t    /**\n\t     * Callback; invoked right before object is about to be scaled/rotated\n\t     */\n\t    onBeforeScaleRotate: function () {\n\t      /* NOOP */\n\t    },\n\t\n\t    /**\n\t     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n\t     */\n\t    enableRetinaScaling: true,\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initStatic: function(el, options) {\n\t      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n\t      this._objects = [];\n\t      this._createLowerCanvas(el);\n\t      this._initOptions(options);\n\t      this._setImageSmoothing();\n\t      // only initialize retina scaling once\n\t      if (!this.interactive) {\n\t        this._initRetinaScaling();\n\t      }\n\t\n\t      if (options.overlayImage) {\n\t        this.setOverlayImage(options.overlayImage, cb);\n\t      }\n\t      if (options.backgroundImage) {\n\t        this.setBackgroundImage(options.backgroundImage, cb);\n\t      }\n\t      if (options.backgroundColor) {\n\t        this.setBackgroundColor(options.backgroundColor, cb);\n\t      }\n\t      if (options.overlayColor) {\n\t        this.setOverlayColor(options.overlayColor, cb);\n\t      }\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _isRetinaScaling: function() {\n\t      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} retinaScaling if applied, otherwise 1;\n\t     */\n\t    getRetinaScaling: function() {\n\t      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initRetinaScaling: function() {\n\t      if (!this._isRetinaScaling()) {\n\t        return;\n\t      }\n\t      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t\n\t      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    },\n\t\n\t    /**\n\t     * Calculates canvas element offset relative to the document\n\t     * This method is also attached as \"resize\" event handler of window\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    calcOffset: function () {\n\t      this._offset = getElementOffset(this.lowerCanvasEl);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n\t     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n\t     * @example <caption>Normal overlayImage with left/top = 0</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage with different properties</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position overlayImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>overlayImage loaded from cross-origin</caption>\n\t     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setOverlayImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n\t     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage with different properties</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n\t     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n\t     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n\t     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n\t     * });\n\t     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   width: canvas.width,\n\t     *   height: canvas.height,\n\t     *   // Needed to position backgroundImage at 0/0\n\t     *   originX: 'left',\n\t     *   originY: 'top'\n\t     * });\n\t     * @example <caption>backgroundImage loaded from cross-origin</caption>\n\t     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n\t     *   opacity: 0.5,\n\t     *   angle: 45,\n\t     *   left: 400,\n\t     *   top: 400,\n\t     *   originX: 'left',\n\t     *   originY: 'top',\n\t     *   crossOrigin: 'anonymous'\n\t     * });\n\t     */\n\t    setBackgroundImage: function (image, callback, options) {\n\t      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n\t     * @example <caption>Normal overlayColor - color value</caption>\n\t     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n\t     * canvas.setOverlayColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setOverlayColor: function(overlayColor, callback) {\n\t      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n\t     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n\t     * @param {Function} callback Callback to invoke when background color is set\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n\t     * @example <caption>Normal backgroundColor - color value</caption>\n\t     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n\t     * }, canvas.renderAll.bind(canvas));\n\t     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n\t     * canvas.setBackgroundColor({\n\t     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n\t     *   repeat: 'repeat',\n\t     *   offsetX: 200,\n\t     *   offsetY: 100\n\t     * }, canvas.renderAll.bind(canvas));\n\t     */\n\t    setBackgroundColor: function(backgroundColor, callback) {\n\t      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n\t     */\n\t    _setImageSmoothing: function() {\n\t      var ctx = this.getContext();\n\t\n\t      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n\t        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n\t      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n\t     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n\t     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n\t     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n\t     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n\t     */\n\t    __setBgOverlayImage: function(property, image, callback, options) {\n\t      if (typeof image === 'string') {\n\t        fabric.util.loadImage(image, function(img) {\n\t          img && (this[property] = new fabric.Image(img, options));\n\t          callback && callback(img);\n\t        }, this, options && options.crossOrigin);\n\t      }\n\t      else {\n\t        options && image.setOptions(options);\n\t        this[property] = image;\n\t        callback && callback(image);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n\t     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n\t     * @param {(Object|String|null)} color Object with pattern information, color value or null\n\t     * @param {Function} [callback] Callback is invoked when color is set\n\t     */\n\t    __setBgOverlayColor: function(property, color, callback) {\n\t      this[property] = color;\n\t      this._initGradient(color, property);\n\t      this._initPattern(color, property, callback);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCanvasElement: function(canvasEl) {\n\t      var element = fabric.util.createCanvasElement(canvasEl);\n\t      if (!element.style) {\n\t        element.style = { };\n\t      }\n\t      if (!element) {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      if (typeof element.getContext === 'undefined') {\n\t        throw CANVAS_INIT_ERROR;\n\t      }\n\t      return element;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initOptions: function (options) {\n\t      this._setOptions(options);\n\t\n\t      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n\t      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\t\n\t      if (!this.lowerCanvasEl.style) {\n\t        return;\n\t      }\n\t\n\t      this.lowerCanvasEl.width = this.width;\n\t      this.lowerCanvasEl.height = this.height;\n\t\n\t      this.lowerCanvasEl.style.width = this.width + 'px';\n\t      this.lowerCanvasEl.style.height = this.height + 'px';\n\t\n\t      this.viewportTransform = this.viewportTransform.slice();\n\t    },\n\t\n\t    /**\n\t     * Creates a bottom canvas\n\t     * @private\n\t     * @param {HTMLElement} [canvasEl]\n\t     */\n\t    _createLowerCanvas: function (canvasEl) {\n\t      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\t\n\t      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\t\n\t      if (this.interactive) {\n\t        this._applyCanvasStyle(this.lowerCanvasEl);\n\t      }\n\t\n\t      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * Returns canvas width (in px)\n\t     * @return {Number}\n\t     */\n\t    getWidth: function () {\n\t      return this.width;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas height (in px)\n\t     * @return {Number}\n\t     */\n\t    getHeight: function () {\n\t      return this.height;\n\t    },\n\t\n\t    /**\n\t     * Sets width of this canvas instance\n\t     * @param {Number|String} value                         Value to set width to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setWidth: function (value, options) {\n\t      return this.setDimensions({ width: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets height of this canvas instance\n\t     * @param {Number|String} value                         Value to set height to\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setHeight: function (value, options) {\n\t      return this.setDimensions({ height: value }, options);\n\t    },\n\t\n\t    /**\n\t     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n\t     * @param {Object}        dimensions                    Object with width/height properties\n\t     * @param {Number|String} [dimensions.width]            Width of canvas element\n\t     * @param {Number|String} [dimensions.height]           Height of canvas element\n\t     * @param {Object}        [options]                     Options object\n\t     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n\t     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setDimensions: function (dimensions, options) {\n\t      var cssValue;\n\t\n\t      options = options || {};\n\t\n\t      for (var prop in dimensions) {\n\t        cssValue = dimensions[prop];\n\t\n\t        if (!options.cssOnly) {\n\t          this._setBackstoreDimension(prop, dimensions[prop]);\n\t          cssValue += 'px';\n\t        }\n\t\n\t        if (!options.backstoreOnly) {\n\t          this._setCssDimension(prop, cssValue);\n\t        }\n\t      }\n\t      this._initRetinaScaling();\n\t      this._setImageSmoothing();\n\t      this.calcOffset();\n\t\n\t      if (!options.cssOnly) {\n\t        this.renderAll();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {Number} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setBackstoreDimension: function (prop, value) {\n\t      this.lowerCanvasEl[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl[prop] = value;\n\t      }\n\t\n\t      if (this.cacheCanvasEl) {\n\t        this.cacheCanvasEl[prop] = value;\n\t      }\n\t\n\t      this[prop] = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Helper for setting css width/height\n\t     * @private\n\t     * @param {String} prop property (width|height)\n\t     * @param {String} value value to set property to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    _setCssDimension: function (prop, value) {\n\t      this.lowerCanvasEl.style[prop] = value;\n\t\n\t      if (this.upperCanvasEl) {\n\t        this.upperCanvasEl.style[prop] = value;\n\t      }\n\t\n\t      if (this.wrapperEl) {\n\t        this.wrapperEl.style[prop] = value;\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns canvas zoom level\n\t     * @return {Number}\n\t     */\n\t    getZoom: function () {\n\t      return this.viewportTransform[0];\n\t    },\n\t\n\t    /**\n\t     * Sets viewport transform of this canvas instance\n\t     * @param {Array} vpt the transform in the form of context.transform\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setViewportTransform: function (vpt) {\n\t      var activeGroup = this._activeGroup, object, ingoreVpt = false, skipAbsolute = true;\n\t      this.viewportTransform = vpt;\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        object = this._objects[i];\n\t        object.group || object.setCoords(ingoreVpt, skipAbsolute);\n\t      }\n\t      if (activeGroup) {\n\t        activeGroup.setCoords(ingoreVpt, skipAbsolute);\n\t      }\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance, zoom centered around point\n\t     * @param {fabric.Point} point to zoom with respect to\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    zoomToPoint: function (point, value) {\n\t      // TODO: just change the scale, preserve other transformations\n\t      var before = point, vpt = this.viewportTransform.slice(0);\n\t      point = fabric.util.transformPoint(point, fabric.util.invertTransform(this.viewportTransform));\n\t      vpt[0] = value;\n\t      vpt[3] = value;\n\t      var after = fabric.util.transformPoint(point, vpt);\n\t      vpt[4] += before.x - after.x;\n\t      vpt[5] += before.y - after.y;\n\t      return this.setViewportTransform(vpt);\n\t    },\n\t\n\t    /**\n\t     * Sets zoom level of this canvas instance\n\t     * @param {Number} value to set zoom to, less than 1 zooms out\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    setZoom: function (value) {\n\t      this.zoomToPoint(new fabric.Point(0, 0), value);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Pan viewport so as to place point at top left corner of canvas\n\t     * @param {fabric.Point} point to move to\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    absolutePan: function (point) {\n\t      var vpt = this.viewportTransform.slice(0);\n\t      vpt[4] = -point.x;\n\t      vpt[5] = -point.y;\n\t      return this.setViewportTransform(vpt);\n\t    },\n\t\n\t    /**\n\t     * Pans viewpoint relatively\n\t     * @param {fabric.Point} point (position vector) to move by\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable true\n\t     */\n\t    relativePan: function (point) {\n\t      return this.absolutePan(new fabric.Point(\n\t        -point.x - this.viewportTransform[4],\n\t        -point.y - this.viewportTransform[5]\n\t      ));\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element corresponding to this instance\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getElement: function () {\n\t      return this.lowerCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was added\n\t     */\n\t    _onObjectAdded: function(obj) {\n\t      this.stateful && obj.setupState();\n\t      obj._set('canvas', this);\n\t      obj.setCoords();\n\t      this.fire('object:added', { target: obj });\n\t      obj.fire('added');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      this.fire('object:removed', { target: obj });\n\t      obj.fire('removed');\n\t      delete obj.canvas;\n\t    },\n\t\n\t    /**\n\t     * Clears specified context of canvas element\n\t     * @param {CanvasRenderingContext2D} ctx Context to clear\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clearContext: function(ctx) {\n\t      ctx.clearRect(0, 0, this.width, this.height);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where objects are drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getContext: function () {\n\t      return this.contextContainer;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this._objects.length = 0;\n\t      this.backgroundImage = null;\n\t      this.overlayImage = null;\n\t      this.backgroundColor = '';\n\t      this.overlayColor = '';\n\t      if (this._hasITextHandlers) {\n\t        this.off('selection:cleared', this._canvasITextSelectionClearedHanlder);\n\t        this.off('object:selected', this._canvasITextSelectionClearedHanlder);\n\t        this.off('mouse:up', this._mouseUpITextHandler);\n\t        this._iTextInstances = null;\n\t        this._hasITextHandlers = false;\n\t      }\n\t      this.clearContext(this.contextContainer);\n\t      this.fire('canvas:cleared');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Renders both the canvas.\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      var canvasToDrawOn = this.contextContainer;\n\t      this.renderCanvas(canvasToDrawOn, this._objects);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Renders background, objects, overlay and controls.\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {Array} objects to render\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderCanvas: function(ctx, objects) {\n\t      this.clearContext(ctx);\n\t      this.fire('before:render');\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, ctx);\n\t      }\n\t      this._renderBackground(ctx);\n\t\n\t      ctx.save();\n\t      //apply viewport transform once for all rendering process\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      this._renderObjects(ctx, objects);\n\t      ctx.restore();\n\t      if (!this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(ctx);\n\t      }\n\t      if (this.clipTo) {\n\t        ctx.restore();\n\t      }\n\t      this._renderOverlay(ctx);\n\t      if (this.controlsAboveOverlay && this.interactive) {\n\t        this.drawControls(ctx);\n\t      }\n\t      this.fire('after:render');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Array} objects to render\n\t     */\n\t    _renderObjects: function(ctx, objects) {\n\t      for (var i = 0, length = objects.length; i < length; ++i) {\n\t        objects[i] && objects[i].render(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {string} property 'background' or 'overlay'\n\t     */\n\t    _renderBackgroundOrOverlay: function(ctx, property) {\n\t      var object = this[property + 'Color'];\n\t      if (object) {\n\t        ctx.fillStyle = object.toLive\n\t          ? object.toLive(ctx, this)\n\t          : object;\n\t\n\t        ctx.fillRect(\n\t          object.offsetX || 0,\n\t          object.offsetY || 0,\n\t          this.width,\n\t          this.height);\n\t      }\n\t      object = this[property + 'Image'];\n\t      if (object) {\n\t        if (this[property + 'Vpt']) {\n\t          ctx.save();\n\t          ctx.transform.apply(ctx, this.viewportTransform);\n\t        }\n\t        object.render(ctx);\n\t        this[property + 'Vpt'] && ctx.restore();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'background');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderOverlay: function(ctx) {\n\t      this._renderBackgroundOrOverlay(ctx, 'overlay');\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a center of canvas.\n\t     * Returned value is an object with top and left properties\n\t     * @return {Object} object with \"top\" and \"left\" number values\n\t     */\n\t    getCenter: function () {\n\t      return {\n\t        top: this.getHeight() / 2,\n\t        left: this.getWidth() / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     */\n\t    centerObjectH: function (object) {\n\t      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObjectV: function (object) {\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the canvas\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    centerObject: function(object) {\n\t      var center = this.getCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(center.left, center.top));\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally in the viewport\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObject: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, vpCenter);\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectH: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object Vertically in the viewport, object.top is unchanged\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @param {fabric.Object} object Object to center vertically and horizontally\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterObjectV: function(object) {\n\t      var vpCenter = this.getVpCenter();\n\t\n\t      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n\t    },\n\t\n\t    /**\n\t     * Calculate the point in canvas that correspond to the center of actual viewport.\n\t     * @return {fabric.Point} vpCenter, viewport center\n\t     * @chainable\n\t     */\n\t    getVpCenter: function() {\n\t      var center = this.getCenter(),\n\t          iVpt = fabric.util.invertTransform(this.viewportTransform);\n\t      return fabric.util.transformPoint({ x: center.left, y: center.top }, iVpt);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} object Object to center\n\t     * @param {fabric.Point} center Center point\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    _centerObject: function(object, center) {\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returs dataless JSON representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {String} json string\n\t     */\n\t    toDatalessJSON: function (propertiesToInclude) {\n\t      return this.toDatalessObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of canvas\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function (propertiesToInclude) {\n\t      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjectMethod: function (methodName, propertiesToInclude) {\n\t\n\t      var data = {\n\t        objects: this._toObjects(methodName, propertiesToInclude)\n\t      };\n\t\n\t      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\t\n\t      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObjects: function(methodName, propertiesToInclude) {\n\t      return this.getObjects().filter(function(object) {\n\t        return !object.excludeFromExport;\n\t      }).map(function(instance) {\n\t        return this._toObject(instance, methodName, propertiesToInclude);\n\t      }, this);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      var originalValue;\n\t\n\t      if (!this.includeDefaultValues) {\n\t        originalValue = instance.includeDefaultValues;\n\t        instance.includeDefaultValues = false;\n\t      }\n\t\n\t      var object = instance[methodName](propertiesToInclude);\n\t      if (!this.includeDefaultValues) {\n\t        instance.includeDefaultValues = originalValue;\n\t      }\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n\t      var data = { };\n\t\n\t      if (this.backgroundColor) {\n\t        data.background = this.backgroundColor.toObject\n\t          ? this.backgroundColor.toObject(propertiesToInclude)\n\t          : this.backgroundColor;\n\t      }\n\t\n\t      if (this.overlayColor) {\n\t        data.overlay = this.overlayColor.toObject\n\t          ? this.overlayColor.toObject(propertiesToInclude)\n\t          : this.overlayColor;\n\t      }\n\t      if (this.backgroundImage) {\n\t        data.backgroundImage = this._toObject(this.backgroundImage, methodName, propertiesToInclude);\n\t      }\n\t      if (this.overlayImage) {\n\t        data.overlayImage = this._toObject(this.overlayImage, methodName, propertiesToInclude);\n\t      }\n\t\n\t      return data;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n\t     * a zoomed canvas will then produce zoomed SVG output.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    svgViewportTransformation: true,\n\t\n\t    /**\n\t     * Returns SVG representation of canvas\n\t     * @function\n\t     * @param {Object} [options] Options object for SVG output\n\t     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n\t     * @param {Object} [options.viewBox] SVG viewbox object\n\t     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n\t     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n\t     * @param {Number} [options.viewBox.width] Width of viewbox\n\t     * @param {Number} [options.viewBox.height] Height of viewbox\n\t     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n\t     * @param {String} [options.width] desired width of svg with or without units\n\t     * @param {String} [options.height] desired height of svg with or without units\n\t     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n\t     * @return {String} SVG string\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n\t     * @example <caption>Normal SVG output</caption>\n\t     * var svg = canvas.toSVG();\n\t     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n\t     * var svg = canvas.toSVG({suppressPreamble: true});\n\t     * @example <caption>SVG output with viewBox attribute</caption>\n\t     * var svg = canvas.toSVG({\n\t     *   viewBox: {\n\t     *     x: 100,\n\t     *     y: 100,\n\t     *     width: 200,\n\t     *     height: 300\n\t     *   }\n\t     * });\n\t     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n\t     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n\t     * @example <caption>Modify SVG output with reviver function</caption>\n\t     * var svg = canvas.toSVG(null, function(svg) {\n\t     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n\t     * });\n\t     */\n\t    toSVG: function(options, reviver) {\n\t      options || (options = { });\n\t\n\t      var markup = [];\n\t\n\t      this._setSVGPreamble(markup, options);\n\t      this._setSVGHeader(markup, options);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n\t      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\t\n\t      this._setSVGObjects(markup, reviver);\n\t\n\t      this._setSVGBgOverlayColor(markup, 'overlayColor');\n\t      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\t\n\t      markup.push('</svg>');\n\t\n\t      return markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGPreamble: function(markup, options) {\n\t      if (options.suppressPreamble) {\n\t        return;\n\t      }\n\t      markup.push(\n\t        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n\t          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n\t            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGHeader: function(markup, options) {\n\t      var width = options.width || this.width,\n\t          height = options.height || this.height,\n\t          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t      if (options.viewBox) {\n\t        viewBox = 'viewBox=\"' +\n\t                options.viewBox.x + ' ' +\n\t                options.viewBox.y + ' ' +\n\t                options.viewBox.width + ' ' +\n\t                options.viewBox.height + '\" ';\n\t      }\n\t      else {\n\t        if (this.svgViewportTransformation) {\n\t          vpt = this.viewportTransform;\n\t          viewBox = 'viewBox=\"' +\n\t                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n\t                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n\t        }\n\t      }\n\t\n\t      markup.push(\n\t        '<svg ',\n\t          'xmlns=\"http://www.w3.org/2000/svg\" ',\n\t          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n\t          'version=\"1.1\" ',\n\t          'width=\"', width, '\" ',\n\t          'height=\"', height, '\" ',\n\t          viewBox,\n\t          'xml:space=\"preserve\">\\n',\n\t        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n\t        '<defs>\\n',\n\t          this.createSVGFontFacesMarkup(),\n\t          this.createSVGRefElementsMarkup(),\n\t        '</defs>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n\t     * @return {String}\n\t     */\n\t    createSVGRefElementsMarkup: function() {\n\t      var _this = this,\n\t          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n\t            var fill = _this[prop];\n\t            if (fill && fill.toLive) {\n\t              return fill.toSVG(_this, false);\n\t            }\n\t          });\n\t      return markup.join('');\n\t    },\n\t\n\t    /**\n\t     * Creates markup containing SVG font faces,\n\t     * font URLs for font faces must be collected by developers\n\t     * and are not extracted from the DOM by fabricjs\n\t     * @param {Array} objects Array of fabric objects\n\t     * @return {String}\n\t     */\n\t    createSVGFontFacesMarkup: function() {\n\t      var markup = '', fontList = { }, obj, fontFamily,\n\t          style, row, rowIndex, _char, charIndex,\n\t          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        obj = objects[i];\n\t        fontFamily = obj.fontFamily;\n\t        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n\t          continue;\n\t        }\n\t        fontList[fontFamily] = true;\n\t        if (!obj.styles) {\n\t          continue;\n\t        }\n\t        style = obj.styles;\n\t        for (rowIndex in style) {\n\t          row = style[rowIndex];\n\t          for (charIndex in row) {\n\t            _char = row[charIndex];\n\t            fontFamily = _char.fontFamily;\n\t            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n\t              fontList[fontFamily] = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var j in fontList) {\n\t        markup += [\n\t          '\\t\\t@font-face {\\n',\n\t          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n\t          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n\t          '\\t\\t}\\n'\n\t        ].join('');\n\t      }\n\t\n\t      if (markup) {\n\t        markup = [\n\t          '\\t<style type=\"text/css\">',\n\t          '<![CDATA[\\n',\n\t          markup,\n\t          ']]>',\n\t          '</style>\\n'\n\t        ].join('');\n\t      }\n\t\n\t      return markup;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObjects: function(markup, reviver) {\n\t      var instance;\n\t      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n\t        instance = objects[i];\n\t        if (instance.excludeFromExport) {\n\t          continue;\n\t        }\n\t        this._setSVGObject(markup, instance, reviver);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * push single object svg representation in the markup\n\t     * @private\n\t     */\n\t    _setSVGObject: function(markup, instance, reviver) {\n\t      markup.push(instance.toSVG(reviver));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayImage: function(markup, property, reviver) {\n\t      if (this[property] && this[property].toSVG) {\n\t        markup.push(this[property].toSVG(reviver));\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGBgOverlayColor: function(markup, property) {\n\t      var filler = this[property];\n\t      if (!filler) {\n\t        return;\n\t      }\n\t      if (filler.toLive) {\n\t        var repeat = filler.repeat;\n\t        markup.push(\n\t          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n\t            ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n\t            'width=\"',\n\t              (repeat === 'repeat-y' || repeat === 'no-repeat'\n\t                ? filler.source.width\n\t                : this.width),\n\t            '\" height=\"',\n\t              (repeat === 'repeat-x' || repeat === 'no-repeat'\n\t                ? filler.source.height\n\t                : this.height),\n\t            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t      else {\n\t        markup.push(\n\t          '<rect x=\"0\" y=\"0\" ',\n\t            'width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" fill=\"', this[property], '\"',\n\t          '></rect>\\n'\n\t        );\n\t      }\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the bottom of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send to back\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendToBack: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.unshift(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.unshift(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or the objects of a multiple selection\n\t     * to the top of the stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringToFront: function (object) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, objs;\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          removeFromArray(this._objects, obj);\n\t          this._objects.push(obj);\n\t        }\n\t      }\n\t      else {\n\t        removeFromArray(this._objects, object);\n\t        this._objects.push(object);\n\t      }\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection down in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    sendBackwards: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, idx, newIdx, objs;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = 0; i < objs.length; i++) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx !== 0) {\n\t            newIdx = idx - 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== 0) {\n\t          // if object is not on the bottom of stack\n\t          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewLowerIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse down the stack looking for the nearest intersecting object\n\t        for (var i = idx - 1; i >= 0; --i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx - 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object or a selection up in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    bringForward: function (object, intersecting) {\n\t      if (!object) {\n\t        return this;\n\t      }\n\t      var activeGroup = this._activeGroup,\n\t          i, obj, idx, newIdx, objs;\n\t\n\t      if (object === activeGroup) {\n\t        objs = activeGroup._objects;\n\t        for (i = objs.length; i--;) {\n\t          obj = objs[i];\n\t          idx = this._objects.indexOf(obj);\n\t          if (idx !== this._objects.length - 1) {\n\t            newIdx = idx + 1;\n\t            removeFromArray(this._objects, obj);\n\t            this._objects.splice(newIdx, 0, obj);\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        idx = this._objects.indexOf(object);\n\t        if (idx !== this._objects.length - 1) {\n\t          // if object is not on top of stack (last item in an array)\n\t          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n\t          removeFromArray(this._objects, object);\n\t          this._objects.splice(newIdx, 0, object);\n\t        }\n\t      }\n\t      this.renderAll && this.renderAll();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findNewUpperIndex: function(object, idx, intersecting) {\n\t      var newIdx;\n\t\n\t      if (intersecting) {\n\t        newIdx = idx;\n\t\n\t        // traverse up the stack looking for the nearest intersecting object\n\t        for (var i = idx + 1; i < this._objects.length; ++i) {\n\t\n\t          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n\t                               object.isContainedWithinObject(this._objects[i]) ||\n\t                               this._objects[i].isContainedWithinObject(object);\n\t\n\t          if (isIntersecting) {\n\t            newIdx = i;\n\t            break;\n\t          }\n\t        }\n\t      }\n\t      else {\n\t        newIdx = idx + 1;\n\t      }\n\t\n\t      return newIdx;\n\t    },\n\t\n\t    /**\n\t     * Moves an object to specified level in stack of drawn objects\n\t     * @param {fabric.Object} object Object to send\n\t     * @param {Number} index Position to move to\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    moveTo: function (object, index) {\n\t      removeFromArray(this._objects, object);\n\t      this._objects.splice(index, 0, object);\n\t      return this.renderAll && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.clear();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function () {\n\t      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n\t               '{ objects: ' + this.getObjects().length + ' }>';\n\t    }\n\t  });\n\t\n\t  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n\t  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n\t  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\t\n\t  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\t\n\t    /**\n\t     * @static\n\t     * @type String\n\t     * @default\n\t     */\n\t    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\t\n\t    /**\n\t     * Provides a way to check support of some of the canvas methods\n\t     * (either those of HTMLCanvasElement itself, or rendering context)\n\t     *\n\t     * @param {String} methodName Method to check support for;\n\t     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n\t     * @return {Boolean | null} `true` if method is supported (or at least exists),\n\t     *                          `null` if canvas element or context can not be initialized\n\t     */\n\t    supports: function (methodName) {\n\t      var el = fabric.util.createCanvasElement();\n\t\n\t      if (!el || !el.getContext) {\n\t        return null;\n\t      }\n\t\n\t      var ctx = el.getContext('2d');\n\t      if (!ctx) {\n\t        return null;\n\t      }\n\t\n\t      switch (methodName) {\n\t\n\t        case 'getImageData':\n\t          return typeof ctx.getImageData !== 'undefined';\n\t\n\t        case 'setLineDash':\n\t          return typeof ctx.setLineDash !== 'undefined';\n\t\n\t        case 'toDataURL':\n\t          return typeof el.toDataURL !== 'undefined';\n\t\n\t        case 'toDataURLWithQuality':\n\t          try {\n\t            el.toDataURL('image/jpeg', 0);\n\t            return true;\n\t          }\n\t          catch (e) { }\n\t          return false;\n\t\n\t        default:\n\t          return null;\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns JSON representation of canvas\n\t   * @function\n\t   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t   * @return {String} JSON string\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n\t   * @example <caption>JSON without additional properties</caption>\n\t   * var json = canvas.toJSON();\n\t   * @example <caption>JSON with additional properties included</caption>\n\t   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n\t   * @example <caption>JSON without default values</caption>\n\t   * canvas.includeDefaultValues = false;\n\t   * var json = canvas.toJSON();\n\t   */\n\t  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\t\n\t})();\n\t\n\t\n\t/**\n\t * BaseBrush class\n\t * @class fabric.BaseBrush\n\t * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n\t */\n\tfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\t\n\t  /**\n\t   * Color of a brush\n\t   * @type String\n\t   * @default\n\t   */\n\t  color: 'rgb(0, 0, 0)',\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 1,\n\t\n\t  /**\n\t   * Shadow object representing shadow of this shape.\n\t   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n\t   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n\t   * @type fabric.Shadow\n\t   * @default\n\t   */\n\t  shadow: null,\n\t\n\t  /**\n\t   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineCap: 'round',\n\t\n\t  /**\n\t   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n\t   * @type String\n\t   * @default\n\t   */\n\t  strokeLineJoin: 'round',\n\t\n\t  /**\n\t   * Stroke Dash Array.\n\t   * @type Array\n\t   * @default\n\t   */\n\t  strokeDashArray: null,\n\t\n\t  /**\n\t   * Sets shadow of an object\n\t   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  setShadow: function(options) {\n\t    this.shadow = new fabric.Shadow(options);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   * @private\n\t   */\n\t  _setBrushStyles: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.strokeStyle = this.color;\n\t    ctx.lineWidth = this.width;\n\t    ctx.lineCap = this.strokeLineCap;\n\t    ctx.lineJoin = this.strokeLineJoin;\n\t    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n\t      ctx.setLineDash(this.strokeDashArray);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets brush shadow styles\n\t   * @private\n\t   */\n\t  _setShadow: function() {\n\t    if (!this.shadow) {\n\t      return;\n\t    }\n\t\n\t    var ctx = this.canvas.contextTop,\n\t        zoom = this.canvas.getZoom();\n\t\n\t    ctx.shadowColor = this.shadow.color;\n\t    ctx.shadowBlur = this.shadow.blur * zoom;\n\t    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n\t    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n\t  },\n\t\n\t  /**\n\t   * Removes brush shadow styles\n\t   * @private\n\t   */\n\t  _resetShadow: function() {\n\t    var ctx = this.canvas.contextTop;\n\t\n\t    ctx.shadowColor = '';\n\t    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * PencilBrush class\n\t   * @class fabric.PencilBrush\n\t   * @extends fabric.BaseBrush\n\t   */\n\t  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {fabric.Canvas} canvas\n\t     * @return {fabric.PencilBrush} Instance of a pencil brush\n\t     */\n\t    initialize: function(canvas) {\n\t      this.canvas = canvas;\n\t      this._points = [];\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse down\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseDown: function(pointer) {\n\t      this._prepareForDrawing(pointer);\n\t      // capture coordinates immediately\n\t      // this allows to draw dots (when movement never occurs)\n\t      this._captureDrawingPath(pointer);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Inovoked on mouse move\n\t     * @param {Object} pointer\n\t     */\n\t    onMouseMove: function(pointer) {\n\t      this._captureDrawingPath(pointer);\n\t      // redraw curve\n\t      // clear top canvas\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._render();\n\t    },\n\t\n\t    /**\n\t     * Invoked on mouse up\n\t     */\n\t    onMouseUp: function() {\n\t      this._finalizeAndAddPath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _prepareForDrawing: function(pointer) {\n\t\n\t      var p = new fabric.Point(pointer.x, pointer.y);\n\t\n\t      this._reset();\n\t      this._addPoint(p);\n\t\n\t      this.canvas.contextTop.moveTo(p.x, p.y);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Point} point Point to be added to points array\n\t     */\n\t    _addPoint: function(point) {\n\t      this._points.push(point);\n\t    },\n\t\n\t    /**\n\t     * Clear points array and set contextTop canvas style.\n\t     * @private\n\t     */\n\t    _reset: function() {\n\t      this._points.length = 0;\n\t\n\t      this._setBrushStyles();\n\t      this._setShadow();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} pointer Actual mouse position related to the canvas.\n\t     */\n\t    _captureDrawingPath: function(pointer) {\n\t      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n\t      this._addPoint(pointerPoint);\n\t    },\n\t\n\t    /**\n\t     * Draw a smooth path on the topCanvas using quadraticCurveTo\n\t     * @private\n\t     */\n\t    _render: function() {\n\t      var ctx  = this.canvas.contextTop,\n\t          v = this.canvas.viewportTransform,\n\t          p1 = this._points[0],\n\t          p2 = this._points[1];\n\t\n\t      ctx.save();\n\t      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t      ctx.beginPath();\n\t\n\t      //if we only have 2 points in the path and they are the same\n\t      //it means that the user only clicked the canvas without moving the mouse\n\t      //then we should be drawing a dot. A path isn't drawn between two identical dots\n\t      //that's why we set them apart a bit\n\t      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n\t        p1.x -= 0.5;\n\t        p2.x += 0.5;\n\t      }\n\t      ctx.moveTo(p1.x, p1.y);\n\t\n\t      for (var i = 1, len = this._points.length; i < len; i++) {\n\t        // we pick the point between pi + 1 & pi + 2 as the\n\t        // end point and p1 as our control point.\n\t        var midPoint = p1.midPointFrom(p2);\n\t        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\t\n\t        p1 = this._points[i];\n\t        p2 = this._points[i + 1];\n\t      }\n\t      // Draw last line as a straight line while\n\t      // we wait for the next point to be able to calculate\n\t      // the bezier control point\n\t      ctx.lineTo(p1.x, p1.y);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Converts points to SVG path\n\t     * @param {Array} points Array of points\n\t     * @return {String} SVG path\n\t     */\n\t    convertPointsToSVGPath: function(points) {\n\t      var path = [],\n\t          p1 = new fabric.Point(points[0].x, points[0].y),\n\t          p2 = new fabric.Point(points[1].x, points[1].y);\n\t\n\t      path.push('M ', points[0].x, ' ', points[0].y, ' ');\n\t      for (var i = 1, len = points.length; i < len; i++) {\n\t        var midPoint = p1.midPointFrom(p2);\n\t        // p1 is our bezier control point\n\t        // midpoint is our endpoint\n\t        // start point is p(i-1) value.\n\t        path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n\t        p1 = new fabric.Point(points[i].x, points[i].y);\n\t        if ((i + 1) < points.length) {\n\t          p2 = new fabric.Point(points[i + 1].x, points[i + 1].y);\n\t        }\n\t      }\n\t      path.push('L ', p1.x, ' ', p1.y, ' ');\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * Creates fabric.Path object to add on canvas\n\t     * @param {String} pathData Path data\n\t     * @return {fabric.Path} Path to add on canvas\n\t     */\n\t    createPath: function(pathData) {\n\t      var path = new fabric.Path(pathData, {\n\t        fill: null,\n\t        stroke: this.color,\n\t        strokeWidth: this.width,\n\t        strokeLineCap: this.strokeLineCap,\n\t        strokeLineJoin: this.strokeLineJoin,\n\t        strokeDashArray: this.strokeDashArray,\n\t        originX: 'center',\n\t        originY: 'center'\n\t      });\n\t\n\t      if (this.shadow) {\n\t        this.shadow.affectStroke = true;\n\t        path.setShadow(this.shadow);\n\t      }\n\t\n\t      return path;\n\t    },\n\t\n\t    /**\n\t     * On mouseup after drawing the path on contextTop canvas\n\t     * we use the points captured to create an new fabric path object\n\t     * and add it to the fabric canvas.\n\t     */\n\t    _finalizeAndAddPath: function() {\n\t      var ctx = this.canvas.contextTop;\n\t      ctx.closePath();\n\t\n\t      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\t      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n\t        // do not create 0 width/height paths, as they are\n\t        // rendered inconsistently across browsers\n\t        // Firefox 4, for example, renders a dot,\n\t        // whereas Chrome 10 renders nothing\n\t        this.canvas.renderAll();\n\t        return;\n\t      }\n\t\n\t      var path = this.createPath(pathData);\n\t\n\t      this.canvas.add(path);\n\t      path.setCoords();\n\t\n\t      this.canvas.clearContext(this.canvas.contextTop);\n\t      this._resetShadow();\n\t      this.canvas.renderAll();\n\t\n\t      // fire event 'path' created\n\t      this.canvas.fire('path:created', { path: path });\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t/**\n\t * CircleBrush class\n\t * @class fabric.CircleBrush\n\t */\n\tfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a brush\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width: 10,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.CircleBrush} Instance of a circle brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.points = [];\n\t  },\n\t\n\t  /**\n\t   * Invoked inside on mouse down and mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  drawDot: function(pointer) {\n\t    var point = this.addPoint(pointer),\n\t        ctx = this.canvas.contextTop,\n\t        v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    ctx.fillStyle = point.fill;\n\t    ctx.beginPath();\n\t    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n\t    ctx.closePath();\n\t    ctx.fill();\n\t\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.points.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.drawDot(pointer);\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var circles = [];\n\t\n\t    for (var i = 0, len = this.points.length; i < len; i++) {\n\t      var point = this.points[i],\n\t          circle = new fabric.Circle({\n\t            radius: point.radius,\n\t            left: point.x,\n\t            top: point.y,\n\t            originX: 'center',\n\t            originY: 'center',\n\t            fill: point.fill\n\t          });\n\t\n\t      this.shadow && circle.setShadow(this.shadow);\n\t\n\t      circles.push(circle);\n\t    }\n\t    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   * @return {fabric.Point} Just added pointer point\n\t   */\n\t  addPoint: function(pointer) {\n\t    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\t\n\t        circleRadius = fabric.util.getRandomInt(\n\t                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\t\n\t        circleColor = new fabric.Color(this.color)\n\t                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n\t                        .toRgba();\n\t\n\t    pointerPoint.radius = circleRadius;\n\t    pointerPoint.fill = circleColor;\n\t\n\t    this.points.push(pointerPoint);\n\t\n\t    return pointerPoint;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * SprayBrush class\n\t * @class fabric.SprayBrush\n\t */\n\tfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\t\n\t  /**\n\t   * Width of a spray\n\t   * @type Number\n\t   * @default\n\t   */\n\t  width:              10,\n\t\n\t  /**\n\t   * Density of a spray (number of dots per chunk)\n\t   * @type Number\n\t   * @default\n\t   */\n\t  density:            20,\n\t\n\t  /**\n\t   * Width of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidth:           1,\n\t\n\t  /**\n\t   * Width variance of spray dots\n\t   * @type Number\n\t   * @default\n\t   */\n\t  dotWidthVariance:   1,\n\t\n\t  /**\n\t   * Whether opacity of a dot should be random\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  randomOpacity:        false,\n\t\n\t  /**\n\t   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  optimizeOverlapping:  true,\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {fabric.Canvas} canvas\n\t   * @return {fabric.SprayBrush} Instance of a spray brush\n\t   */\n\t  initialize: function(canvas) {\n\t    this.canvas = canvas;\n\t    this.sprayChunks = [];\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse down\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseDown: function(pointer) {\n\t    this.sprayChunks.length = 0;\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._setShadow();\n\t\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse move\n\t   * @param {Object} pointer\n\t   */\n\t  onMouseMove: function(pointer) {\n\t    this.addSprayChunk(pointer);\n\t    this.render();\n\t  },\n\t\n\t  /**\n\t   * Invoked on mouse up\n\t   */\n\t  onMouseUp: function() {\n\t    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n\t    this.canvas.renderOnAddRemove = false;\n\t\n\t    var rects = [];\n\t\n\t    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n\t      var sprayChunk = this.sprayChunks[i];\n\t\n\t      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\t\n\t        var rect = new fabric.Rect({\n\t          width: sprayChunk[j].width,\n\t          height: sprayChunk[j].width,\n\t          left: sprayChunk[j].x + 1,\n\t          top: sprayChunk[j].y + 1,\n\t          originX: 'center',\n\t          originY: 'center',\n\t          fill: this.color\n\t        });\n\t\n\t        this.shadow && rect.setShadow(this.shadow);\n\t        rects.push(rect);\n\t      }\n\t    }\n\t\n\t    if (this.optimizeOverlapping) {\n\t      rects = this._getOptimizedRects(rects);\n\t    }\n\t\n\t    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n\t    group.canvas = this.canvas;\n\t\n\t    this.canvas.add(group);\n\t    this.canvas.fire('path:created', { path: group });\n\t\n\t    this.canvas.clearContext(this.canvas.contextTop);\n\t    this._resetShadow();\n\t    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n\t    this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} rects\n\t   */\n\t  _getOptimizedRects: function(rects) {\n\t\n\t    // avoid creating duplicate rects at the same coordinates\n\t    var uniqueRects = { }, key;\n\t\n\t    for (var i = 0, len = rects.length; i < len; i++) {\n\t      key = rects[i].left + '' + rects[i].top;\n\t      if (!uniqueRects[key]) {\n\t        uniqueRects[key] = rects[i];\n\t      }\n\t    }\n\t    var uniqueRectsArray = [];\n\t    for (key in uniqueRects) {\n\t      uniqueRectsArray.push(uniqueRects[key]);\n\t    }\n\t\n\t    return uniqueRectsArray;\n\t  },\n\t\n\t  /**\n\t   * Renders brush\n\t   */\n\t  render: function() {\n\t    var ctx = this.canvas.contextTop;\n\t    ctx.fillStyle = this.color;\n\t\n\t    var v = this.canvas.viewportTransform;\n\t    ctx.save();\n\t    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\t\n\t    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n\t      var point = this.sprayChunkPoints[i];\n\t      if (typeof point.opacity !== 'undefined') {\n\t        ctx.globalAlpha = point.opacity;\n\t      }\n\t      ctx.fillRect(point.x, point.y, point.width, point.width);\n\t    }\n\t    ctx.restore();\n\t  },\n\t\n\t  /**\n\t   * @param {Object} pointer\n\t   */\n\t  addSprayChunk: function(pointer) {\n\t    this.sprayChunkPoints = [];\n\t\n\t    var x, y, width, radius = this.width / 2;\n\t\n\t    for (var i = 0; i < this.density; i++) {\n\t\n\t      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n\t      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\t\n\t      if (this.dotWidthVariance) {\n\t        width = fabric.util.getRandomInt(\n\t          // bottom clamp width to 1\n\t          Math.max(1, this.dotWidth - this.dotWidthVariance),\n\t          this.dotWidth + this.dotWidthVariance);\n\t      }\n\t      else {\n\t        width = this.dotWidth;\n\t      }\n\t\n\t      var point = new fabric.Point(x, y);\n\t      point.width = width;\n\t\n\t      if (this.randomOpacity) {\n\t        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n\t      }\n\t\n\t      this.sprayChunkPoints.push(point);\n\t    }\n\t\n\t    this.sprayChunks.push(this.sprayChunkPoints);\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * PatternBrush class\n\t * @class fabric.PatternBrush\n\t * @extends fabric.BaseBrush\n\t */\n\tfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\t\n\t  getPatternSrc: function() {\n\t\n\t    var dotWidth = 20,\n\t        dotDistance = 5,\n\t        patternCanvas = fabric.document.createElement('canvas'),\n\t        patternCtx = patternCanvas.getContext('2d');\n\t\n\t    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\t\n\t    patternCtx.fillStyle = this.color;\n\t    patternCtx.beginPath();\n\t    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n\t    patternCtx.closePath();\n\t    patternCtx.fill();\n\t\n\t    return patternCanvas;\n\t  },\n\t\n\t  getPatternSrcFunction: function() {\n\t    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n\t  },\n\t\n\t  /**\n\t   * Creates \"pattern\" instance property\n\t   */\n\t  getPattern: function() {\n\t    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n\t  },\n\t\n\t  /**\n\t   * Sets brush styles\n\t   */\n\t  _setBrushStyles: function() {\n\t    this.callSuper('_setBrushStyles');\n\t    this.canvas.contextTop.strokeStyle = this.getPattern();\n\t  },\n\t\n\t  /**\n\t   * Creates path\n\t   */\n\t  createPath: function(pathData) {\n\t    var path = this.callSuper('createPath', pathData),\n\t        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\t\n\t    path.stroke = new fabric.Pattern({\n\t      source: this.source || this.getPatternSrcFunction(),\n\t      offsetX: -topLeft.x,\n\t      offsetY: -topLeft.y\n\t    });\n\t    return path;\n\t  }\n\t});\n\t\n\t\n\t(function() {\n\t\n\t  var getPointer = fabric.util.getPointer,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      radiansToDegrees = fabric.util.radiansToDegrees,\n\t      atan2 = Math.atan2,\n\t      abs = Math.abs,\n\t      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t\n\t      STROKE_OFFSET = 0.5;\n\t\n\t  /**\n\t   * Canvas class\n\t   * @class fabric.Canvas\n\t   * @extends fabric.StaticCanvas\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n\t   * @see {@link fabric.Canvas#initialize} for constructor definition\n\t   *\n\t   * @fires object:added\n\t   * @fires object:modified\n\t   * @fires object:rotating\n\t   * @fires object:scaling\n\t   * @fires object:moving\n\t   * @fires object:selected\n\t   *\n\t   * @fires before:selection:cleared\n\t   * @fires selection:cleared\n\t   * @fires selection:created\n\t   *\n\t   * @fires path:created\n\t   * @fires mouse:down\n\t   * @fires mouse:move\n\t   * @fires mouse:up\n\t   * @fires mouse:over\n\t   * @fires mouse:out\n\t   *\n\t   */\n\t  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(el, options) {\n\t      options || (options = { });\n\t\n\t      this._initStatic(el, options);\n\t      this._initInteractive();\n\t      this._createCacheCanvas();\n\t    },\n\t\n\t    /**\n\t     * When true, objects can be transformed by one side (unproportionally)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    uniScaleTransform:      false,\n\t\n\t    /**\n\t     * Indicates which key enable unproportional scaling\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    uniScaleKey:           'shiftKey',\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of scale transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:        false,\n\t\n\t    /**\n\t     * When true, objects use center point as the origin of rotate transformation.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:       false,\n\t\n\t    /**\n\t     * Indicates which key enable centered Transfrom\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    centeredKey:           'altKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternate action on corner\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    altActionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates that canvas is interactive. This property should not be changed.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    interactive:            true,\n\t\n\t    /**\n\t     * Indicates whether group selection should be enabled\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selection:              true,\n\t\n\t    /**\n\t     * Indicates which key enable multiple click selection\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionKey:           'shiftKey',\n\t\n\t    /**\n\t     * Indicates which key enable alternative selection\n\t     * in case of target overlapping with active object\n\t     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n\t     * If `null` or 'none' or any other string that is not a modifier key\n\t     * feature is disabled feature disabled.\n\t     * @since 1.6.5\n\t     * @type null|String\n\t     * @default\n\t     */\n\t    altSelectionKey:           null,\n\t\n\t    /**\n\t     * Color of selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\t\n\t    /**\n\t     * Default dash array pattern\n\t     * If not empty the selection border is dashed\n\t     * @type Array\n\t     */\n\t    selectionDashArray:     [],\n\t\n\t    /**\n\t     * Color of the border of selection (usually slightly darker than color of selection itself)\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\t\n\t    /**\n\t     * Width of a line used in object/group selection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionLineWidth:     1,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:            'move',\n\t\n\t    /**\n\t     * Default cursor value used when moving an object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:             'move',\n\t\n\t    /**\n\t     * Default cursor value used for the entire canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    defaultCursor:          'default',\n\t\n\t    /**\n\t     * Cursor value used during free drawing\n\t     * @type String\n\t     * @default\n\t     */\n\t    freeDrawingCursor:      'crosshair',\n\t\n\t    /**\n\t     * Cursor value used for rotation point\n\t     * @type String\n\t     * @default\n\t     */\n\t    rotationCursor:         'crosshair',\n\t\n\t    /**\n\t     * Default element class that's given to wrapper (div) element of canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    containerClass:         'canvas-container',\n\t\n\t    /**\n\t     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:     false,\n\t\n\t    /**\n\t     * Number of pixels around target pixel to tolerate (consider active) during object detection\n\t     * @type Number\n\t     * @default\n\t     */\n\t    targetFindTolerance:    0,\n\t\n\t    /**\n\t     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    skipTargetFind:         false,\n\t\n\t    /**\n\t     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n\t     * After mousedown, mousemove creates a shape,\n\t     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n\t     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isDrawingMode:          false,\n\t\n\t    /**\n\t     * Indicates whether objects should remain in current stack position when selected.\n\t     * When false objects are brought to top and rendered as part of the selection group\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    preserveObjectStacking: false,\n\t\n\t    /**\n\t     * Indicates the angle that an object will lock to while rotating.\n\t     * @type Number\n\t     * @since 1.6.7\n\t     * @default\n\t     */\n\t    snapAngle: 0,\n\t\n\t    /**\n\t     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n\t     * When `null`, the snapThreshold will default to the snapAngle.\n\t     * @type null|Number\n\t     * @since 1.6.7\n\t     * @default\n\t     */\n\t    snapThreshold: null,\n\t\n\t    /**\n\t     * Indicates if the right click on canvas can output the context menu or not\n\t     * @type Boolean\n\t     * @since 1.6.5\n\t     * @default\n\t     */\n\t    stopContextMenu: false,\n\t\n\t    /**\n\t     * Indicates if the canvas can fire right click events\n\t     * @type Boolean\n\t     * @since 1.6.5\n\t     * @default\n\t     */\n\t    fireRightClick: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initInteractive: function() {\n\t      this._currentTransform = null;\n\t      this._groupSelector = null;\n\t      this._initWrapperElement();\n\t      this._createUpperCanvas();\n\t      this._initEventListeners();\n\t\n\t      this._initRetinaScaling();\n\t\n\t      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\t\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Divides objects in two groups, one to render immediately\n\t     * and one to render as activeGroup.\n\t     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n\t     */\n\t    _chooseObjectsToRender: function() {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          object, objsToRender = [], activeGroupObjects = [];\n\t\n\t      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n\t        for (var i = 0, length = this._objects.length; i < length; i++) {\n\t          object = this._objects[i];\n\t          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n\t            objsToRender.push(object);\n\t          }\n\t          else {\n\t            activeGroupObjects.push(object);\n\t          }\n\t        }\n\t        if (activeGroup) {\n\t          activeGroup._set('_objects', activeGroupObjects);\n\t          objsToRender.push(activeGroup);\n\t        }\n\t        activeObject && objsToRender.push(activeObject);\n\t      }\n\t      else {\n\t        objsToRender = this._objects;\n\t      }\n\t      return objsToRender;\n\t    },\n\t\n\t    /**\n\t     * Renders both the top canvas and the secondary container canvas.\n\t     * @return {fabric.Canvas} instance\n\t     * @chainable\n\t     */\n\t    renderAll: function () {\n\t      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n\t        this.clearContext(this.contextTop);\n\t        this.contextTopDirty = false;\n\t      }\n\t      var canvasToDrawOn = this.contextContainer;\n\t      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Method to render only the top canvas.\n\t     * Also used to render the group selection box.\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    renderTop: function () {\n\t      var ctx = this.contextTop;\n\t      this.clearContext(ctx);\n\t\n\t      // we render the top context - last object\n\t      if (this.selection && this._groupSelector) {\n\t        this._drawSelection(ctx);\n\t      }\n\t\n\t      this.fire('after:render');\n\t      this.contextTopDirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Resets the current transform to its original values and chooses the type of resizing based on the event\n\t     * @private\n\t     */\n\t    _resetCurrentTransform: function() {\n\t      var t = this._currentTransform;\n\t\n\t      t.target.set({\n\t        scaleX: t.original.scaleX,\n\t        scaleY: t.original.scaleY,\n\t        skewX: t.original.skewX,\n\t        skewY: t.original.skewY,\n\t        left: t.original.left,\n\t        top: t.original.top\n\t      });\n\t\n\t      if (this._shouldCenterTransform(t.target)) {\n\t        if (t.action === 'rotate') {\n\t          this._setOriginToCenter(t.target);\n\t        }\n\t        else {\n\t          if (t.originX !== 'center') {\n\t            if (t.originX === 'right') {\n\t              t.mouseXSign = -1;\n\t            }\n\t            else {\n\t              t.mouseXSign = 1;\n\t            }\n\t          }\n\t          if (t.originY !== 'center') {\n\t            if (t.originY === 'bottom') {\n\t              t.mouseYSign = -1;\n\t            }\n\t            else {\n\t              t.mouseYSign = 1;\n\t            }\n\t          }\n\t\n\t          t.originX = 'center';\n\t          t.originY = 'center';\n\t        }\n\t      }\n\t      else {\n\t        t.originX = t.original.originX;\n\t        t.originY = t.original.originY;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Checks if point is contained within an area of given object\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target Object to test against\n\t     * @param {Object} [point] x,y object of point coordinates we want to check.\n\t     * @return {Boolean} true if point is contained within an area of given object\n\t     */\n\t    containsPoint: function (e, target, point) {\n\t      var ignoreZoom = true,\n\t          pointer = point || this.getPointer(e, ignoreZoom),\n\t          xy;\n\t\n\t      if (target.group && target.group === this.getActiveGroup()) {\n\t        xy = this._normalizePointer(target.group, pointer);\n\t      }\n\t      else {\n\t        xy = { x: pointer.x, y: pointer.y };\n\t      }\n\t      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n\t      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\t      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _normalizePointer: function (object, pointer) {\n\t      var m = object.calcTransformMatrix(),\n\t          invertedM = fabric.util.invertTransform(m),\n\t          vptPointer = this.restorePointerVpt(pointer);\n\t      return fabric.util.transformPoint(vptPointer, invertedM);\n\t    },\n\t\n\t    /**\n\t     * Returns true if object is transparent at a certain location\n\t     * @param {fabric.Object} target Object to check\n\t     * @param {Number} x Left coordinate\n\t     * @param {Number} y Top coordinate\n\t     * @return {Boolean}\n\t     */\n\t    isTargetTransparent: function (target, x, y) {\n\t      var hasBorders = target.hasBorders,\n\t          transparentCorners = target.transparentCorners,\n\t          ctx = this.contextCache,\n\t          originalColor = target.selectionBackgroundColor;\n\t\n\t      target.hasBorders = target.transparentCorners = false;\n\t      target.selectionBackgroundColor = '';\n\t\n\t      ctx.save();\n\t      ctx.transform.apply(ctx, this.viewportTransform);\n\t      target.render(ctx);\n\t      ctx.restore();\n\t\n\t      target.active && target._renderControls(ctx);\n\t\n\t      target.hasBorders = hasBorders;\n\t      target.transparentCorners = transparentCorners;\n\t      target.selectionBackgroundColor = originalColor;\n\t\n\t      var isTransparent = fabric.util.isTransparent(\n\t        ctx, x, y, this.targetFindTolerance);\n\t\n\t      this.clearContext(ctx);\n\t\n\t      return isTransparent;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldClearSelection: function (e, target) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject();\n\t\n\t      return (\n\t        !target\n\t        ||\n\t        (target &&\n\t          activeGroup &&\n\t          !activeGroup.contains(target) &&\n\t          activeGroup !== target &&\n\t          !e[this.selectionKey])\n\t        ||\n\t        (target && !target.evented)\n\t        ||\n\t        (target &&\n\t          !target.selectable &&\n\t          activeObject &&\n\t          activeObject !== target)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} target\n\t     */\n\t    _shouldCenterTransform: function (target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var t = this._currentTransform,\n\t          centerTransform;\n\t\n\t      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n\t        centerTransform = this.centeredScaling || target.centeredScaling;\n\t      }\n\t      else if (t.action === 'rotate') {\n\t        centerTransform = this.centeredRotation || target.centeredRotation;\n\t      }\n\t\n\t      return centerTransform ? !t.altKey : t.altKey;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getOriginFromCorner: function(target, corner) {\n\t      var origin = {\n\t        x: target.originX,\n\t        y: target.originY\n\t      };\n\t\n\t      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n\t        origin.x = 'right';\n\t      }\n\t      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n\t        origin.x = 'left';\n\t      }\n\t\n\t      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n\t        origin.y = 'bottom';\n\t      }\n\t      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n\t        origin.y = 'top';\n\t      }\n\t\n\t      return origin;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getActionFromCorner: function(target, corner, e) {\n\t      if (!corner) {\n\t        return 'drag';\n\t      }\n\t\n\t      switch (corner) {\n\t        case 'mtr':\n\t          return 'rotate';\n\t        case 'ml':\n\t        case 'mr':\n\t          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n\t        case 'mt':\n\t        case 'mb':\n\t          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n\t        default:\n\t          return 'scale';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _setupCurrentTransform: function (e, target) {\n\t      if (!target) {\n\t        return;\n\t      }\n\t\n\t      var pointer = this.getPointer(e),\n\t          corner = target._findTargetCorner(this.getPointer(e, true)),\n\t          action = this._getActionFromCorner(target, corner, e),\n\t          origin = this._getOriginFromCorner(target, corner);\n\t\n\t      this._currentTransform = {\n\t        target: target,\n\t        action: action,\n\t        corner: corner,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        offsetX: pointer.x - target.left,\n\t        offsetY: pointer.y - target.top,\n\t        originX: origin.x,\n\t        originY: origin.y,\n\t        ex: pointer.x,\n\t        ey: pointer.y,\n\t        lastX: pointer.x,\n\t        lastY: pointer.y,\n\t        left: target.left,\n\t        top: target.top,\n\t        theta: degreesToRadians(target.angle),\n\t        width: target.width * target.scaleX,\n\t        mouseXSign: 1,\n\t        mouseYSign: 1,\n\t        shiftKey: e.shiftKey,\n\t        altKey: e[this.centeredKey]\n\t      };\n\t\n\t      this._currentTransform.original = {\n\t        left: target.left,\n\t        top: target.top,\n\t        scaleX: target.scaleX,\n\t        scaleY: target.scaleY,\n\t        skewX: target.skewX,\n\t        skewY: target.skewY,\n\t        originX: origin.x,\n\t        originY: origin.y\n\t      };\n\t\n\t      this._resetCurrentTransform();\n\t    },\n\t\n\t    /**\n\t     * Translates object by \"setting\" its left/top\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the translation occurred\n\t     */\n\t    _translateObject: function (x, y) {\n\t      var transform = this._currentTransform,\n\t          target = transform.target,\n\t          newLeft = x - transform.offsetX,\n\t          newTop = y - transform.offsetY,\n\t          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n\t          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\t\n\t      moveX && target.set('left', newLeft);\n\t      moveY && target.set('top', newTop);\n\t      return moveX || moveY;\n\t    },\n\t\n\t    /**\n\t     * Check if we are increasing a positive skew or lower it,\n\t     * checking mouse direction and pressed corner.\n\t     * @private\n\t     */\n\t    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n\t      var property = 'originX', origins = { 0: 'center' },\n\t          skew = t.target.skewX, originA = 'left', originB = 'right',\n\t          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n\t          flipSign = 1;\n\t\n\t      mouseMove = mouseMove > 0 ? 1 : -1;\n\t      if (by === 'y') {\n\t        skew = t.target.skewY;\n\t        originA = 'top';\n\t        originB = 'bottom';\n\t        property = 'originY';\n\t      }\n\t      origins[-1] = originA;\n\t      origins[1] = originB;\n\t\n\t      t.target.flipX && (flipSign *= -1);\n\t      t.target.flipY && (flipSign *= -1);\n\t\n\t      if (skew === 0) {\n\t        t.skewSign = -corner * mouseMove * flipSign;\n\t        t[property] = origins[-mouseMove];\n\t      }\n\t      else {\n\t        skew = skew > 0 ? 1 : -1;\n\t        t.skewSign = skew;\n\t        t[property] = origins[skew * corner * flipSign];\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Skew object by mouse events\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y'\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _skewObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target, skewed = false,\n\t          lockSkewingX = target.get('lockSkewingX'),\n\t          lockSkewingY = target.get('lockSkewingY');\n\t\n\t      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var center = target.getCenterPoint(),\n\t          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n\t          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n\t          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\t\n\t      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n\t      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n\t      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n\t      // Actually skew the object\n\t      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n\t      t.lastX = x;\n\t      t.lastY = y;\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Set object skew\n\t     * @private\n\t     * @return {Boolean} true if the skewing occurred\n\t     */\n\t    _setObjectSkew: function(localMouse, transform, by, _dim) {\n\t      var target = transform.target, newValue, skewed = false,\n\t          skewSign = transform.skewSign, newDim, dimNoSkew,\n\t          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\t\n\t      if (by === 'x') {\n\t        otherBy = 'y';\n\t        _otherBy = 'Y';\n\t        _by = 'X';\n\t        skewX = 0;\n\t        skewY = target.skewY;\n\t      }\n\t      else {\n\t        otherBy = 'x';\n\t        _otherBy = 'X';\n\t        _by = 'Y';\n\t        skewX = target.skewX;\n\t        skewY = 0;\n\t      }\n\t\n\t      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n\t      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n\t      if (newDimMouse <= 2) {\n\t        newValue = 0;\n\t      }\n\t      else {\n\t        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n\t                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n\t        newValue = fabric.util.radiansToDegrees(newValue);\n\t      }\n\t      skewed = target['skew' + _by] !== newValue;\n\t      target.set('skew' + _by, newValue);\n\t      if (target['skew' + _otherBy] !== 0) {\n\t        newDim = target._getTransformedDimensions();\n\t        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n\t        target.set('scale' + _otherBy, newValue);\n\t      }\n\t      return skewed;\n\t    },\n\t\n\t    /**\n\t     * Scales object by invoking its scaleX/scaleY methods\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n\t     *                    When not provided, an object is scaled by both dimensions equally\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObject: function (x, y, by) {\n\t      var t = this._currentTransform,\n\t          target = t.target,\n\t          lockScalingX = target.get('lockScalingX'),\n\t          lockScalingY = target.get('lockScalingY'),\n\t          lockScalingFlip = target.get('lockScalingFlip');\n\t\n\t      if (lockScalingX && lockScalingY) {\n\t        return false;\n\t      }\n\t\n\t      // Get the constraint point\n\t      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n\t          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n\t          dim = target._getTransformedDimensions(), scaled = false;\n\t\n\t      this._setLocalMouse(localMouse, t);\n\t\n\t      // Actually scale the object\n\t      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\t\n\t      // Make sure the constraints apply\n\t      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n\t          changeX, changeY, scaleX, scaleY;\n\t\n\t      scaleX = localMouse.x * target.scaleX / _dim.x;\n\t      scaleY = localMouse.y * target.scaleY / _dim.y;\n\t      changeX = target.scaleX !== scaleX;\n\t      changeY = target.scaleY !== scaleY;\n\t\n\t      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n\t        forbidScalingX = true;\n\t      }\n\t\n\t      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n\t        forbidScalingY = true;\n\t      }\n\t\n\t      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n\t        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n\t      }\n\t      else if (!by) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      else if (by === 'x' && !target.get('lockUniScaling')) {\n\t        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n\t      }\n\t      else if (by === 'y' && !target.get('lockUniScaling')) {\n\t        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n\t      }\n\t      transform.newScaleX = scaleX;\n\t      transform.newScaleY = scaleY;\n\t      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\t\n\t      var dist = localMouse.y + localMouse.x,\n\t          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n\t                     _dim.x * transform.original.scaleX / target.scaleX,\n\t          scaled;\n\t\n\t      // We use transform.scaleX/Y instead of target.scaleX/Y\n\t      // because the object may have a min scale and we'll loose the proportions\n\t      transform.newScaleX = transform.original.scaleX * dist / lastDist;\n\t      transform.newScaleY = transform.original.scaleY * dist / lastDist;\n\t      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n\t      target.set('scaleX', transform.newScaleX);\n\t      target.set('scaleY', transform.newScaleY);\n\t      return scaled;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _flipObject: function(transform, by) {\n\t      if (transform.newScaleX < 0 && by !== 'y') {\n\t        if (transform.originX === 'left') {\n\t          transform.originX = 'right';\n\t        }\n\t        else if (transform.originX === 'right') {\n\t          transform.originX = 'left';\n\t        }\n\t      }\n\t\n\t      if (transform.newScaleY < 0 && by !== 'x') {\n\t        if (transform.originY === 'top') {\n\t          transform.originY = 'bottom';\n\t        }\n\t        else if (transform.originY === 'bottom') {\n\t          transform.originY = 'top';\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setLocalMouse: function(localMouse, t) {\n\t      var target = t.target;\n\t\n\t      if (t.originX === 'right') {\n\t        localMouse.x *= -1;\n\t      }\n\t      else if (t.originX === 'center') {\n\t        localMouse.x *= t.mouseXSign * 2;\n\t        if (localMouse.x < 0) {\n\t          t.mouseXSign = -t.mouseXSign;\n\t        }\n\t      }\n\t\n\t      if (t.originY === 'bottom') {\n\t        localMouse.y *= -1;\n\t      }\n\t      else if (t.originY === 'center') {\n\t        localMouse.y *= t.mouseYSign * 2;\n\t        if (localMouse.y < 0) {\n\t          t.mouseYSign = -t.mouseYSign;\n\t        }\n\t      }\n\t\n\t      // adjust the mouse coordinates when dealing with padding\n\t      if (abs(localMouse.x) > target.padding) {\n\t        if (localMouse.x < 0) {\n\t          localMouse.x += target.padding;\n\t        }\n\t        else {\n\t          localMouse.x -= target.padding;\n\t        }\n\t      }\n\t      else { // mouse is within the padding, set to 0\n\t        localMouse.x = 0;\n\t      }\n\t\n\t      if (abs(localMouse.y) > target.padding) {\n\t        if (localMouse.y < 0) {\n\t          localMouse.y += target.padding;\n\t        }\n\t        else {\n\t          localMouse.y -= target.padding;\n\t        }\n\t      }\n\t      else {\n\t        localMouse.y = 0;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Rotates object by invoking its rotate method\n\t     * @private\n\t     * @param {Number} x pointer's x coordinate\n\t     * @param {Number} y pointer's y coordinate\n\t     * @return {Boolean} true if the rotation occurred\n\t     */\n\t    _rotateObject: function (x, y) {\n\t\n\t      var t = this._currentTransform;\n\t\n\t      if (t.target.get('lockRotation')) {\n\t        return false;\n\t      }\n\t\n\t      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n\t          curAngle = atan2(y - t.top, x - t.left),\n\t          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n\t          hasRoated = true;\n\t\n\t      // normalize angle to positive value\n\t      if (angle < 0) {\n\t        angle = 360 + angle;\n\t      }\n\t\n\t      angle %= 360;\n\t\n\t      if (t.target.snapAngle > 0) {\n\t        var snapAngle  = t.target.snapAngle,\n\t            snapThreshold  = t.target.snapThreshold || snapAngle,\n\t            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n\t            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\t\n\t        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n\t          angle = leftAngleLocked;\n\t        }\n\t        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n\t          angle = rightAngleLocked;\n\t        }\n\t\n\t        if (t.target.angle === angle) {\n\t          hasRoated = false;\n\t        }\n\t      }\n\t\n\t      t.target.angle = angle;\n\t      return hasRoated;\n\t    },\n\t\n\t    /**\n\t     * Set the cursor type of the canvas element\n\t     * @param {String} value Cursor type of the canvas element.\n\t     * @see http://www.w3.org/TR/css3-ui/#cursor\n\t     */\n\t    setCursor: function (value) {\n\t      this.upperCanvasEl.style.cursor = value;\n\t    },\n\t\n\t    /**\n\t     * @param {fabric.Object} target to reset transform\n\t     * @private\n\t     */\n\t    _resetObjectTransform: function (target) {\n\t      target.scaleX = 1;\n\t      target.scaleY = 1;\n\t      target.skewX = 0;\n\t      target.skewY = 0;\n\t      target.setAngle(0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n\t     */\n\t    _drawSelection: function (ctx) {\n\t      var groupSelector = this._groupSelector,\n\t          left = groupSelector.left,\n\t          top = groupSelector.top,\n\t          aleft = abs(left),\n\t          atop = abs(top);\n\t\n\t      if (this.selectionColor) {\n\t        ctx.fillStyle = this.selectionColor;\n\t\n\t        ctx.fillRect(\n\t          groupSelector.ex - ((left > 0) ? 0 : -left),\n\t          groupSelector.ey - ((top > 0) ? 0 : -top),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t\n\t      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n\t        return;\n\t      }\n\t      ctx.lineWidth = this.selectionLineWidth;\n\t      ctx.strokeStyle = this.selectionBorderColor;\n\t\n\t      // selection border\n\t      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\t\n\t        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\t\n\t        ctx.beginPath();\n\t\n\t        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n\t        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\t\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t      else {\n\t        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n\t        ctx.strokeRect(\n\t          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n\t          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n\t          aleft,\n\t          atop\n\t        );\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Method that determines what object we are clicking on\n\t     * @param {Event} e mouse event\n\t     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n\t     */\n\t    findTarget: function (e, skipGroup) {\n\t      if (this.skipTargetFind) {\n\t        return;\n\t      }\n\t\n\t      var ignoreZoom = true,\n\t          pointer = this.getPointer(e, ignoreZoom),\n\t          activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject(),\n\t          activeTarget;\n\t      // first check current group (if one exists)\n\t      // active group does not check sub targets like normal groups.\n\t      // if active group just exits.\n\t      if (activeGroup && !skipGroup && this._checkTarget(pointer, activeGroup)) {\n\t        this._fireOverOutEvents(activeGroup, e);\n\t        return activeGroup;\n\t      }\n\t      // if we hit the corner of an activeObject, let's return that.\n\t      if (activeObject && activeObject._findTargetCorner(pointer)) {\n\t        this._fireOverOutEvents(activeObject, e);\n\t        return activeObject;\n\t      }\n\t      if (activeObject && this._checkTarget(pointer, activeObject)) {\n\t        if (!this.preserveObjectStacking) {\n\t          this._fireOverOutEvents(activeObject, e);\n\t          return activeObject;\n\t        }\n\t        else {\n\t          activeTarget = activeObject;\n\t        }\n\t      }\n\t\n\t      this.targets = [];\n\t      var target = this._searchPossibleTargets(this._objects, pointer);\n\t      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n\t        target = activeTarget;\n\t      }\n\t      this._fireOverOutEvents(target, e);\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fireOverOutEvents: function(target, e) {\n\t      if (target) {\n\t        if (this._hoveredTarget !== target) {\n\t          if (this._hoveredTarget) {\n\t            this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n\t            this._hoveredTarget.fire('mouseout');\n\t          }\n\t          this.fire('mouse:over', { target: target, e: e });\n\t          target.fire('mouseover');\n\t          this._hoveredTarget = target;\n\t        }\n\t      }\n\t      else if (this._hoveredTarget) {\n\t        this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n\t        this._hoveredTarget.fire('mouseout');\n\t        this._hoveredTarget = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _checkTarget: function(pointer, obj) {\n\t      if (obj &&\n\t          obj.visible &&\n\t          obj.evented &&\n\t          this.containsPoint(null, obj, pointer)){\n\t        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n\t          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n\t          if (!isTransparent) {\n\t            return true;\n\t          }\n\t        }\n\t        else {\n\t          return true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _searchPossibleTargets: function(objects, pointer) {\n\t\n\t      // Cache all targets where their bounding box contains point.\n\t      var target, i = objects.length, normalizedPointer, subTarget;\n\t      // Do not check for currently grouped objects, since we check the parent group itself.\n\t      // untill we call this function specifically to search inside the activeGroup\n\t      while (i--) {\n\t        if (this._checkTarget(pointer, objects[i])) {\n\t          target = objects[i];\n\t          if (target.type === 'group' && target.subTargetCheck) {\n\t            normalizedPointer = this._normalizePointer(target, pointer);\n\t            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n\t            subTarget && this.targets.push(subTarget);\n\t          }\n\t          break;\n\t        }\n\t      }\n\t      return target;\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates without the effect of the viewport\n\t     * @param {Object} pointer with \"x\" and \"y\" number values\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    restorePointerVpt: function(pointer) {\n\t      return fabric.util.transformPoint(\n\t        pointer,\n\t        fabric.util.invertTransform(this.viewportTransform)\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Returns pointer coordinates relative to canvas.\n\t     * @param {Event} e\n\t     * @param {Boolean} ignoreZoom\n\t     * @return {Object} object with \"x\" and \"y\" number values\n\t     */\n\t    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n\t      if (!upperCanvasEl) {\n\t        upperCanvasEl = this.upperCanvasEl;\n\t      }\n\t      var pointer = getPointer(e),\n\t          bounds = upperCanvasEl.getBoundingClientRect(),\n\t          boundsWidth = bounds.width || 0,\n\t          boundsHeight = bounds.height || 0,\n\t          cssScale;\n\t\n\t      if (!boundsWidth || !boundsHeight ) {\n\t        if ('top' in bounds && 'bottom' in bounds) {\n\t          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n\t        }\n\t        if ('right' in bounds && 'left' in bounds) {\n\t          boundsWidth = Math.abs( bounds.right - bounds.left );\n\t        }\n\t      }\n\t\n\t      this.calcOffset();\n\t\n\t      pointer.x = pointer.x - this._offset.left;\n\t      pointer.y = pointer.y - this._offset.top;\n\t      if (!ignoreZoom) {\n\t        pointer = this.restorePointerVpt(pointer);\n\t      }\n\t\n\t      if (boundsWidth === 0 || boundsHeight === 0) {\n\t        // If bounds are not available (i.e. not visible), do not apply scale.\n\t        cssScale = { width: 1, height: 1 };\n\t      }\n\t      else {\n\t        cssScale = {\n\t          width: upperCanvasEl.width / boundsWidth,\n\t          height: upperCanvasEl.height / boundsHeight\n\t        };\n\t      }\n\t\n\t      return {\n\t        x: pointer.x * cssScale.width,\n\t        y: pointer.y * cssScale.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n\t     */\n\t    _createUpperCanvas: function () {\n\t      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\t\n\t      this.upperCanvasEl = this._createCanvasElement();\n\t      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\t\n\t      this.wrapperEl.appendChild(this.upperCanvasEl);\n\t\n\t      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n\t      this._applyCanvasStyle(this.upperCanvasEl);\n\t      this.contextTop = this.upperCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function () {\n\t      this.cacheCanvasEl = this._createCanvasElement();\n\t      this.cacheCanvasEl.setAttribute('width', this.width);\n\t      this.cacheCanvasEl.setAttribute('height', this.height);\n\t      this.contextCache = this.cacheCanvasEl.getContext('2d');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _initWrapperElement: function () {\n\t      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n\t        'class': this.containerClass\n\t      });\n\t      fabric.util.setStyle(this.wrapperEl, {\n\t        width: this.getWidth() + 'px',\n\t        height: this.getHeight() + 'px',\n\t        position: 'relative'\n\t      });\n\t      fabric.util.makeElementUnselectable(this.wrapperEl);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {HTMLElement} element canvas element to apply styles on\n\t     */\n\t    _applyCanvasStyle: function (element) {\n\t      var width = this.getWidth() || element.width,\n\t          height = this.getHeight() || element.height;\n\t\n\t      fabric.util.setStyle(element, {\n\t        position: 'absolute',\n\t        width: width + 'px',\n\t        height: height + 'px',\n\t        left: 0,\n\t        top: 0\n\t      });\n\t      element.width = width;\n\t      element.height = height;\n\t      fabric.util.makeElementUnselectable(element);\n\t    },\n\t\n\t    /**\n\t     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n\t     * @private\n\t     * @param {Element} fromEl Element style is copied from\n\t     * @param {Element} toEl Element copied style is applied to\n\t     */\n\t    _copyCanvasStyle: function (fromEl, toEl) {\n\t      toEl.style.cssText = fromEl.style.cssText;\n\t    },\n\t\n\t    /**\n\t     * Returns context of canvas where object selection is drawn\n\t     * @return {CanvasRenderingContext2D}\n\t     */\n\t    getSelectionContext: function() {\n\t      return this.contextTop;\n\t    },\n\t\n\t    /**\n\t     * Returns &lt;canvas> element on which object selection is drawn\n\t     * @return {HTMLCanvasElement}\n\t     */\n\t    getSelectionElement: function () {\n\t      return this.upperCanvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _setActiveObject: function(object) {\n\t      if (this._activeObject) {\n\t        this._activeObject.set('active', false);\n\t      }\n\t      this._activeObject = object;\n\t      object.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * Sets given object as the only active object on canvas\n\t     * @param {fabric.Object} object Object to set as an active one\n\t     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveObject: function (object, e) {\n\t      this._setActiveObject(object);\n\t      this.renderAll();\n\t      this.fire('object:selected', { target: object, e: e });\n\t      object.fire('selected', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active object\n\t     * @return {fabric.Object} active object\n\t     */\n\t    getActiveObject: function () {\n\t      return this._activeObject;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Object} obj Object that was removed\n\t     */\n\t    _onObjectRemoved: function(obj) {\n\t      // removing active object should fire \"selection:cleared\" events\n\t      if (this.getActiveObject() === obj) {\n\t        this.fire('before:selection:cleared', { target: obj });\n\t        this._discardActiveObject();\n\t        this.fire('selection:cleared', { target: obj });\n\t        obj.fire('deselected');\n\t      }\n\t      this.callSuper('_onObjectRemoved', obj);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveObject: function() {\n\t      if (this._activeObject) {\n\t        this._activeObject.set('active', false);\n\t      }\n\t      this._activeObject = null;\n\t    },\n\t\n\t    /**\n\t     * Discards currently active object and fire events\n\t     * @param {event} e\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveObject: function (e) {\n\t      var activeObject = this._activeObject;\n\t      this.fire('before:selection:cleared', { target: activeObject, e: e });\n\t      this._discardActiveObject();\n\t      this.fire('selection:cleared', { e: e });\n\t      activeObject && activeObject.fire('deselected', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {fabric.Group} group\n\t     */\n\t    _setActiveGroup: function(group) {\n\t      this._activeGroup = group;\n\t      if (group) {\n\t        group.set('active', true);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets active group to a specified one\n\t     * @param {fabric.Group} group Group to set as a current one\n\t     * @param {Event} e Event object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    setActiveGroup: function (group, e) {\n\t      this._setActiveGroup(group);\n\t      if (group) {\n\t        this.fire('object:selected', { target: group, e: e });\n\t        group.fire('selected', { e: e });\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns currently active group\n\t     * @return {fabric.Group} Current group\n\t     */\n\t    getActiveGroup: function () {\n\t      return this._activeGroup;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _discardActiveGroup: function() {\n\t      var g = this.getActiveGroup();\n\t      if (g) {\n\t        g.destroy();\n\t      }\n\t      this.setActiveGroup(null);\n\t    },\n\t\n\t    /**\n\t     * Discards currently active group and fire events\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    discardActiveGroup: function (e) {\n\t      var g = this.getActiveGroup();\n\t      this.fire('before:selection:cleared', { e: e, target: g });\n\t      this._discardActiveGroup();\n\t      this.fire('selection:cleared', { e: e });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects on canvas, removing any active group or object\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    deactivateAll: function () {\n\t      var allObjects = this.getObjects(),\n\t          i = 0,\n\t          len = allObjects.length,\n\t          obj;\n\t      for ( ; i < len; i++) {\n\t        obj = allObjects[i];\n\t        obj && obj.set('active', false);\n\t      }\n\t      this._discardActiveGroup();\n\t      this._discardActiveObject();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Deactivates all objects and dispatches appropriate events\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    deactivateAllWithDispatch: function (e) {\n\t      var activeGroup = this.getActiveGroup(),\n\t          activeObject = this.getActiveObject();\n\t      if (activeObject || activeGroup) {\n\t        this.fire('before:selection:cleared', { target: activeObject || activeGroup, e: e });\n\t      }\n\t      this.deactivateAll();\n\t      if (activeObject || activeGroup) {\n\t        this.fire('selection:cleared', { e: e, target: activeObject });\n\t        activeObject && activeObject.fire('deselected');\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears a canvas element and removes all event listeners\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    dispose: function () {\n\t      this.callSuper('dispose');\n\t      var wrapper = this.wrapperEl;\n\t      this.removeListeners();\n\t      wrapper.removeChild(this.upperCanvasEl);\n\t      wrapper.removeChild(this.lowerCanvasEl);\n\t      delete this.upperCanvasEl;\n\t      if (wrapper.parentNode) {\n\t        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n\t      }\n\t      delete this.wrapperEl;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Clears all contexts (background, main, top) of an instance\n\t     * @return {fabric.Canvas} thisArg\n\t     * @chainable\n\t     */\n\t    clear: function () {\n\t      this.discardActiveGroup();\n\t      this.discardActiveObject();\n\t      this.clearContext(this.contextTop);\n\t      return this.callSuper('clear');\n\t    },\n\t\n\t    /**\n\t     * Draws objects' controls (borders/controls)\n\t     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n\t     */\n\t    drawControls: function(ctx) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup) {\n\t        activeGroup._renderControls(ctx);\n\t      }\n\t      else {\n\t        this._drawObjectsControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawObjectsControls: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; ++i) {\n\t        if (!this._objects[i] || !this._objects[i].active) {\n\t          continue;\n\t        }\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _toObject: function(instance, methodName, propertiesToInclude) {\n\t      //If the object is part of the current selection group, it should\n\t      //be transformed appropriately\n\t      //i.e. it should be serialised as it would appear if the selection group\n\t      //were to be destroyed.\n\t      var originalProperties = this._realizeGroupTransformOnObject(instance),\n\t          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n\t      //Undo the damage we did by changing all of its properties\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Realises an object's group transformation on it\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n\t     * @returns the original values of instance which were changed\n\t     */\n\t    _realizeGroupTransformOnObject: function(instance) {\n\t      var layoutProps = ['angle', 'flipX', 'flipY', 'height', 'left', 'scaleX', 'scaleY', 'top', 'width'];\n\t      if (instance.group && instance.group === this.getActiveGroup()) {\n\t        //Copy all the positionally relevant properties across now\n\t        var originalValues = {};\n\t        layoutProps.forEach(function(prop) {\n\t          originalValues[prop] = instance[prop];\n\t        });\n\t        this.getActiveGroup().realizeTransform(instance);\n\t        return originalValues;\n\t      }\n\t      else {\n\t        return null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Restores the changed properties of instance\n\t     * @private\n\t     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n\t     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n\t     */\n\t    _unwindGroupTransformOnObject: function(instance, originalValues) {\n\t      if (originalValues) {\n\t        instance.set(originalValues);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGObject: function(markup, instance, reviver) {\n\t      var originalProperties;\n\t      //If the object is in a selection group, simulate what would happen to that\n\t      //object when the group is deselected\n\t      originalProperties = this._realizeGroupTransformOnObject(instance);\n\t      this.callSuper('_setSVGObject', markup, instance, reviver);\n\t      this._unwindGroupTransformOnObject(instance, originalProperties);\n\t    },\n\t  });\n\t\n\t  // copying static properties manually to work around Opera's bug,\n\t  // where \"prototype\" property is enumerable and overrides existing prototype\n\t  for (var prop in fabric.StaticCanvas) {\n\t    if (prop !== 'prototype') {\n\t      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n\t    }\n\t  }\n\t\n\t  if (fabric.isTouchSupported) {\n\t    /** @ignore */\n\t    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n\t  }\n\t\n\t  /**\n\t   * @ignore\n\t   * @class fabric.Element\n\t   * @alias fabric.Canvas\n\t   * @deprecated Use {@link fabric.Canvas} instead.\n\t   * @constructor\n\t   */\n\t  fabric.Element = fabric.Canvas;\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var cursorOffset = {\n\t        mt: 0, // n\n\t        tr: 1, // ne\n\t        mr: 2, // e\n\t        br: 3, // se\n\t        mb: 4, // s\n\t        bl: 5, // sw\n\t        ml: 6, // w\n\t        tl: 7 // nw\n\t      },\n\t      addListener = fabric.util.addListener,\n\t      removeListener = fabric.util.removeListener;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * Map of cursor style values for each of the object controls\n\t     * @private\n\t     */\n\t    cursorMap: [\n\t      'n-resize',\n\t      'ne-resize',\n\t      'e-resize',\n\t      'se-resize',\n\t      's-resize',\n\t      'sw-resize',\n\t      'w-resize',\n\t      'nw-resize'\n\t    ],\n\t\n\t    /**\n\t     * Adds mouse listeners to canvas\n\t     * @private\n\t     */\n\t    _initEventListeners: function () {\n\t\n\t      this._bindEvents();\n\t\n\t      addListener(fabric.window, 'resize', this._onResize);\n\t\n\t      // mouse events\n\t      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n\t      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n\t      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\t\n\t      // touch events\n\t      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n\t        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _bindEvents: function() {\n\t      this._onMouseDown = this._onMouseDown.bind(this);\n\t      this._onMouseMove = this._onMouseMove.bind(this);\n\t      this._onMouseUp = this._onMouseUp.bind(this);\n\t      this._onResize = this._onResize.bind(this);\n\t      this._onGesture = this._onGesture.bind(this);\n\t      this._onDrag = this._onDrag.bind(this);\n\t      this._onShake = this._onShake.bind(this);\n\t      this._onLongPress = this._onLongPress.bind(this);\n\t      this._onOrientationChange = this._onOrientationChange.bind(this);\n\t      this._onMouseWheel = this._onMouseWheel.bind(this);\n\t      this._onMouseOut = this._onMouseOut.bind(this);\n\t      this._onMouseEnter = this._onMouseEnter.bind(this);\n\t      this._onContextMenu = this._onContextMenu.bind(this);\n\t    },\n\t\n\t    /**\n\t     * Removes all event listeners\n\t     */\n\t    removeListeners: function() {\n\t      removeListener(fabric.window, 'resize', this._onResize);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n\t      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n\t      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n\t      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\t\n\t      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n\t        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n\t        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n\t        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n\t        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n\t        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js gesture\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onGesture: function(e, self) {\n\t      this.__onTransformGesture && this.__onTransformGesture(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js drag\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onDrag: function(e, self) {\n\t      this.__onDrag && this.__onDrag(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on wheel event\n\t     */\n\t    _onMouseWheel: function(e) {\n\t      this.__onMouseWheel(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseOut: function(e) {\n\t      var target = this._hoveredTarget;\n\t      this.fire('mouse:out', { target: target, e: e });\n\t      this._hoveredTarget = null;\n\t      target && target.fire('mouseout', { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseenter\n\t     */\n\t    _onMouseEnter: function(e) {\n\t      if (!this.findTarget(e)) {\n\t        this.fire('mouse:over', { target: null, e: e });\n\t        this._hoveredTarget = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js orientation change\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onOrientationChange: function(e, self) {\n\t      this.__onOrientationChange && this.__onOrientationChange(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onShake: function(e, self) {\n\t      this.__onShake && this.__onShake(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} [e] Event object fired on Event.js shake\n\t     * @param {Event} [self] Inner Event object\n\t     */\n\t    _onLongPress: function(e, self) {\n\t      this.__onLongPress && this.__onLongPress(e, self);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onContextMenu: function (e) {\n\t      if (this.stopContextMenu) {\n\t        e.stopPropagation();\n\t        e.preventDefault();\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDown: function (e) {\n\t      this.__onMouseDown(e);\n\t\n\t      addListener(fabric.document, 'touchend', this._onMouseUp);\n\t      addListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchstart') {\n\t        // Unbind mousedown to prevent double triggers from touch devices\n\t        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n\t      }\n\t      else {\n\t        addListener(fabric.document, 'mouseup', this._onMouseUp);\n\t        addListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUp: function (e) {\n\t      this.__onMouseUp(e);\n\t\n\t      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n\t      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\t\n\t      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n\t      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\t\n\t      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n\t      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\t\n\t      if (e.type === 'touchend') {\n\t        // Wait 400ms before rebinding mousedown to prevent double triggers\n\t        // from touch devices\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n\t        }, 400);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMove: function (e) {\n\t      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\t      this.__onMouseMove(e);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onResize: function () {\n\t      this.calcOffset();\n\t    },\n\t\n\t    /**\n\t     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n\t     * @private\n\t     * @param {Object} target\n\t     * @param {Object} pointer\n\t     */\n\t    _shouldRender: function(target, pointer) {\n\t      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\t\n\t      if (activeObject && activeObject.isEditing && target === activeObject) {\n\t        // if we mouse up/down over a editing textbox a cursor change,\n\t        // there is no need to re render\n\t        return false;\n\t      }\n\t      return !!(\n\t        (target && (\n\t          target.isMoving ||\n\t          target !== activeObject))\n\t        ||\n\t        (!target && !!activeObject)\n\t        ||\n\t        (!target && !activeObject && !this._groupSelector)\n\t        ||\n\t        (pointer &&\n\t          this._previousPointer &&\n\t          this.selection && (\n\t          pointer.x !== this._previousPointer.x ||\n\t          pointer.y !== this._previousPointer.y))\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is released on canvas.\n\t     * The method resets the currentTransform parameters, store the image corner\n\t     * position in the image object and render the canvas on top.\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseUp: function (e) {\n\t      var target, searchTarget = true, transform = this._currentTransform,\n\t          groupSelector = this._groupSelector,\n\t          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\t\n\t      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n\t        this._onMouseUpInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      if (transform) {\n\t        this._finalizeCurrentTransform();\n\t        searchTarget = !transform.actionPerformed;\n\t      }\n\t\n\t      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\t\n\t      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\t\n\t      if (target || !isClick) {\n\t        this._maybeGroupObjects(e);\n\t      }\n\t      else {\n\t        // those are done by default on mouse up\n\t        // by _maybeGroupObjects, we are skipping it in case of no target find\n\t        this._groupSelector = null;\n\t        this._currentTransform = null;\n\t      }\n\t\n\t      if (target) {\n\t        target.isMoving = false;\n\t      }\n\t\n\t      this._handleCursorAndEvent(e, target, 'up');\n\t      target && (target.__corner = 0);\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * set cursor for mouse up and handle mouseUp event\n\t     * @param {Event} e event from mouse\n\t     * @param {fabric.Object} target receiving event\n\t     * @param {String} eventType event to fire (up, down or move)\n\t     */\n\t    _handleCursorAndEvent: function(e, target, eventType) {\n\t      this._setCursorFromEvent(e, target);\n\t      this._handleEvent(e, eventType, target ? target : null);\n\t    },\n\t\n\t    /**\n\t     * Handle event firing for target and subtargets\n\t     * @param {Event} e event from mouse\n\t     * @param {String} eventType event to fire (up, down or move)\n\t     * @param {fabric.Object} targetObj receiving event\n\t     */\n\t    _handleEvent: function(e, eventType, targetObj) {\n\t      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n\t          targets = this.targets || [],\n\t          options = { e: e, target: target, subTargets: targets };\n\t      this.fire('mouse:' + eventType, options);\n\t      target && target.fire('mouse' + eventType, options);\n\t      for (var i = 0; i < targets.length; i++) {\n\t        targets[i].fire('mouse' + eventType, options);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _finalizeCurrentTransform: function() {\n\t\n\t      var transform = this._currentTransform,\n\t          target = transform.target;\n\t\n\t      if (target._scaling) {\n\t        target._scaling = false;\n\t      }\n\t\n\t      target.setCoords();\n\t      this._restoreOriginXY(target);\n\t\n\t      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n\t        this.fire('object:modified', { target: target });\n\t        target.fire('modified');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object to restore\n\t     */\n\t    _restoreOriginXY: function(target) {\n\t      if (this._previousOriginX && this._previousOriginY) {\n\t\n\t        var originPoint = target.translateToOriginPoint(\n\t          target.getCenterPoint(),\n\t          this._previousOriginX,\n\t          this._previousOriginY);\n\t\n\t        target.originX = this._previousOriginX;\n\t        target.originY = this._previousOriginY;\n\t\n\t        target.left = originPoint.x;\n\t        target.top = originPoint.y;\n\t\n\t        this._previousOriginX = null;\n\t        this._previousOriginY = null;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    _onMouseDownInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = true;\n\t      this.discardActiveObject(e).renderAll();\n\t      if (this.clipTo) {\n\t        fabric.util.clipContext(this, this.contextTop);\n\t      }\n\t      var pointer = this.getPointer(e);\n\t      this.freeDrawingBrush.onMouseDown(pointer);\n\t      this._handleEvent(e, 'down');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    _onMouseMoveInDrawingMode: function(e) {\n\t      if (this._isCurrentlyDrawing) {\n\t        var pointer = this.getPointer(e);\n\t        this.freeDrawingBrush.onMouseMove(pointer);\n\t      }\n\t      this.setCursor(this.freeDrawingCursor);\n\t      this._handleEvent(e, 'move');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    _onMouseUpInDrawingMode: function(e) {\n\t      this._isCurrentlyDrawing = false;\n\t      if (this.clipTo) {\n\t        this.contextTop.restore();\n\t      }\n\t      this.freeDrawingBrush.onMouseUp();\n\t      this._handleEvent(e, 'up');\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is clicked on canvas.\n\t     * The method inits the currentTransform parameters and renders all the\n\t     * canvas so the current image can be placed on the top canvas and the rest\n\t     * in on the container one.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousedown\n\t     */\n\t    __onMouseDown: function (e) {\n\t\n\t      var target = this.findTarget(e);\n\t\n\t      // if right click just fire events\n\t      var isRightClick  = 'which' in e ? e.which === 3 : e.button === 2;\n\t      if (isRightClick) {\n\t        if (this.fireRightClick) {\n\t          this._handleEvent(e, 'down', target ? target : null);\n\t        }\n\t        return;\n\t      }\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseDownInDrawingMode(e);\n\t        return;\n\t      }\n\t\n\t      // ignore if some object is being transformed at this moment\n\t      if (this._currentTransform) {\n\t        return;\n\t      }\n\t\n\t      // save pointer for check in __onMouseUp event\n\t      var pointer = this.getPointer(e, true);\n\t      this._previousPointer = pointer;\n\t\n\t      var shouldRender = this._shouldRender(target, pointer),\n\t          shouldGroup = this._shouldGroup(e, target);\n\t\n\t      if (this._shouldClearSelection(e, target)) {\n\t        this._clearSelection(e, target, pointer);\n\t      }\n\t      else if (shouldGroup) {\n\t        this._handleGrouping(e, target);\n\t        target = this.getActiveGroup();\n\t      }\n\t\n\t      if (target) {\n\t        if (target.selectable && (target.__corner || !shouldGroup)) {\n\t          this._beforeTransform(e, target);\n\t          this._setupCurrentTransform(e, target);\n\t        }\n\t\n\t        if (target !== this.getActiveGroup() && target !== this.getActiveObject()) {\n\t          this.deactivateAll();\n\t          target.selectable && this.setActiveObject(target, e);\n\t        }\n\t      }\n\t      this._handleEvent(e, 'down', target ? target : null);\n\t      // we must renderAll so that we update the visuals\n\t      shouldRender && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeTransform: function(e, target) {\n\t      this.stateful && target.saveState();\n\t\n\t      // determine if it's a drag or rotate case\n\t      if (target._findTargetCorner(this.getPointer(e))) {\n\t        this.onBeforeScaleRotate(target);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearSelection: function(e, target, pointer) {\n\t      this.deactivateAllWithDispatch(e);\n\t\n\t      if (target && target.selectable) {\n\t        this.setActiveObject(target, e);\n\t      }\n\t      else if (this.selection) {\n\t        this._groupSelector = {\n\t          ex: pointer.x,\n\t          ey: pointer.y,\n\t          top: 0,\n\t          left: 0\n\t        };\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that origin is set to center\n\t     */\n\t    _setOriginToCenter: function(target) {\n\t      this._previousOriginX = this._currentTransform.target.originX;\n\t      this._previousOriginY = this._currentTransform.target.originY;\n\t\n\t      var center = target.getCenterPoint();\n\t\n\t      target.originX = 'center';\n\t      target.originY = 'center';\n\t\n\t      target.left = center.x;\n\t      target.top = center.y;\n\t\n\t      this._currentTransform.left = target.left;\n\t      this._currentTransform.top = target.top;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target Object for that center is set to origin\n\t     */\n\t    _setCenterToOrigin: function(target) {\n\t      var originPoint = target.translateToOriginPoint(\n\t        target.getCenterPoint(),\n\t        this._previousOriginX,\n\t        this._previousOriginY);\n\t\n\t      target.originX = this._previousOriginX;\n\t      target.originY = this._previousOriginY;\n\t\n\t      target.left = originPoint.x;\n\t      target.top = originPoint.y;\n\t\n\t      this._previousOriginX = null;\n\t      this._previousOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * Method that defines the actions when mouse is hovering the canvas.\n\t     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n\t     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n\t     * all any other type of action.\n\t     * In case of an image transformation only the top canvas will be rendered.\n\t     * @private\n\t     * @param {Event} e Event object fired on mousemove\n\t     */\n\t    __onMouseMove: function (e) {\n\t\n\t      var target, pointer;\n\t\n\t      if (this.isDrawingMode) {\n\t        this._onMouseMoveInDrawingMode(e);\n\t        return;\n\t      }\n\t      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n\t        return;\n\t      }\n\t\n\t      var groupSelector = this._groupSelector;\n\t\n\t      // We initially clicked in an empty area, so we draw a box for multiple selection\n\t      if (groupSelector) {\n\t        pointer = this.getPointer(e, true);\n\t\n\t        groupSelector.left = pointer.x - groupSelector.ex;\n\t        groupSelector.top = pointer.y - groupSelector.ey;\n\t\n\t        this.renderTop();\n\t      }\n\t      else if (!this._currentTransform) {\n\t        target = this.findTarget(e);\n\t        this._setCursorFromEvent(e, target);\n\t      }\n\t      else {\n\t        this._transformObject(e);\n\t      }\n\t      this._handleEvent(e, 'move', target ? target : null);\n\t    },\n\t\n\t    /**\n\t     * Method that defines actions when an Event Mouse Wheel\n\t     * @param {Event} e Event object fired on mouseup\n\t     */\n\t    __onMouseWheel: function(e) {\n\t      this._handleEvent(e, 'wheel');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event fired on mousemove\n\t     */\n\t    _transformObject: function(e) {\n\t      var pointer = this.getPointer(e),\n\t          transform = this._currentTransform;\n\t\n\t      transform.reset = false;\n\t      transform.target.isMoving = true;\n\t      transform.shiftKey = e.shiftKey;\n\t      transform.altKey = e[this.centeredKey];\n\t\n\t      this._beforeScaleTransform(e, transform);\n\t      this._performTransformAction(e, transform, pointer);\n\t\n\t      transform.actionPerformed && this.renderAll();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _performTransformAction: function(e, transform, pointer) {\n\t      var x = pointer.x,\n\t          y = pointer.y,\n\t          target = transform.target,\n\t          action = transform.action,\n\t          actionPerformed = false;\n\t\n\t      if (action === 'rotate') {\n\t        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n\t      }\n\t      else if (action === 'scale') {\n\t        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleX') {\n\t        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'scaleY') {\n\t        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n\t      }\n\t      else if (action === 'skewX') {\n\t        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n\t      }\n\t      else if (action === 'skewY') {\n\t        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n\t      }\n\t      else {\n\t        actionPerformed = this._translateObject(x, y);\n\t        if (actionPerformed) {\n\t          this._fire('moving', target, e);\n\t          this.setCursor(target.moveCursor || this.moveCursor);\n\t        }\n\t      }\n\t      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fire: function(eventName, target, e) {\n\t      this.fire('object:' + eventName, { target: target, e: e });\n\t      target.fire(eventName, { e: e });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _beforeScaleTransform: function(e, transform) {\n\t      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n\t        var centerTransform = this._shouldCenterTransform(transform.target);\n\t\n\t        // Switch from a normal resize to center-based\n\t        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n\t           // Switch from center-based resize to normal one\n\t           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n\t        ) {\n\t          this._resetCurrentTransform();\n\t          transform.reset = true;\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {Object} transform current tranform\n\t     * @param {Number} x mouse position x from origin\n\t     * @param {Number} y mouse poistion y from origin\n\t     * @return {Boolean} true if the scaling occurred\n\t     */\n\t    _onScale: function(e, transform, x, y) {\n\t      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n\t        transform.currentAction = 'scale';\n\t        return this._scaleObject(x, y);\n\t      }\n\t      else {\n\t        // Switch from a normal resize to proportional\n\t        if (!transform.reset && transform.currentAction === 'scale') {\n\t          this._resetCurrentTransform();\n\t        }\n\t\n\t        transform.currentAction = 'scaleEqually';\n\t        return this._scaleObject(x, y, 'equally');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets the cursor depending on where the canvas is being hovered.\n\t     * Note: very buggy in Opera\n\t     * @param {Event} e Event object\n\t     * @param {Object} target Object that the mouse is hovering, if so.\n\t     */\n\t    _setCursorFromEvent: function (e, target) {\n\t      if (!target) {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t\n\t      var hoverCursor = target.hoverCursor || this.hoverCursor;\n\t      if (!target.selectable) {\n\t        //let's skip _findTargetCorner if object is not selectable\n\t        this.setCursor(hoverCursor);\n\t      }\n\t      else {\n\t        var activeGroup = this.getActiveGroup(),\n\t            // only show proper corner when group selection is not active\n\t            corner = target._findTargetCorner\n\t                      && (!activeGroup || !activeGroup.contains(target))\n\t                      && target._findTargetCorner(this.getPointer(e, true));\n\t\n\t        if (!corner) {\n\t          this.setCursor(hoverCursor);\n\t        }\n\t        else {\n\t          this._setCornerCursor(corner, target, e);\n\t        }\n\t      }\n\t      //actually unclear why it should return something\n\t      //is never evaluated\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setCornerCursor: function(corner, target, e) {\n\t      if (corner in cursorOffset) {\n\t        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n\t      }\n\t      else if (corner === 'mtr' && target.hasRotatingPoint) {\n\t        this.setCursor(this.rotationCursor);\n\t      }\n\t      else {\n\t        this.setCursor(this.defaultCursor);\n\t        return false;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getRotatedCornerCursor: function(corner, target, e) {\n\t      var n = Math.round((target.getAngle() % 360) / 45);\n\t\n\t      if (n < 0) {\n\t        n += 8; // full circle ahead\n\t      }\n\t      n += cursorOffset[corner];\n\t      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n\t        //if we are holding shift and we are on a mx corner...\n\t        n += 2;\n\t      }\n\t      // normalize n to be from 0 to 7\n\t      n %= 8;\n\t\n\t      return this.cursorMap[n];\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var min = Math.min,\n\t      max = Math.max;\n\t\n\t  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     * @return {Boolean}\n\t     */\n\t    _shouldGroup: function(e, target) {\n\t      var activeObject = this.getActiveObject();\n\t      return e[this.selectionKey] && target && target.selectable &&\n\t            (this.getActiveGroup() || (activeObject && activeObject !== target))\n\t            && this.selection;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e Event object\n\t     * @param {fabric.Object} target\n\t     */\n\t    _handleGrouping: function (e, target) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (target === activeGroup) {\n\t        // if it's a group, find target again, using activeGroup objects\n\t        target = this.findTarget(e, true);\n\t        // if even object is not found, bail out\n\t        if (!target) {\n\t          return;\n\t        }\n\t      }\n\t      if (activeGroup) {\n\t        this._updateActiveGroup(target, e);\n\t      }\n\t      else {\n\t        this._createActiveGroup(target, e);\n\t      }\n\t\n\t      if (this._activeGroup) {\n\t        this._activeGroup.saveCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateActiveGroup: function(target, e) {\n\t      var activeGroup = this.getActiveGroup();\n\t\n\t      if (activeGroup.contains(target)) {\n\t\n\t        activeGroup.removeWithUpdate(target);\n\t        target.set('active', false);\n\t\n\t        if (activeGroup.size() === 1) {\n\t          // remove group alltogether if after removal it only contains 1 object\n\t          this.discardActiveGroup(e);\n\t          // activate last remaining object\n\t          this.setActiveObject(activeGroup.item(0));\n\t          return;\n\t        }\n\t      }\n\t      else {\n\t        activeGroup.addWithUpdate(target);\n\t      }\n\t      this.fire('selection:created', { target: activeGroup, e: e });\n\t      activeGroup.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createActiveGroup: function(target, e) {\n\t\n\t      if (this._activeObject && target !== this._activeObject) {\n\t\n\t        var group = this._createGroup(target);\n\t        group.addWithUpdate();\n\t\n\t        this.setActiveGroup(group);\n\t        this._activeObject = null;\n\t\n\t        this.fire('selection:created', { target: group, e: e });\n\t      }\n\t\n\t      target.set('active', true);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} target\n\t     */\n\t    _createGroup: function(target) {\n\t\n\t      var objects = this.getObjects(),\n\t          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n\t          groupObjects = isActiveLower\n\t            ? [this._activeObject, target]\n\t            : [target, this._activeObject];\n\t      this._activeObject.isEditing && this._activeObject.exitEditing();\n\t      return new fabric.Group(groupObjects, {\n\t        canvas: this\n\t      });\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Event} e mouse event\n\t     */\n\t    _groupSelectedObjects: function (e) {\n\t\n\t      var group = this._collectObjects();\n\t\n\t      // do not create group for 1 element only\n\t      if (group.length === 1) {\n\t        this.setActiveObject(group[0], e);\n\t      }\n\t      else if (group.length > 1) {\n\t        group = new fabric.Group(group.reverse(), {\n\t          canvas: this\n\t        });\n\t        group.addWithUpdate();\n\t        this.setActiveGroup(group, e);\n\t        group.saveCoords();\n\t        this.fire('selection:created', { target: group });\n\t        this.renderAll();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _collectObjects: function() {\n\t      var group = [],\n\t          currentObject,\n\t          x1 = this._groupSelector.ex,\n\t          y1 = this._groupSelector.ey,\n\t          x2 = x1 + this._groupSelector.left,\n\t          y2 = y1 + this._groupSelector.top,\n\t          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n\t          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n\t          isClick = x1 === x2 && y1 === y2;\n\t\n\t      for (var i = this._objects.length; i--; ) {\n\t        currentObject = this._objects[i];\n\t\n\t        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n\t          continue;\n\t        }\n\t\n\t        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n\t            currentObject.containsPoint(selectionX1Y1) ||\n\t            currentObject.containsPoint(selectionX2Y2)\n\t        ) {\n\t          currentObject.set('active', true);\n\t          group.push(currentObject);\n\t\n\t          // only add one object if it's a click\n\t          if (isClick) {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return group;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _maybeGroupObjects: function(e) {\n\t      if (this.selection && this._groupSelector) {\n\t        this._groupSelectedObjects(e);\n\t      }\n\t\n\t      var activeGroup = this.getActiveGroup();\n\t      if (activeGroup) {\n\t        activeGroup.setObjectsCoords().setCoords();\n\t        activeGroup.isMoving = false;\n\t        this.setCursor(this.defaultCursor);\n\t      }\n\t\n\t      // clear selection and current transformation\n\t      this._groupSelector = null;\n\t      this._currentTransform = null;\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function () {\n\t\n\t  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\t\n\t  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t    /**\n\t     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n\t     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'jpeg',\n\t     *   quality: 0.8\n\t     * });\n\t     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'png',\n\t     *   left: 100,\n\t     *   top: 100,\n\t     *   width: 200,\n\t     *   height: 200\n\t     * });\n\t     * @example <caption>Generate double scaled png dataURL</caption>\n\t     * var dataURL = canvas.toDataURL({\n\t     *   format: 'png',\n\t     *   multiplier: 2\n\t     * });\n\t     */\n\t    toDataURL: function (options) {\n\t      options || (options = { });\n\t\n\t      var format = options.format || 'png',\n\t          quality = options.quality || 1,\n\t          multiplier = options.multiplier || 1,\n\t          cropping = {\n\t            left: options.left || 0,\n\t            top: options.top || 0,\n\t            width: options.width || 0,\n\t            height: options.height || 0,\n\t          };\n\t      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\t\n\t      var origWidth = this.getWidth(),\n\t          origHeight = this.getHeight(),\n\t          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n\t          scaledHeight = (cropping.height || this.getHeight()) * multiplier,\n\t          zoom = this.getZoom(),\n\t          newZoom = zoom * multiplier,\n\t          vp = this.viewportTransform,\n\t          translateX = (vp[4] - cropping.left) * multiplier,\n\t          translateY = (vp[5] - cropping.top) * multiplier,\n\t          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n\t          originalInteractive = this.interactive;\n\t\n\t      this.viewportTransform = newVp;\n\t      // setting interactive to false avoid exporting controls\n\t      this.interactive && (this.interactive = false);\n\t      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n\t        // this.setDimensions is going to renderAll also;\n\t        this.setDimensions({ width: scaledWidth, height: scaledHeight });\n\t      }\n\t      else {\n\t        this.renderAll();\n\t      }\n\t      var data = this.__toDataURL(format, quality, cropping);\n\t      originalInteractive && (this.interactive = originalInteractive);\n\t      this.viewportTransform = vp;\n\t      //setDimensions with no option object is taking care of:\n\t      //this.width, this.height, this.renderAll()\n\t      this.setDimensions({ width: origWidth, height: origHeight });\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __toDataURL: function(format, quality) {\n\t\n\t      var canvasEl = this.contextContainer.canvas;\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (format === 'jpg') {\n\t        format = 'jpeg';\n\t      }\n\t\n\t      var data = supportQuality\n\t                ? canvasEl.toDataURL('image/' + format, quality)\n\t                : canvasEl.toDataURL('image/' + format);\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n\t     * @deprecated since 1.0.13\n\t     * @param {String} format (png|jpeg)\n\t     * @param {Number} multiplier\n\t     * @param {Number} quality (0..1)\n\t     * @return {String}\n\t     */\n\t    toDataURLWithMultiplier: function (format, multiplier, quality) {\n\t      return this.toDataURL({\n\t        format: format,\n\t        multiplier: multiplier,\n\t        quality: quality\n\t      });\n\t    },\n\t  });\n\t\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Populates canvas with data from the specified dataless JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n\t   * @deprecated since 1.2.2\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   */\n\t  loadFromDatalessJSON: function (json, callback, reviver) {\n\t    return this.loadFromJSON(json, callback, reviver);\n\t  },\n\t\n\t  /**\n\t   * Populates canvas with data from the specified JSON.\n\t   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n\t   * @param {String|Object} json JSON string or object\n\t   * @param {Function} callback Callback, invoked when json is parsed\n\t   *                            and corresponding objects (e.g: {@link fabric.Image})\n\t   *                            are initialized\n\t   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n\t   * @return {fabric.Canvas} instance\n\t   * @chainable\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n\t   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n\t   * @example <caption>loadFromJSON</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n\t   * @example <caption>loadFromJSON with reviver</caption>\n\t   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n\t   *   // `o` = json object\n\t   *   // `object` = fabric.Object instance\n\t   *   // ... do some stuff ...\n\t   * });\n\t   */\n\t  loadFromJSON: function (json, callback, reviver) {\n\t    if (!json) {\n\t      return;\n\t    }\n\t\n\t    // serialize if it wasn't already\n\t    var serialized = (typeof json === 'string')\n\t      ? JSON.parse(json)\n\t      : fabric.util.object.clone(json);\n\t\n\t    this.clear();\n\t\n\t    var _this = this;\n\t    this._enlivenObjects(serialized.objects, function () {\n\t      _this._setBgOverlay(serialized, function () {\n\t        // remove parts i cannot set as options\n\t        delete serialized.objects;\n\t        delete serialized.backgroundImage;\n\t        delete serialized.overlayImage;\n\t        delete serialized.background;\n\t        delete serialized.overlay;\n\t        // this._initOptions does too many things to just\n\t        // call it. Normally loading an Object from JSON\n\t        // create the Object instance. Here the Canvas is\n\t        // already an instance and we are just loading things over it\n\t        _this._setOptions(serialized);\n\t        callback && callback();\n\t      });\n\t    }, reviver);\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Object} serialized Object with background and overlay information\n\t   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n\t   */\n\t  _setBgOverlay: function(serialized, callback) {\n\t    var _this = this,\n\t        loaded = {\n\t          backgroundColor: false,\n\t          overlayColor: false,\n\t          backgroundImage: false,\n\t          overlayImage: false\n\t        };\n\t\n\t    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var cbIfLoaded = function () {\n\t      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n\t        _this.renderAll();\n\t        callback && callback();\n\t      }\n\t    };\n\t\n\t    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\t    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n\t   * @param {(Object|String)} value Value to set\n\t   * @param {Object} loaded Set loaded property to true if property is set\n\t   * @param {Object} callback Callback function to invoke after property is set\n\t   */\n\t  __setBgOverlay: function(property, value, loaded, callback) {\n\t    var _this = this;\n\t\n\t    if (!value) {\n\t      loaded[property] = true;\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    if (property === 'backgroundImage' || property === 'overlayImage') {\n\t      fabric.util.enlivenObjects([value], function(enlivedObject){\n\t        _this[property] = enlivedObject[0];\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t    else {\n\t      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n\t        loaded[property] = true;\n\t        callback && callback();\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Array} objects\n\t   * @param {Function} callback\n\t   * @param {Function} [reviver]\n\t   */\n\t  _enlivenObjects: function (objects, callback, reviver) {\n\t    var _this = this;\n\t\n\t    if (!objects || objects.length === 0) {\n\t      callback && callback();\n\t      return;\n\t    }\n\t\n\t    var renderOnAddRemove = this.renderOnAddRemove;\n\t    this.renderOnAddRemove = false;\n\t\n\t    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n\t      enlivenedObjects.forEach(function(obj, index) {\n\t        // we splice the array just in case some custom classes restored from JSON\n\t        // will add more object to canvas at canvas init.\n\t        _this.insertAt(obj, index);\n\t      });\n\t\n\t      _this.renderOnAddRemove = renderOnAddRemove;\n\t      callback && callback();\n\t    }, null, reviver);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURL: function (format, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURL(format));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} format\n\t   * @param {Number} multiplier\n\t   * @param {Function} callback\n\t   */\n\t  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n\t    this.clone(function (clone) {\n\t      callback(clone.toDataURLWithMultiplier(format, multiplier));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n\t   */\n\t  clone: function (callback, properties) {\n\t    var data = JSON.stringify(this.toJSON(properties));\n\t    this.cloneWithoutData(function(clone) {\n\t      clone.loadFromJSON(data, function() {\n\t        callback && callback(clone);\n\t      });\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Clones canvas instance without cloning existing data.\n\t   * This essentially copies canvas dimensions, clipping properties, etc.\n\t   * but leaves data empty (so that you can populate it with your own)\n\t   * @param {Object} [callback] Receives cloned instance as a first argument\n\t   */\n\t  cloneWithoutData: function(callback) {\n\t    var el = fabric.document.createElement('canvas');\n\t\n\t    el.width = this.getWidth();\n\t    el.height = this.getHeight();\n\t\n\t    var clone = new fabric.Canvas(el);\n\t    clone.clipTo = this.clipTo;\n\t    if (this.backgroundImage) {\n\t      clone.setBackgroundImage(this.backgroundImage.src, function() {\n\t        clone.renderAll();\n\t        callback && callback(clone);\n\t      });\n\t      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n\t      clone.backgroundImageStretch = this.backgroundImageStretch;\n\t    }\n\t    else {\n\t      callback && callback(clone);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      toFixed = fabric.util.toFixed,\n\t      capitalize = fabric.util.string.capitalize,\n\t      degreesToRadians = fabric.util.degreesToRadians,\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\t      objectCaching = !fabric.isLikelyNode;\n\t\n\t  if (fabric.Object) {\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Root object class from which all 2d shape classes inherit from\n\t   * @class fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n\t   * @see {@link fabric.Object#initialize} for constructor definition\n\t   *\n\t   * @fires added\n\t   * @fires removed\n\t   *\n\t   * @fires selected\n\t   * @fires deselected\n\t   * @fires modified\n\t   * @fires rotating\n\t   * @fires scaling\n\t   * @fires moving\n\t   * @fires skewing\n\t   *\n\t   * @fires mousedown\n\t   * @fires mouseup\n\t   * @fires mouseover\n\t   * @fires mouseout\n\t   * @fires mousewheel\n\t   */\n\t  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method getClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Function}\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#clipTo|clipping function}\n\t     * @method setClipTo\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Function} clipTo Clipping function\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method getTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Array} transformMatrix\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n\t     * @method setTransformMatrix\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Array} transformMatrix\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#visible|visible} state\n\t     * @method getVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} True if visible\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#visible|visible} state\n\t     * @method setVisible\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value visible value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#shadow|shadow}\n\t     * @method getShadow\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Object} Shadow instance\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#stroke|stroke}\n\t     * @method getStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} stroke value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#stroke|stroke}\n\t     * @method setStroke\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value stroke value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method getStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} strokeWidth value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n\t     * @method setStrokeWidth\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value strokeWidth value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originX|originX}\n\t     * @method getOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originX|originX}\n\t     * @method setOriginX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#originY|originY}\n\t     * @method getOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} originY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#originY|originY}\n\t     * @method setOriginY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value originY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#fill|fill}\n\t     * @method getFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {String} Fill value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#fill|fill}\n\t     * @method setFill\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {String} value Fill value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#opacity|opacity}\n\t     * @method getOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Opacity value (0-1)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#opacity|opacity}\n\t     * @method setOpacity\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Opacity value (0-1)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n\t     * @method getAngle\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number}\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#top|top position}\n\t     * @method getTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Top value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#top|top position}\n\t     * @method setTop\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Top value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#left|left position}\n\t     * @method getLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} Left value (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#left|left position}\n\t     * @method setLeft\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value Left value (in pixels)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method getScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n\t     * @method setScaleX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method getScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Number} scaleY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n\t     * @method setScaleY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Number} value scaleY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n\t     * @method getFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipX value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipX|flipX} value\n\t     * @method setFlipX\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipX value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n\t     * @method getFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value\n\t     */\n\t\n\t    /**\n\t     * Sets object's {@link fabric.Object#flipY|flipY} value\n\t     * @method setFlipY\n\t     * @memberOf fabric.Object.prototype\n\t     * @param {Boolean} value flipY value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object (rect, circle, path, etc.).\n\t     * Note that this property is meant to be read-only and not meant to be modified.\n\t     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                     'object',\n\t\n\t    /**\n\t     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originX:                  'left',\n\t\n\t    /**\n\t     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n\t     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n\t     * @type String\n\t     * @default\n\t     */\n\t    originY:                  'top',\n\t\n\t    /**\n\t     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    top:                      0,\n\t\n\t    /**\n\t     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n\t     * @type Number\n\t     * @default\n\t     */\n\t    left:                     0,\n\t\n\t    /**\n\t     * Object width\n\t     * @type Number\n\t     * @default\n\t     */\n\t    width:                    0,\n\t\n\t    /**\n\t     * Object height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    height:                   0,\n\t\n\t    /**\n\t     * Object scale factor (horizontal)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleX:                   1,\n\t\n\t    /**\n\t     * Object scale factor (vertical)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    scaleY:                   1,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped horizontally\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipX:                    false,\n\t\n\t    /**\n\t     * When true, an object is rendered as flipped vertically\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    flipY:                    false,\n\t\n\t    /**\n\t     * Opacity of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    opacity:                  1,\n\t\n\t    /**\n\t     * Angle of rotation of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    angle:                    0,\n\t\n\t    /**\n\t     * Angle of skew on x axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewX:                    0,\n\t\n\t    /**\n\t     * Angle of skew on y axes of an object (in degrees)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    skewY:                    0,\n\t\n\t    /**\n\t     * Size of object's controlling corners (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cornerSize:               13,\n\t\n\t    /**\n\t     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    transparentCorners:       true,\n\t\n\t    /**\n\t     * Default cursor value used when hovering over this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    hoverCursor:              null,\n\t\n\t    /**\n\t     * Default cursor value used when moving this object on canvas\n\t     * @type String\n\t     * @default\n\t     */\n\t    moveCursor:               null,\n\t\n\t    /**\n\t     * Padding between object and its controlling borders (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    padding:                  0,\n\t\n\t    /**\n\t     * Color of controlling borders of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    borderColor:              'rgba(102,153,255,0.75)',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    borderDashArray:          null,\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerColor:              'rgba(102,153,255,0.5)',\n\t\n\t    /**\n\t     * Color of controlling corners of an object (when it's active and transparentCorners false)\n\t     * @since 1.6.2\n\t     * @type String\n\t     * @default\n\t     */\n\t    cornerStrokeColor:        null,\n\t\n\t    /**\n\t     * Specify style of control, 'rect' or 'circle'\n\t     * @since 1.6.2\n\t     * @type String\n\t     */\n\t    cornerStyle:          'rect',\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's control (hasBorder must be true)\n\t     * @since 1.6.2\n\t     * @type Array\n\t     */\n\t    cornerDashArray:          null,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being scaled via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredScaling:          false,\n\t\n\t    /**\n\t     * When true, this object will use center point as the origin of transformation\n\t     * when being rotated via the controls.\n\t     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n\t     * @since 1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    centeredRotation:         true,\n\t\n\t    /**\n\t     * Color of object's fill\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill:                     'rgb(0,0,0)',\n\t\n\t    /**\n\t     * Fill rule used to fill an object\n\t     * accepted values are nonzero, evenodd\n\t     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n\t     * @type String\n\t     * @default\n\t     */\n\t    fillRule:                 'nonzero',\n\t\n\t    /**\n\t     * Composite rule used for canvas globalCompositeOperation\n\t     * @type String\n\t     * @default\n\t     */\n\t    globalCompositeOperation: 'source-over',\n\t\n\t    /**\n\t     * Background color of an object.\n\t     * @type String\n\t     * @default\n\t     */\n\t    backgroundColor:          '',\n\t\n\t    /**\n\t     * Selection Background color of an object. colored layer behind the object when it is active.\n\t     * does not mix good with globalCompositeOperation methods.\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionBackgroundColor:          '',\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:                   null,\n\t\n\t    /**\n\t     * Width of a stroke used to render this object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth:              1,\n\t\n\t    /**\n\t     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n\t     * @type Array\n\t     */\n\t    strokeDashArray:          null,\n\t\n\t    /**\n\t     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineCap:            'butt',\n\t\n\t    /**\n\t     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n\t     * @type String\n\t     * @default\n\t     */\n\t    strokeLineJoin:           'miter',\n\t\n\t    /**\n\t     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeMiterLimit:         10,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:                   null,\n\t\n\t    /**\n\t     * Opacity of object's controlling borders when object is active and moving\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderOpacityWhenMoving:  0.4,\n\t\n\t    /**\n\t     * Scale factor of object's controlling borders\n\t     * @type Number\n\t     * @default\n\t     */\n\t    borderScaleFactor:        1,\n\t\n\t    /**\n\t     * Transform matrix (similar to SVG's transform matrix)\n\t     * @type Array\n\t     */\n\t    transformMatrix:          null,\n\t\n\t    /**\n\t     * Minimum allowed scale value of an object\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minScaleLimit:            0.01,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n\t     * But events still fire on it.\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    selectable:               true,\n\t\n\t    /**\n\t     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    evented:                  true,\n\t\n\t    /**\n\t     * When set to `false`, an object is not rendered on canvas\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    visible:                  true,\n\t\n\t    /**\n\t     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasControls:              true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling borders are not rendered\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasBorders:               true,\n\t\n\t    /**\n\t     * When set to `false`, object's controlling rotating point will not be visible or selectable\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    hasRotatingPoint:         true,\n\t\n\t    /**\n\t     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rotatingPointOffset:      40,\n\t\n\t    /**\n\t     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    perPixelTargetFind:       false,\n\t\n\t    /**\n\t     * When `false`, default object's values are not included in its serialization\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    includeDefaultValues:     true,\n\t\n\t    /**\n\t     * Function that determines clipping of an object (context is passed as a first argument)\n\t     * Note that context origin is at the object's center point (not left/top corner)\n\t     * @type Function\n\t     */\n\t    clipTo:                   null,\n\t\n\t    /**\n\t     * When `true`, object horizontal movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementX:            false,\n\t\n\t    /**\n\t     * When `true`, object vertical movement is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockMovementY:            false,\n\t\n\t    /**\n\t     * When `true`, object rotation is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockRotation:             false,\n\t\n\t    /**\n\t     * When `true`, object horizontal scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingY:             false,\n\t\n\t    /**\n\t     * When `true`, object non-uniform scaling is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockUniScaling:           false,\n\t\n\t    /**\n\t     * When `true`, object horizontal skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingX:             false,\n\t\n\t    /**\n\t     * When `true`, object vertical skewing is locked\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockSkewingY:             false,\n\t\n\t    /**\n\t     * When `true`, object cannot be flipped by scaling into negative values\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    lockScalingFlip:          false,\n\t\n\t    /**\n\t     * When `true`, object is not exported in SVG or OBJECT/JSON\n\t     * since 1.6.3\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    excludeFromExport:        false,\n\t\n\t    /**\n\t     * When `true`, object is cached on an additional canvas.\n\t     * default to true\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    objectCaching:            objectCaching,\n\t\n\t    /**\n\t     * When `true`, object properties are checked for cache invalidation. In some particular\n\t     * situation you may want this to be disabled ( spray brush, very big pathgroups, groups)\n\t     * or if your application does not allow you to modify properties for groups child you want\n\t     * to disable it for groups.\n\t     * default to false\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default false\n\t     */\n\t    statefullCache:            false,\n\t\n\t    /**\n\t     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n\t     * too much and will be redrawn with correct details at the end of scaling.\n\t     * this setting is performance and application dependant.\n\t     * default to true\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default true\n\t     */\n\t    noScaleCache:              true,\n\t\n\t    /**\n\t     * When set to `true`, object's cache will be rerendered next render call.\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default false\n\t     */\n\t    dirty:                false,\n\t\n\t    /**\n\t     * List of properties to consider when checking if state\n\t     * of an object is changed (fabric.Object#hasStateChanged)\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: (\n\t      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n\t      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n\t      'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n\t      'skewX skewY'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * List of properties to consider when checking if cache needs refresh\n\t     * @type Array\n\t     */\n\t    cacheProperties: (\n\t      'fill stroke strokeWidth strokeDashArray width height stroke strokeWidth strokeDashArray' +\n\t      ' strokeLineCap strokeLineJoin strokeMiterLimit fillRule backgroundColor'\n\t    ).split(' '),\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      if (options) {\n\t        this.setOptions(options);\n\t      }\n\t      if (this.objectCaching) {\n\t        this._createCacheCanvas();\n\t        this.setupState({ propertySet: 'cacheProperties' });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Create a the canvas used to keep the cached copy of the object\n\t     * @private\n\t     */\n\t    _createCacheCanvas: function() {\n\t      this._cacheCanvas = fabric.document.createElement('canvas');\n\t      this._cacheContext = this._cacheCanvas.getContext('2d');\n\t      this._updateCacheCanvas();\n\t    },\n\t\n\t    /**\n\t     * Return the dimension and the zoom level needed to create a cache canvas\n\t     * big enough to host the object to be cached.\n\t     * @private\n\t     * @return {Object}.width width of canvas\n\t     * @return {Object}.height height of canvas\n\t     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n\t     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n\t     */\n\t    _getCacheCanvasDimensions: function() {\n\t      var zoom = this.canvas && this.canvas.getZoom() || 1,\n\t          objectScale = this.getObjectScaling(),\n\t          dim = this._getNonTransformedDimensions(),\n\t          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n\t          zoomX = objectScale.scaleX * zoom * retina,\n\t          zoomY = objectScale.scaleY * zoom * retina,\n\t          width = dim.x * zoomX,\n\t          height = dim.y * zoomY;\n\t      return {\n\t        width: Math.ceil(width) + 2,\n\t        height: Math.ceil(height) + 2,\n\t        zoomX: zoomX,\n\t        zoomY: zoomY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Update width and height of the canvas for cache\n\t     * returns true or false if canvas needed resize.\n\t     * @private\n\t     * @return {Boolean} true if the canvas has been resized\n\t     */\n\t    _updateCacheCanvas: function() {\n\t      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n\t        var action = this.canvas._currentTransform.action;\n\t        if (action.slice(0, 5) === 'scale') {\n\t          return false;\n\t        }\n\t      }\n\t      var dims = this._getCacheCanvasDimensions(),\n\t          width = dims.width, height = dims.height,\n\t          zoomX = dims.zoomX, zoomY = dims.zoomY;\n\t\n\t      if (width !== this.cacheWidth || height !== this.cacheHeight) {\n\t        this._cacheCanvas.width = width;\n\t        this._cacheCanvas.height = height;\n\t        this._cacheContext.translate(width / 2, height / 2);\n\t        this._cacheContext.scale(zoomX, zoomY);\n\t        this.cacheWidth = width;\n\t        this.cacheHeight = height;\n\t        this.zoomX = zoomX;\n\t        this.zoomY = zoomY;\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets object's properties from options\n\t     * @param {Object} [options] Options object\n\t     */\n\t    setOptions: function(options) {\n\t      this._setOptions(options);\n\t      this._initGradient(options.fill, 'fill');\n\t      this._initGradient(options.stroke, 'stroke');\n\t      this._initClipping(options);\n\t      this._initPattern(options.fill, 'fill');\n\t      this._initPattern(options.stroke, 'stroke');\n\t    },\n\t\n\t    /**\n\t     * Transforms context when rendering an object\n\t     * @param {CanvasRenderingContext2D} ctx Context\n\t     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n\t     */\n\t    transform: function(ctx, fromLeft) {\n\t      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n\t        this.group.transform(ctx);\n\t      }\n\t      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n\t      ctx.translate(center.x, center.y);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.scale(\n\t        this.scaleX * (this.flipX ? -1 : 1),\n\t        this.scaleY * (this.flipY ? -1 : 1)\n\t      );\n\t      ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n\t      ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns an object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          object = {\n\t            type:                     this.type,\n\t            originX:                  this.originX,\n\t            originY:                  this.originY,\n\t            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n\t            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n\t            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n\t            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n\t            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n\t            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n\t            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n\t            strokeLineCap:            this.strokeLineCap,\n\t            strokeLineJoin:           this.strokeLineJoin,\n\t            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n\t            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n\t            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n\t            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n\t            flipX:                    this.flipX,\n\t            flipY:                    this.flipY,\n\t            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n\t            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n\t            visible:                  this.visible,\n\t            clipTo:                   this.clipTo && String(this.clipTo),\n\t            backgroundColor:          this.backgroundColor,\n\t            fillRule:                 this.fillRule,\n\t            globalCompositeOperation: this.globalCompositeOperation,\n\t            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n\t            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n\t            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n\t          };\n\t\n\t      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\t\n\t      if (!this.includeDefaultValues) {\n\t        object = this._removeDefaultValues(object);\n\t      }\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns (dataless) object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      // will be overwritten by subclasses\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     */\n\t    _removeDefaultValues: function(object) {\n\t      var prototype = fabric.util.getKlass(object.type).prototype,\n\t          stateProperties = prototype.stateProperties;\n\t      stateProperties.forEach(function(prop) {\n\t        if (object[prop] === prototype[prop]) {\n\t          delete object[prop];\n\t        }\n\t        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n\t                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\t\n\t        // basically a check for [] === []\n\t        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n\t          delete object[prop];\n\t        }\n\t      });\n\t\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Returns a string representation of an instance\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.' + capitalize(this.type) + '>';\n\t    },\n\t\n\t    /**\n\t     * Return the object scale factor counting also the group scaling\n\t     * @return {Object} object with scaleX and scaleY properties\n\t     */\n\t    getObjectScaling: function() {\n\t      var scaleX = this.scaleX, scaleY = this.scaleY;\n\t      if (this.group) {\n\t        var scaling = this.group.getObjectScaling();\n\t        scaleX *= scaling.scaleX;\n\t        scaleY *= scaling.scaleY;\n\t      }\n\t      return { scaleX: scaleX, scaleY: scaleY };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\t\n\t      if (shouldConstrainValue) {\n\t        value = this._constrainScale(value);\n\t      }\n\t      if (key === 'scaleX' && value < 0) {\n\t        this.flipX = !this.flipX;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'scaleY' && value < 0) {\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n\t        value = new fabric.Shadow(value);\n\t      }\n\t      else if (key === 'dirty' && this.group) {\n\t        this.group.set('dirty', value);\n\t      }\n\t\n\t      this[key] = value;\n\t\n\t      if (this.cacheProperties.indexOf(key) > -1) {\n\t        if (this.group) {\n\t          this.group.set('dirty', true);\n\t        }\n\t        this.dirty = true;\n\t      }\n\t\n\t      if (key === 'width' || key === 'height') {\n\t        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * This callback function is called by the parent group of an object every\n\t     * time a non-delegated property changes on the group. It is passed the key\n\t     * and value as parameters. Not adding in this function's signature to avoid\n\t     * Travis build error about unused variables.\n\t     */\n\t    setOnGroup: function() {\n\t      // implemented by sub-classes, as needed.\n\t    },\n\t\n\t    /**\n\t     * Sets sourcePath of an object\n\t     * @param {String} value Value to set sourcePath to\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setSourcePath: function(value) {\n\t      this.sourcePath = value;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Retrieves viewportTransform from Object's canvas if possible\n\t     * @method getViewportTransform\n\t     * @memberOf fabric.Object.prototype\n\t     * @return {Boolean} flipY value // TODO\n\t     */\n\t    getViewportTransform: function() {\n\t      if (this.canvas && this.canvas.viewportTransform) {\n\t        return this.canvas.viewportTransform;\n\t      }\n\t      return [1, 0, 0, 1, 0, 0];\n\t    },\n\t\n\t    /**\n\t     * Renders an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if width/height are zeros or object is not visible\n\t      if ((this.width === 0 && this.height === 0) || !this.visible) {\n\t        return;\n\t      }\n\t      ctx.save();\n\t      //setup fill rule for current object\n\t      this._setupCompositeOperation(ctx);\n\t      this.drawSelectionBackground(ctx);\n\t      if (!noTransform) {\n\t        this.transform(ctx);\n\t      }\n\t      this._setOpacity(ctx);\n\t      this._setShadow(ctx);\n\t      if (this.transformMatrix) {\n\t        ctx.transform.apply(ctx, this.transformMatrix);\n\t      }\n\t      this.clipTo && fabric.util.clipContext(this, ctx);\n\t      if (this.objectCaching && !this.group) {\n\t        if (this.isCacheDirty(noTransform)) {\n\t          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n\t          this.drawObject(this._cacheContext, noTransform);\n\t          this.dirty = false;\n\t        }\n\t        this.drawCacheOnCanvas(ctx);\n\t      }\n\t      else {\n\t        this.drawObject(ctx, noTransform);\n\t        if (noTransform && this.objectCaching && this.statefullCache) {\n\t          this.saveState({ propertySet: 'cacheProperties' });\n\t        }\n\t      }\n\t      this.clipTo && ctx.restore();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx, noTransform) {\n\t      this._renderBackground(ctx);\n\t      this._setStrokeStyles(ctx);\n\t      this._setFillStyles(ctx);\n\t      this._render(ctx, noTransform);\n\t    },\n\t\n\t    /**\n\t     * Paint the cached copy of the object on the target context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    drawCacheOnCanvas: function(ctx) {\n\t      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n\t      ctx.drawImage(this._cacheCanvas, -this.cacheWidth / 2, -this.cacheHeight / 2);\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n\t     * on parent canvas.\n\t     */\n\t    isCacheDirty: function(skipCanvas) {\n\t      if (!skipCanvas && this._updateCacheCanvas()) {\n\t        // in this case the context is already cleared.\n\t        return true;\n\t      }\n\t      else {\n\t        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n\t          if (!skipCanvas) {\n\t            var dim = this._getNonTransformedDimensions();\n\t            this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n\t          }\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Draws a background for the object big as its untrasformed dimensions\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderBackground: function(ctx) {\n\t      if (!this.backgroundColor) {\n\t        return;\n\t      }\n\t      var dim = this._getNonTransformedDimensions();\n\t      ctx.fillStyle = this.backgroundColor;\n\t\n\t      ctx.fillRect(\n\t        -dim.x / 2,\n\t        -dim.y / 2,\n\t        dim.x,\n\t        dim.y\n\t      );\n\t      // if there is background color no other shadows\n\t      // should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setOpacity: function(ctx) {\n\t      ctx.globalAlpha *= this.opacity;\n\t    },\n\t\n\t    _setStrokeStyles: function(ctx) {\n\t      if (this.stroke) {\n\t        ctx.lineWidth = this.strokeWidth;\n\t        ctx.lineCap = this.strokeLineCap;\n\t        ctx.lineJoin = this.strokeLineJoin;\n\t        ctx.miterLimit = this.strokeMiterLimit;\n\t        ctx.strokeStyle = this.stroke.toLive\n\t          ? this.stroke.toLive(ctx, this)\n\t          : this.stroke;\n\t      }\n\t    },\n\t\n\t    _setFillStyles: function(ctx) {\n\t      if (this.fill) {\n\t        ctx.fillStyle = this.fill.toLive\n\t          ? this.fill.toLive(ctx, this)\n\t          : this.fill;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * Sets line dash\n\t     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n\t     * @param {Array} dashArray array representing dashes\n\t     * @param {Function} alternative function to call if browaser does not support lineDash\n\t     */\n\t    _setLineDash: function(ctx, dashArray, alternative) {\n\t      if (!dashArray) {\n\t        return;\n\t      }\n\t      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\t      if (1 & dashArray.length) {\n\t        dashArray.push.apply(dashArray, dashArray);\n\t      }\n\t      if (supportsLineDash) {\n\t        ctx.setLineDash(dashArray);\n\t      }\n\t      else {\n\t        alternative && alternative(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      if (!this.active || noTransform\n\t          || (this.group && this.group !== this.canvas.getActiveGroup())) {\n\t        return;\n\t      }\n\t\n\t      var vpt = this.getViewportTransform(),\n\t          matrix = this.calcTransformMatrix(),\n\t          options;\n\t      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n\t      options = fabric.util.qrDecompose(matrix);\n\t\n\t      ctx.save();\n\t      ctx.translate(options.translateX, options.translateY);\n\t      ctx.lineWidth = 1 * this.borderScaleFactor;\n\t      if (!this.group) {\n\t        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t      }\n\t      if (this.group && this.group === this.canvas.getActiveGroup()) {\n\t        ctx.rotate(degreesToRadians(options.angle));\n\t        this.drawBordersInGroup(ctx, options);\n\t      }\n\t      else {\n\t        ctx.rotate(degreesToRadians(this.angle));\n\t        this.drawBorders(ctx);\n\t      }\n\t      this.drawControls(ctx);\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n\t          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n\t          scaling = this.getObjectScaling();\n\t      if (this.canvas && this.canvas._isRetinaScaling()) {\n\t        multX *= fabric.devicePixelRatio;\n\t        multY *= fabric.devicePixelRatio;\n\t      }\n\t      ctx.shadowColor = this.shadow.color;\n\t      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n\t      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n\t      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _removeShadow: function(ctx) {\n\t      if (!this.shadow) {\n\t        return;\n\t      }\n\t\n\t      ctx.shadowColor = '';\n\t      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Object} filler fabric.Pattern or fabric.Gradient\n\t     */\n\t    _applyPatternGradientTransform: function(ctx, filler) {\n\t      if (!filler.toLive) {\n\t        return;\n\t      }\n\t      var transform = filler.gradientTransform || filler.patternTransform;\n\t      if (transform) {\n\t        ctx.transform.apply(ctx, transform);\n\t      }\n\t      var offsetX = -this.width / 2 + filler.offsetX || 0,\n\t          offsetY = -this.height / 2 + filler.offsetY || 0;\n\t      ctx.translate(offsetX, offsetY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderFill: function(ctx) {\n\t      if (!this.fill) {\n\t        return;\n\t      }\n\t\n\t      ctx.save();\n\t      this._applyPatternGradientTransform(ctx, this.fill);\n\t      if (this.fillRule === 'evenodd') {\n\t        ctx.fill('evenodd');\n\t      }\n\t      else {\n\t        ctx.fill();\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderStroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n\t      this._applyPatternGradientTransform(ctx, this.stroke);\n\t      ctx.stroke();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Clones an instance, some objects are async, so using callback method will work for every object.\n\t     * Using the direct return does not work for images and groups.\n\t     * @param {Function} callback Callback is invoked with a clone as a first argument\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {fabric.Object} clone of an instance\n\t     */\n\t    clone: function(callback, propertiesToInclude) {\n\t      if (this.constructor.fromObject) {\n\t        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n\t      }\n\t      return new fabric.Object(this.toObject(propertiesToInclude));\n\t    },\n\t\n\t    /**\n\t     * Creates an instance of fabric.Image out of an object\n\t     * @param {Function} callback callback, invoked with an instance as a first argument\n\t     * @param {Object} [options] for clone as image, passed to toDataURL\n\t     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    cloneAsImage: function(callback, options) {\n\t      var dataUrl = this.toDataURL(options);\n\t      fabric.util.loadImage(dataUrl, function(img) {\n\t        if (callback) {\n\t          callback(new fabric.Image(img));\n\t        }\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Converts an object into a data-url-like string\n\t     * @param {Object} options Options object\n\t     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n\t     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n\t     * @param {Number} [options.multiplier=1] Multiplier to scale by\n\t     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n\t     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n\t     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n\t     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n\t     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n\t     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n\t     */\n\t    toDataURL: function(options) {\n\t      options || (options = { });\n\t\n\t      var el = fabric.util.createCanvasElement(),\n\t          boundingRect = this.getBoundingRect();\n\t\n\t      el.width = boundingRect.width;\n\t      el.height = boundingRect.height;\n\t      fabric.util.wrapElement(el, 'div');\n\t      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n\t      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n\t      if (options.format === 'jpg') {\n\t        options.format = 'jpeg';\n\t      }\n\t\n\t      if (options.format === 'jpeg') {\n\t        canvas.backgroundColor = '#fff';\n\t      }\n\t\n\t      var origParams = {\n\t        active: this.get('active'),\n\t        left: this.getLeft(),\n\t        top: this.getTop()\n\t      };\n\t\n\t      this.set('active', false);\n\t      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\t\n\t      var originalCanvas = this.canvas;\n\t      canvas.add(this);\n\t      var data = canvas.toDataURL(options);\n\t\n\t      this.set(origParams).setCoords();\n\t      this.canvas = originalCanvas;\n\t\n\t      canvas.dispose();\n\t      canvas = null;\n\t\n\t      return data;\n\t    },\n\t\n\t    /**\n\t     * Returns true if specified type is identical to the type of an instance\n\t     * @param {String} type Type to check against\n\t     * @return {Boolean}\n\t     */\n\t    isType: function(type) {\n\t      return this.type === type;\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * Returns a JSON representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} JSON\n\t     */\n\t    toJSON: function(propertiesToInclude) {\n\t      // delegate, not alias\n\t      return this.toObject(propertiesToInclude);\n\t    },\n\t\n\t    /**\n\t     * Sets gradient (fill or stroke) of an object\n\t     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n\t     * @param {String} property Property name 'stroke' or 'fill'\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n\t     * @param {Number} [options.x1=0] x-coordinate of start point\n\t     * @param {Number} [options.y1=0] y-coordinate of start point\n\t     * @param {Number} [options.x2=0] x-coordinate of end point\n\t     * @param {Number} [options.y2=0] y-coordinate of end point\n\t     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n\t     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n\t     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n\t     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n\t     * @example <caption>Set linear gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'linear',\n\t     *   x1: -object.width / 2,\n\t     *   y1: 0,\n\t     *   x2: object.width / 2,\n\t     *   y2: 0,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     * @example <caption>Set radial gradient</caption>\n\t     * object.setGradient('fill', {\n\t     *   type: 'radial',\n\t     *   x1: 0,\n\t     *   y1: 0,\n\t     *   x2: 0,\n\t     *   y2: 0,\n\t     *   r1: object.width / 2,\n\t     *   r2: 10,\n\t     *   colorStops: {\n\t     *     0: 'red',\n\t     *     0.5: '#005555',\n\t     *     1: 'rgba(0,0,255,0.5)'\n\t     *   }\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setGradient: function(property, options) {\n\t      options || (options = { });\n\t\n\t      var gradient = { colorStops: [] };\n\t\n\t      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n\t      gradient.coords = {\n\t        x1: options.x1,\n\t        y1: options.y1,\n\t        x2: options.x2,\n\t        y2: options.y2\n\t      };\n\t\n\t      if (options.r1 || options.r2) {\n\t        gradient.coords.r1 = options.r1;\n\t        gradient.coords.r2 = options.r2;\n\t      }\n\t\n\t      gradient.gradientTransform = options.gradientTransform;\n\t      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\t\n\t      return this.set(property, fabric.Gradient.forObject(this, gradient));\n\t    },\n\t\n\t    /**\n\t     * Sets pattern fill of an object\n\t     * @param {Object} options Options object\n\t     * @param {(String|HTMLImageElement)} options.source Pattern source\n\t     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n\t     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n\t     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n\t     * @example <caption>Set pattern</caption>\n\t     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n\t     *   object.setPatternFill({\n\t     *     source: img,\n\t     *     repeat: 'repeat'\n\t     *   });\n\t     *   canvas.renderAll();\n\t     * });\n\t     */\n\t    setPatternFill: function(options) {\n\t      return this.set('fill', new fabric.Pattern(options));\n\t    },\n\t\n\t    /**\n\t     * Sets {@link fabric.Object#shadow|shadow} of an object\n\t     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n\t     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n\t     * @param {Number} [options.blur=0] Shadow blur\n\t     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n\t     * @param {Number} [options.offsetY=0] Shadow vertical offset\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n\t     * @example <caption>Set shadow with string notation</caption>\n\t     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n\t     * canvas.renderAll();\n\t     * @example <caption>Set shadow with object notation</caption>\n\t     * object.setShadow({\n\t     *   color: 'red',\n\t     *   blur: 10,\n\t     *   offsetX: 20,\n\t     *   offsetY: 20\n\t     * });\n\t     * canvas.renderAll();\n\t     */\n\t    setShadow: function(options) {\n\t      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n\t    },\n\t\n\t    /**\n\t     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n\t     * @param {String} color Color value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setColor: function(color) {\n\t      this.set('fill', color);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets \"angle\" of an instance\n\t     * @param {Number} angle Angle value (in degrees)\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setAngle: function(angle) {\n\t      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._setOriginToCenter();\n\t      }\n\t\n\t      this.set('angle', angle);\n\t\n\t      if (shouldCenterOrigin) {\n\t        this._resetOrigin();\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerH: function () {\n\t      this.canvas && this.canvas.centerObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object horizontally on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterH: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectH(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    centerV: function () {\n\t      this.canvas && this.canvas.centerObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenterV: function () {\n\t      this.canvas && this.canvas.viewportCenterObjectV(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object vertically and horizontally on canvas to which is was added last\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    center: function () {\n\t      this.canvas && this.canvas.centerObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Centers object on current viewport of canvas to which it was added last.\n\t     * You might need to call `setCoords` on an object after centering, to update controls area.\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    viewportCenter: function () {\n\t      this.canvas && this.canvas.viewportCenterObject(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Removes object from canvas to which it was added last\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    remove: function() {\n\t      this.canvas && this.canvas.remove(this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of a pointer relative to an object\n\t     * @param {Event} e Event to operate upon\n\t     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n\t     * @return {Object} Coordinates of a pointer (x, y)\n\t     */\n\t    getLocalPointer: function(e, pointer) {\n\t      pointer = pointer || this.canvas.getPointer(e);\n\t      var pClicked = new fabric.Point(pointer.x, pointer.y),\n\t          objectLeftTop = this._getLeftTopCoords();\n\t      if (this.angle) {\n\t        pClicked = fabric.util.rotatePoint(\n\t          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n\t      }\n\t      return {\n\t        x: pClicked.x - objectLeftTop.x,\n\t        y: pClicked.y - objectLeftTop.y\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Sets canvas globalCompositeOperation for specific object\n\t     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n\t     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n\t     */\n\t    _setupCompositeOperation: function (ctx) {\n\t      if (this.globalCompositeOperation) {\n\t        ctx.globalCompositeOperation = this.globalCompositeOperation;\n\t      }\n\t    }\n\t  });\n\t\n\t  fabric.util.createAccessors(fabric.Object);\n\t\n\t  /**\n\t   * Alias for {@link fabric.Object.prototype.setAngle}\n\t   * @alias rotate -> setAngle\n\t   * @memberOf fabric.Object\n\t   */\n\t  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\t\n\t  extend(fabric.Object.prototype, fabric.Observable);\n\t\n\t  /**\n\t   * Defines the number of fraction digits to use when serializing object values.\n\t   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @constant\n\t   * @type Number\n\t   */\n\t  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\t\n\t  fabric.Object._fromObject = function(className, object, callback, forceAsync, extraParam) {\n\t    var klass = fabric[className];\n\t    object = clone(object, true);\n\t    if (forceAsync) {\n\t      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n\t        object.fill = patterns[0];\n\t        object.stroke = patterns[1];\n\t        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n\t        callback && callback(instance);\n\t      });\n\t    }\n\t    else {\n\t      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n\t      callback && callback(instance);\n\t      return instance;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unique id used internally when creating SVG elements\n\t   * @static\n\t   * @memberOf fabric.Object\n\t   * @type Number\n\t   */\n\t  fabric.Object.__uid = 0;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      originXOffset = {\n\t        left: -0.5,\n\t        center: 0,\n\t        right: 0.5\n\t      },\n\t      originYOffset = {\n\t        top: -0.5,\n\t        center: 0,\n\t        bottom: 0.5\n\t      };\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n\t      var x = point.x,\n\t          y = point.y,\n\t          offsetX, offsetY, dim;\n\t\n\t      if (typeof fromOriginX === 'string') {\n\t        fromOriginX = originXOffset[fromOriginX];\n\t      }\n\t      else {\n\t        fromOriginX -= 0.5;\n\t      }\n\t\n\t      if (typeof toOriginX === 'string') {\n\t        toOriginX = originXOffset[toOriginX];\n\t      }\n\t      else {\n\t        toOriginX -= 0.5;\n\t      }\n\t\n\t      offsetX = toOriginX - fromOriginX;\n\t\n\t      if (typeof fromOriginY === 'string') {\n\t        fromOriginY = originYOffset[fromOriginY];\n\t      }\n\t      else {\n\t        fromOriginY -= 0.5;\n\t      }\n\t\n\t      if (typeof toOriginY === 'string') {\n\t        toOriginY = originYOffset[toOriginY];\n\t      }\n\t      else {\n\t        toOriginY -= 0.5;\n\t      }\n\t\n\t      offsetY = toOriginY - fromOriginY;\n\t\n\t      if (offsetX || offsetY) {\n\t        dim = this._getTransformedDimensions();\n\t        x = point.x + offsetX * dim.x;\n\t        y = point.y + offsetY * dim.y;\n\t      }\n\t\n\t      return new fabric.Point(x, y);\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToCenterPoint: function(point, originX, originY) {\n\t      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n\t     * @param {fabric.Point} center The point which corresponds to center of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    translateToOriginPoint: function(center, originX, originY) {\n\t      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      if (this.angle) {\n\t        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n\t      }\n\t      return p;\n\t    },\n\t\n\t    /**\n\t     * Returns the real center coordinates of the object\n\t     * @return {fabric.Point}\n\t     */\n\t    getCenterPoint: function() {\n\t      var leftTop = new fabric.Point(this.left, this.top);\n\t      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the coordinates of the object based on center coordinates\n\t     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n\t     * @return {fabric.Point}\n\t     */\n\t    // getOriginPoint: function(center) {\n\t    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n\t    // },\n\t\n\t    /**\n\t     * Returns the coordinates of the object as if it has a different origin\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    getPointByOrigin: function(originX, originY) {\n\t      var center = this.getCenterPoint();\n\t      return this.translateToOriginPoint(center, originX, originY);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in local coordinates\n\t     * @param {fabric.Point} point The point relative to the global coordinate system\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {fabric.Point}\n\t     */\n\t    toLocalPoint: function(point, originX, originY) {\n\t      var center = this.getCenterPoint(),\n\t          p, p2;\n\t\n\t      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n\t        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\t      }\n\t      else {\n\t        p = new fabric.Point(this.left, this.top);\n\t      }\n\t\n\t      p2 = new fabric.Point(point.x, point.y);\n\t      if (this.angle) {\n\t        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n\t      }\n\t      return p2.subtractEquals(p);\n\t    },\n\t\n\t    /**\n\t     * Returns the point in global coordinates\n\t     * @param {fabric.Point} The point relative to the local coordinate system\n\t     * @return {fabric.Point}\n\t     */\n\t    // toGlobalPoint: function(point) {\n\t    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n\t    // },\n\t\n\t    /**\n\t     * Sets the position of the object taking into consideration the object's origin\n\t     * @param {fabric.Point} pos The new position of the object\n\t     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n\t     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n\t     * @return {void}\n\t     */\n\t    setPositionByOrigin: function(pos, originX, originY) {\n\t      var center = this.translateToCenterPoint(pos, originX, originY),\n\t          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\t\n\t      this.set('left', position.x);\n\t      this.set('top', position.y);\n\t    },\n\t\n\t    /**\n\t     * @param {String} to One of 'left', 'center', 'right'\n\t     */\n\t    adjustPosition: function(to) {\n\t      var angle = degreesToRadians(this.angle),\n\t          hypotFull = this.getWidth(),\n\t          xFull = Math.cos(angle) * hypotFull,\n\t          yFull = Math.sin(angle) * hypotFull,\n\t          offsetFrom, offsetTo;\n\t\n\t      //TODO: this function does not consider mixed situation like top, center.\n\t      if (typeof this.originX === 'string') {\n\t        offsetFrom = originXOffset[this.originX];\n\t      }\n\t      else {\n\t        offsetFrom = this.originX - 0.5;\n\t      }\n\t      if (typeof to === 'string') {\n\t        offsetTo = originXOffset[to];\n\t      }\n\t      else {\n\t        offsetTo = to - 0.5;\n\t      }\n\t      this.left += xFull * (offsetTo - offsetFrom);\n\t      this.top += yFull * (offsetTo - offsetFrom);\n\t      this.setCoords();\n\t      this.originX = to;\n\t    },\n\t\n\t    /**\n\t     * Sets the origin/position of the object to it's center point\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _setOriginToCenter: function() {\n\t      this._originalOriginX = this.originX;\n\t      this._originalOriginY = this.originY;\n\t\n\t      var center = this.getCenterPoint();\n\t\n\t      this.originX = 'center';\n\t      this.originY = 'center';\n\t\n\t      this.left = center.x;\n\t      this.top = center.y;\n\t    },\n\t\n\t    /**\n\t     * Resets the origin/position of the object to it's original origin\n\t     * @private\n\t     * @return {void}\n\t     */\n\t    _resetOrigin: function() {\n\t      var originPoint = this.translateToOriginPoint(\n\t        this.getCenterPoint(),\n\t        this._originalOriginX,\n\t        this._originalOriginY);\n\t\n\t      this.originX = this._originalOriginX;\n\t      this.originY = this._originalOriginY;\n\t\n\t      this.left = originPoint.x;\n\t      this.top = originPoint.y;\n\t\n\t      this._originalOriginX = null;\n\t      this._originalOriginY = null;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getLeftTopCoords: function() {\n\t      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n\t    }\n\t  });\n\t\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  function getCoords(oCoords) {\n\t    return [\n\t      new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n\t      new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n\t      new fabric.Point(oCoords.br.x, oCoords.br.y),\n\t      new fabric.Point(oCoords.bl.x, oCoords.bl.y)\n\t    ];\n\t  }\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Object containing coordinates of object's controls\n\t     * @type Object\n\t     * @default\n\t     */\n\t    oCoords: null,\n\t\n\t    /**\n\t     * Checks if object intersects with an area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @return {Boolean} true if object intersects with an area formed by 2 points\n\t     */\n\t    intersectsWithRect: function(pointTL, pointBR) {\n\t      var oCoords = getCoords(this.oCoords),\n\t          intersection = fabric.Intersection.intersectPolygonRectangle(\n\t            oCoords,\n\t            pointTL,\n\t            pointBR\n\t          );\n\t      return intersection.status === 'Intersection';\n\t    },\n\t\n\t    /**\n\t     * Checks if object intersects with another object\n\t     * @param {Object} other Object to test\n\t     * @return {Boolean} true if object intersects with another object\n\t     */\n\t    intersectsWithObject: function(other) {\n\t      var intersection = fabric.Intersection.intersectPolygonPolygon(\n\t            getCoords(this.oCoords),\n\t            getCoords(other.oCoords)\n\t          );\n\t\n\t      return intersection.status === 'Intersection'\n\t        || other.isContainedWithinObject(this)\n\t        || this.isContainedWithinObject(other);\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area of another object\n\t     * @param {Object} other Object to test\n\t     * @return {Boolean} true if object is fully contained within area of another object\n\t     */\n\t    isContainedWithinObject: function(other) {\n\t      var points = getCoords(this.oCoords),\n\t          i = 0;\n\t      for (; i < 4; i++) {\n\t        if (!other.containsPoint(points[i])) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Checks if object is fully contained within area formed by 2 points\n\t     * @param {Object} pointTL top-left point of area\n\t     * @param {Object} pointBR bottom-right point of area\n\t     * @return {Boolean} true if object is fully contained within area formed by 2 points\n\t     */\n\t    isContainedWithinRect: function(pointTL, pointBR) {\n\t      var boundingRect = this.getBoundingRect();\n\t\n\t      return (\n\t        boundingRect.left >= pointTL.x &&\n\t        boundingRect.left + boundingRect.width <= pointBR.x &&\n\t        boundingRect.top >= pointTL.y &&\n\t        boundingRect.top + boundingRect.height <= pointBR.y\n\t      );\n\t    },\n\t\n\t    /**\n\t     * Checks if point is inside the object\n\t     * @param {fabric.Point} point Point to check against\n\t     * @return {Boolean} true if point is inside the object\n\t     */\n\t    containsPoint: function(point) {\n\t      if (!this.oCoords) {\n\t        this.setCoords();\n\t      }\n\t      var lines = this._getImageLines(this.oCoords),\n\t          xPoints = this._findCrossPoints(point, lines);\n\t\n\t      // if xPoints is odd then point is inside the object\n\t      return (xPoints !== 0 && xPoints % 2 === 1);\n\t    },\n\t\n\t    /**\n\t     * Method that returns an object with the object edges in it, given the coordinates of the corners\n\t     * @private\n\t     * @param {Object} oCoords Coordinates of the object corners\n\t     */\n\t    _getImageLines: function(oCoords) {\n\t      return {\n\t        topline: {\n\t          o: oCoords.tl,\n\t          d: oCoords.tr\n\t        },\n\t        rightline: {\n\t          o: oCoords.tr,\n\t          d: oCoords.br\n\t        },\n\t        bottomline: {\n\t          o: oCoords.br,\n\t          d: oCoords.bl\n\t        },\n\t        leftline: {\n\t          o: oCoords.bl,\n\t          d: oCoords.tl\n\t        }\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Helper method to determine how many cross points are between the 4 object edges\n\t     * and the horizontal line determined by a point on canvas\n\t     * @private\n\t     * @param {fabric.Point} point Point to check\n\t     * @param {Object} oCoords Coordinates of the object being evaluated\n\t     */\n\t     // remove yi, not used but left code here just in case.\n\t    _findCrossPoints: function(point, oCoords) {\n\t      var b1, b2, a1, a2, xi, // yi,\n\t          xcount = 0,\n\t          iLine;\n\t\n\t      for (var lineKey in oCoords) {\n\t        iLine = oCoords[lineKey];\n\t        // optimisation 1: line below point. no cross\n\t        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 2: line above point. no cross\n\t        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n\t          continue;\n\t        }\n\t        // optimisation 3: vertical line case\n\t        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n\t          xi = iLine.o.x;\n\t          // yi = point.y;\n\t        }\n\t        // calculate the intersection point\n\t        else {\n\t          b1 = 0;\n\t          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n\t          a1 = point.y - b1 * point.x;\n\t          a2 = iLine.o.y - b2 * iLine.o.x;\n\t\n\t          xi = -(a1 - a2) / (b1 - b2);\n\t          // yi = a1 + b1 * xi;\n\t        }\n\t        // dont count xi < point.x cases\n\t        if (xi >= point.x) {\n\t          xcount += 1;\n\t        }\n\t        // optimisation 4: specific for square images\n\t        if (xcount === 2) {\n\t          break;\n\t        }\n\t      }\n\t      return xcount;\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} width value\n\t     */\n\t    getBoundingRectWidth: function() {\n\t      return this.getBoundingRect().width;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object's bounding rectangle\n\t     * @deprecated since 1.0.4\n\t     * @return {Number} height value\n\t     */\n\t    getBoundingRectHeight: function() {\n\t      return this.getBoundingRect().height;\n\t    },\n\t\n\t    /**\n\t     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n\t     * the box is intented as aligned to axis of canvas.\n\t     * @param {Boolean} ignoreVpt bounding box will not be affected by viewportTransform\n\t     * @return {Object} Object with left, top, width, height properties\n\t     */\n\t    getBoundingRect: function(ignoreVpt) {\n\t      var coords = this.calcCoords(ignoreVpt);\n\t      return fabric.util.makeBoundingBoxFromPoints([\n\t        coords.tl,\n\t        coords.tr,\n\t        coords.br,\n\t        coords.bl\n\t      ]);\n\t    },\n\t\n\t    /**\n\t     * Returns width of an object bounding box counting transformations\n\t     * @return {Number} width value\n\t     */\n\t    getWidth: function() {\n\t      return this._getTransformedDimensions().x;\n\t    },\n\t\n\t    /**\n\t     * Returns height of an object bounding box counting transformations\n\t     * to be renamed in 2.0\n\t     * @return {Number} height value\n\t     */\n\t    getHeight: function() {\n\t      return this._getTransformedDimensions().y;\n\t    },\n\t\n\t    /**\n\t     * Makes sure the scale is valid and modifies it if necessary\n\t     * @private\n\t     * @param {Number} value\n\t     * @return {Number}\n\t     */\n\t    _constrainScale: function(value) {\n\t      if (Math.abs(value) < this.minScaleLimit) {\n\t        if (value < 0) {\n\t          return -this.minScaleLimit;\n\t        }\n\t        else {\n\t          return this.minScaleLimit;\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t\n\t    /**\n\t     * Scales an object (equally by x and y)\n\t     * @param {Number} value Scale factor\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scale: function(value) {\n\t      value = this._constrainScale(value);\n\t\n\t      if (value < 0) {\n\t        this.flipX = !this.flipX;\n\t        this.flipY = !this.flipY;\n\t        value *= -1;\n\t      }\n\t\n\t      this.scaleX = value;\n\t      this.scaleY = value;\n\t      return this.setCoords();\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New width value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToWidth: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n\t      return this.scale(value / this.width / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n\t     * @param {Number} value New height value\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    scaleToHeight: function(value) {\n\t      // adjust to bounding rect factor so that rotated shapes would fit as well\n\t      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n\t      return this.scale(value / this.height / boundingRectFactor);\n\t    },\n\t\n\t    /**\n\t     * Calculate and returns the .coords of an object.\n\t     * @return {Object} Object with tl, tr, br, bl ....\n\t     * @chainable\n\t     */\n\t    calcCoords: function(ignoreVpt) {\n\t      var theta = degreesToRadians(this.angle),\n\t          vpt = this.getViewportTransform(),\n\t          dim = ignoreVpt ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n\t          currentWidth = dim.x, currentHeight = dim.y,\n\t          sinTh = Math.sin(theta),\n\t          cosTh = Math.cos(theta),\n\t          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n\t          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n\t          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n\t          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n\t          center = this.getCenterPoint(),\n\t          // offset added for rotate and scale actions\n\t          coords = ignoreVpt ? center : fabric.util.transformPoint(center, vpt),\n\t          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n\t          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n\t          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n\t          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n\t      if (!ignoreVpt) {\n\t        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n\t            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n\t            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n\t            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n\t            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n\t      }\n\t\n\t      // debugging\n\t\n\t      /* setTimeout(function() {\n\t         canvas.contextTop.fillStyle = 'green';\n\t         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n\t         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n\t         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n\t         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n\t         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n\t         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n\t         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n\t         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n\t         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n\t       }, 50); */\n\t\n\t      var coords = {\n\t        // corners\n\t        tl: tl, tr: tr, br: br, bl: bl,\n\t      };\n\t      if (!ignoreVpt) {\n\t        // middle\n\t        coords.ml = ml;\n\t        coords.mt = mt;\n\t        coords.mr = mr;\n\t        coords.mb = mb;\n\t        // rotating point\n\t        coords.mtr = mtr;\n\t      }\n\t      return coords;\n\t    },\n\t\n\t    /**\n\t     * Sets corner position coordinates based on current angle, width and height\n\t     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setCoords: function(ignoreZoom, skipAbsolute) {\n\t      this.oCoords = this.calcCoords(ignoreZoom);\n\t      if (!skipAbsolute && !ignoreZoom) {\n\t        this.absoluteCoords = this.calcCoords(true);\n\t      }\n\t\n\t      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\t      ignoreZoom || this._setCornerCoords && this._setCornerCoords();\n\t\n\t      return this;\n\t    },\n\t\n\t    /*\n\t     * calculate rotation matrix of an object\n\t     * @return {Array} rotation matrix for the object\n\t     */\n\t    _calcRotateMatrix: function() {\n\t      if (this.angle) {\n\t        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n\t        return [cos, sin, -sin, cos, 0, 0];\n\t      }\n\t      return [1, 0, 0, 1, 0, 0];\n\t    },\n\t\n\t    /*\n\t     * calculate trasform Matrix that represent current transformation from\n\t     * object properties.\n\t     * @return {Array} matrix Transform Matrix for the object\n\t     */\n\t    calcTransformMatrix: function() {\n\t      var center = this.getCenterPoint(),\n\t          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n\t          rotateMatrix = this._calcRotateMatrix(),\n\t          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n\t          matrix = this.group ? this.group.calcTransformMatrix() : [1, 0, 0, 1, 0, 0];\n\t      matrix = multiplyMatrices(matrix, translateMatrix);\n\t      matrix = multiplyMatrices(matrix, rotateMatrix);\n\t      matrix = multiplyMatrices(matrix, dimensionMatrix);\n\t      return matrix;\n\t    },\n\t\n\t    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n\t      var skewMatrixX = [1, 0, Math.tan(degreesToRadians(skewX)), 1],\n\t          skewMatrixY = [1, Math.tan(degreesToRadians(skewY)), 0, 1],\n\t          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n\t          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n\t          scaleMatrix = [scaleX, 0, 0, scaleY],\n\t          m = multiplyMatrices(scaleMatrix, skewMatrixX, true);\n\t      return multiplyMatrices(m, skewMatrixY, true);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * Moves an object to the bottom of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendToBack: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.sendToBack(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to the top of the stack of drawn objects\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringToFront: function() {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n\t    }\n\t    else {\n\t      this.canvas.bringToFront(this);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object down in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  sendBackwards: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.sendBackwards(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object up in stack of drawn objects\n\t   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  bringForward: function(intersecting) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n\t    }\n\t    else {\n\t      this.canvas.bringForward(this, intersecting);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Moves an object to specified level in stack of drawn objects\n\t   * @param {Number} index New position of object\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  moveTo: function(index) {\n\t    if (this.group) {\n\t      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n\t    }\n\t    else {\n\t      this.canvas.moveTo(this, index);\n\t    }\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t\n\t  function getSvgColorString(prop, value) {\n\t    if (!value) {\n\t      return prop + ': none; ';\n\t    }\n\t    else if (value.toLive) {\n\t      return prop + ': url(#SVGID_' + value.id + '); ';\n\t    }\n\t    else {\n\t      var color = new fabric.Color(value),\n\t          str = prop + ': ' + color.toRgb() + '; ',\n\t          opacity = color.getAlpha();\n\t      if (opacity !== 1) {\n\t        //change the color in rgb + opacity\n\t        str += prop + '-opacity: ' + opacity.toString() + '; ';\n\t      }\n\t      return str;\n\t    }\n\t  }\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t    /**\n\t     * Returns styles-string for svg-export\n\t     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n\t     * @return {String}\n\t     */\n\t    getSvgStyles: function(skipShadow) {\n\t\n\t      var fillRule = this.fillRule,\n\t          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n\t          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n\t          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n\t          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n\t          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n\t          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n\t          visibility = this.visible ? '' : ' visibility: hidden;',\n\t          filter = skipShadow ? '' : this.getSvgFilter(),\n\t          fill = getSvgColorString('fill', this.fill),\n\t          stroke = getSvgColorString('stroke', this.stroke);\n\t\n\t      return [\n\t        stroke,\n\t        'stroke-width: ', strokeWidth, '; ',\n\t        'stroke-dasharray: ', strokeDashArray, '; ',\n\t        'stroke-linecap: ', strokeLineCap, '; ',\n\t        'stroke-linejoin: ', strokeLineJoin, '; ',\n\t        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n\t        fill,\n\t        'fill-rule: ', fillRule, '; ',\n\t        'opacity: ', opacity, ';',\n\t        filter,\n\t        visibility\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns filter for svg shadow\n\t     * @return {String}\n\t     */\n\t    getSvgFilter: function() {\n\t      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns id attribute for svg output\n\t     * @return {String}\n\t     */\n\t    getSvgId: function() {\n\t      return this.id ? 'id=\"' + this.id + '\" ' : '';\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export\n\t     * @return {String}\n\t     */\n\t    getSvgTransform: function() {\n\t      if (this.group && this.group.type === 'path-group') {\n\t        return '';\n\t      }\n\t      var toFixed = fabric.util.toFixed,\n\t          angle = this.getAngle(),\n\t          skewX = (this.getSkewX() % 360),\n\t          skewY = (this.getSkewY() % 360),\n\t          center = this.getCenterPoint(),\n\t\n\t          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t\n\t          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n\t                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n\t                            ' ' +\n\t                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n\t                          ')',\n\t\n\t          anglePart = angle !== 0\n\t            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n\t            : '',\n\t\n\t          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n\t            ? '' :\n\t            (' scale(' +\n\t              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n\t              ' ' +\n\t              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n\t            ')'),\n\t\n\t          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\t\n\t          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\t\n\t          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\t\n\t          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\t\n\t          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\t\n\t      return [\n\t        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * Returns transform-string for svg-export from the transform matrix of single elements\n\t     * @return {String}\n\t     */\n\t    getSvgTransformMatrix: function() {\n\t      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createBaseSVGMarkup: function() {\n\t      var markup = [];\n\t\n\t      if (this.fill && this.fill.toLive) {\n\t        markup.push(this.fill.toSVG(this, false));\n\t      }\n\t      if (this.stroke && this.stroke.toLive) {\n\t        markup.push(this.stroke.toSVG(this, false));\n\t      }\n\t      if (this.shadow) {\n\t        markup.push(this.shadow.toSVG(this));\n\t      }\n\t      return markup;\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function() {\n\t\n\t  var extend = fabric.util.object.extend,\n\t      originalSet = 'stateProperties';\n\t\n\t  /*\n\t    Depends on `stateProperties`\n\t  */\n\t  function saveProps(origin, destination, props) {\n\t    var tmpObj = { }, deep = true;\n\t    props.forEach(function(prop) {\n\t      tmpObj[prop] = origin[prop];\n\t    });\n\t    extend(origin[destination], tmpObj, deep);\n\t  }\n\t\n\t  function _isEqual(origValue, currentValue, firstPass) {\n\t    if (!fabric.isLikelyNode && origValue instanceof Element) {\n\t      // avoid checking deep html elements\n\t      return origValue === currentValue;\n\t    }\n\t    else if (origValue instanceof Array) {\n\t      if (origValue.length !== currentValue.length) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = origValue.length; i < len; i++) {\n\t        if (origValue[i] !== currentValue[i]) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t    else if (origValue && typeof origValue === 'object') {\n\t      if (!firstPass && Object.keys(origValue).length !== Object.keys(currentValue).length) {\n\t        return false;\n\t      }\n\t      for (var key in origValue) {\n\t        if (!_isEqual(origValue[key], currentValue[key])) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t    else {\n\t      return origValue === currentValue;\n\t    }\n\t  }\n\t\n\t\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * Returns true if object state (one of its state properties) was changed\n\t     * @param {String} [propertySet] optional name for the set of property we want to save\n\t     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n\t     */\n\t    hasStateChanged: function(propertySet) {\n\t      propertySet = propertySet || originalSet;\n\t      propertySet = '_' + propertySet;\n\t      return !_isEqual(this[propertySet], this, true);\n\t    },\n\t\n\t    /**\n\t     * Saves state of an object\n\t     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    saveState: function(options) {\n\t      var propertySet = options && options.propertySet || originalSet,\n\t          destination = '_' + propertySet;\n\t      if (!this[destination]) {\n\t        return this.setupState(options);\n\t      }\n\t      saveProps(this, destination, this[propertySet]);\n\t      if (options && options.stateProperties) {\n\t        saveProps(this, destination, options.stateProperties);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Setups state of an object\n\t     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n\t     * @return {fabric.Object} thisArg\n\t     */\n\t    setupState: function(options) {\n\t      options = options || { };\n\t      var propertySet = options.propertySet || originalSet;\n\t      options.propertySet = propertySet;\n\t      this['_' + propertySet] = { };\n\t      this.saveState(options);\n\t      return this;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var degreesToRadians = fabric.util.degreesToRadians,\n\t      /* eslint-disable camelcase */\n\t      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n\t      /* eslint-enable camelcase */\n\t  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t    /**\n\t     * The object interactivity controls.\n\t     * @private\n\t     */\n\t    _controlsVisibility: null,\n\t\n\t    /**\n\t     * Determines which corner has been clicked\n\t     * @private\n\t     * @param {Object} pointer The pointer indicating the mouse position\n\t     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n\t     */\n\t    _findTargetCorner: function(pointer) {\n\t      if (!this.hasControls || !this.active) {\n\t        return false;\n\t      }\n\t\n\t      var ex = pointer.x,\n\t          ey = pointer.y,\n\t          xPoints,\n\t          lines;\n\t      this.__corner = 0;\n\t      for (var i in this.oCoords) {\n\t\n\t        if (!this.isControlVisible(i)) {\n\t          continue;\n\t        }\n\t\n\t        if (i === 'mtr' && !this.hasRotatingPoint) {\n\t          continue;\n\t        }\n\t\n\t        if (this.get('lockUniScaling') &&\n\t           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n\t          continue;\n\t        }\n\t\n\t        lines = this._getImageLines(this.oCoords[i].corner);\n\t\n\t        // debugging\n\t\n\t        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\t\n\t        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n\t        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\t\n\t        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n\t        if (xPoints !== 0 && xPoints % 2 === 1) {\n\t          this.__corner = i;\n\t          return i;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets the coordinates of the draggable boxes in the corners of\n\t     * the image used to scale/rotate it.\n\t     * @private\n\t     */\n\t    _setCornerCoords: function() {\n\t      var coords = this.oCoords,\n\t          newTheta = degreesToRadians(45 - this.angle),\n\t          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\t          /* 0.707106 stands for sqrt(2)/2 */\n\t          cornerHypotenuse = this.cornerSize * 0.707106,\n\t          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n\t          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n\t          x, y;\n\t\n\t      for (var point in coords) {\n\t        x = coords[point].x;\n\t        y = coords[point].y;\n\t        coords[point].corner = {\n\t          tl: {\n\t            x: x - sinHalfOffset,\n\t            y: y - cosHalfOffset\n\t          },\n\t          tr: {\n\t            x: x + cosHalfOffset,\n\t            y: y - sinHalfOffset\n\t          },\n\t          bl: {\n\t            x: x - cosHalfOffset,\n\t            y: y + sinHalfOffset\n\t          },\n\t          br: {\n\t            x: x + sinHalfOffset,\n\t            y: y + cosHalfOffset\n\t          }\n\t        };\n\t      }\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var strokeWidth = this.strokeWidth,\n\t          w = this.width + strokeWidth,\n\t          h = this.height + strokeWidth;\n\t      return { x: w, y: h };\n\t    },\n\t\n\t    /*\n\t     * @private\n\t     */\n\t    _getTransformedDimensions: function(skewX, skewY) {\n\t      if (typeof skewX === 'undefined') {\n\t        skewX = this.skewX;\n\t      }\n\t      if (typeof skewY === 'undefined') {\n\t        skewY = this.skewY;\n\t      }\n\t      var dimensions = this._getNonTransformedDimensions(),\n\t          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n\t          points = [\n\t            {\n\t              x: -dimX,\n\t              y: -dimY\n\t            },\n\t            {\n\t              x: dimX,\n\t              y: -dimY\n\t            },\n\t            {\n\t              x: -dimX,\n\t              y: dimY\n\t            },\n\t            {\n\t              x: dimX,\n\t              y: dimY\n\t            }],\n\t          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n\t          bbox;\n\t      for (i = 0; i < points.length; i++) {\n\t        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n\t      }\n\t      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n\t      return { x: bbox.width, y: bbox.height };\n\t    },\n\t\n\t    /*\n\t     * private\n\t     */\n\t    _calculateCurrentDimensions: function()  {\n\t      var vpt = this.getViewportTransform(),\n\t          dim = this._getTransformedDimensions(),\n\t          p = fabric.util.transformPoint(dim, vpt, true);\n\t\n\t      return p.scalarAdd(2 * this.padding);\n\t    },\n\t\n\t    /**\n\t     * Draws a colored layer behind the object, inside its selection borders.\n\t     * Requires public options: padding, selectionBackgroundColor\n\t     * this function is called when the context is transformed\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawSelectionBackground: function(ctx) {\n\t      if (!this.selectionBackgroundColor || this.group || !this.active) {\n\t        return this;\n\t      }\n\t      ctx.save();\n\t      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n\t          vpt = this.canvas.viewportTransform;\n\t      ctx.translate(center.x, center.y);\n\t      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n\t      ctx.rotate(degreesToRadians(this.angle));\n\t      ctx.fillStyle = this.selectionBackgroundColor;\n\t      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBorders: function(ctx) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth,\n\t          height = wh.y + strokeWidth;\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = this.borderColor;\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\t\n\t        var rotateHeight = -height / 2;\n\t\n\t        ctx.beginPath();\n\t        ctx.moveTo(0, rotateHeight);\n\t        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n\t        ctx.closePath();\n\t        ctx.stroke();\n\t      }\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws borders of an object's bounding box when it is inside a group.\n\t     * Requires public properties: width, height\n\t     * Requires public options: padding, borderColor\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @param {object} options object representing current object parameters\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawBordersInGroup: function(ctx, options) {\n\t      if (!this.hasBorders) {\n\t        return this;\n\t      }\n\t\n\t      var p = this._getNonTransformedDimensions(),\n\t          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n\t          wh = fabric.util.transformPoint(p, matrix),\n\t          strokeWidth = 1 / this.borderScaleFactor,\n\t          width = wh.x + strokeWidth,\n\t          height = wh.y + strokeWidth;\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.borderDashArray, null);\n\t      ctx.strokeStyle = this.borderColor;\n\t\n\t      ctx.strokeRect(\n\t        -width / 2,\n\t        -height / 2,\n\t        width,\n\t        height\n\t      );\n\t\n\t      ctx.restore();\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Draws corners of an object's bounding box.\n\t     * Requires public properties: width, height\n\t     * Requires public options: cornerSize, padding\n\t     * @param {CanvasRenderingContext2D} ctx Context to draw on\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    drawControls: function(ctx) {\n\t      if (!this.hasControls) {\n\t        return this;\n\t      }\n\t\n\t      var wh = this._calculateCurrentDimensions(),\n\t          width = wh.x,\n\t          height = wh.y,\n\t          scaleOffset = this.cornerSize,\n\t          left = -(width + scaleOffset) / 2,\n\t          top = -(height + scaleOffset) / 2,\n\t          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\t\n\t      ctx.save();\n\t      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n\t      if (!this.transparentCorners) {\n\t        ctx.strokeStyle = this.cornerStrokeColor;\n\t      }\n\t      this._setLineDash(ctx, this.cornerDashArray, null);\n\t\n\t      // top-left\n\t      this._drawControl('tl', ctx, methodName,\n\t        left,\n\t        top);\n\t\n\t      // top-right\n\t      this._drawControl('tr', ctx, methodName,\n\t        left + width,\n\t        top);\n\t\n\t      // bottom-left\n\t      this._drawControl('bl', ctx, methodName,\n\t        left,\n\t        top + height);\n\t\n\t      // bottom-right\n\t      this._drawControl('br', ctx, methodName,\n\t        left + width,\n\t        top + height);\n\t\n\t      if (!this.get('lockUniScaling')) {\n\t\n\t        // middle-top\n\t        this._drawControl('mt', ctx, methodName,\n\t          left + width / 2,\n\t          top);\n\t\n\t        // middle-bottom\n\t        this._drawControl('mb', ctx, methodName,\n\t          left + width / 2,\n\t          top + height);\n\t\n\t        // middle-right\n\t        this._drawControl('mr', ctx, methodName,\n\t          left + width,\n\t          top + height / 2);\n\t\n\t        // middle-left\n\t        this._drawControl('ml', ctx, methodName,\n\t          left,\n\t          top + height / 2);\n\t      }\n\t\n\t      // middle-top-rotate\n\t      if (this.hasRotatingPoint) {\n\t        this._drawControl('mtr', ctx, methodName,\n\t          left + width / 2,\n\t          top - this.rotatingPointOffset);\n\t      }\n\t\n\t      ctx.restore();\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _drawControl: function(control, ctx, methodName, left, top) {\n\t      if (!this.isControlVisible(control)) {\n\t        return;\n\t      }\n\t      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n\t      switch (this.cornerStyle) {\n\t        case 'circle':\n\t          ctx.beginPath();\n\t          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n\t          ctx[methodName]();\n\t          if (stroke) {\n\t            ctx.stroke();\n\t          }\n\t          break;\n\t        default:\n\t          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n\t          ctx[methodName + 'Rect'](left, top, size, size);\n\t          if (stroke) {\n\t            ctx.strokeRect(left, top, size, size);\n\t          }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns true if the specified control is visible, false otherwise.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @returns {Boolean} true if the specified control is visible, false otherwise\n\t     */\n\t    isControlVisible: function(controlName) {\n\t      return this._getControlsVisibility()[controlName];\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility of the specified control.\n\t     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n\t     * @param {Boolean} visible true to set the specified control visible, false otherwise\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlVisible: function(controlName, visible) {\n\t      this._getControlsVisibility()[controlName] = visible;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets the visibility state of object controls.\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n\t     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n\t     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n\t     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n\t     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n\t     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n\t     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n\t     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n\t     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n\t     * @return {fabric.Object} thisArg\n\t     * @chainable\n\t     */\n\t    setControlsVisibility: function(options) {\n\t      options || (options = { });\n\t\n\t      for (var p in options) {\n\t        this.setControlVisible(p, options[p]);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns the instance of the control visibility set for this object.\n\t     * @private\n\t     * @returns {Object}\n\t     */\n\t    _getControlsVisibility: function() {\n\t      if (!this._controlsVisibility) {\n\t        this._controlsVisibility = {\n\t          tl: true,\n\t          tr: true,\n\t          br: true,\n\t          bl: true,\n\t          ml: true,\n\t          mt: true,\n\t          mr: true,\n\t          mb: true,\n\t          mtr: true\n\t        };\n\t      }\n\t      return this._controlsVisibility;\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Animation duration (in ms) for fx* methods\n\t   * @type Number\n\t   * @default\n\t   */\n\t  FX_DURATION: 500,\n\t\n\t  /**\n\t   * Centers object horizontally with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectH: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('left'),\n\t      endValue: this.getCenter().left,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('left', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Centers object vertically with animation.\n\t   * @param {fabric.Object} object Object to center\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxCenterObjectV: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('top'),\n\t      endValue: this.getCenter().top,\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        object.set('top', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        object.setCoords();\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as `fabric.Canvas#remove` but animated\n\t   * @param {fabric.Object} object Object to remove\n\t   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxRemove: function (object, callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: object.get('opacity'),\n\t      endValue: 0,\n\t      duration: this.FX_DURATION,\n\t      onStart: function() {\n\t        object.set('active', false);\n\t      },\n\t      onChange: function(value) {\n\t        object.set('opacity', value);\n\t        _this.renderAll();\n\t        onChange();\n\t      },\n\t      onComplete: function () {\n\t        _this.remove(object);\n\t        onComplete();\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t  /**\n\t   * Animates object's properties\n\t   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n\t   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n\t   * @return {fabric.Object} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n\t   * @chainable\n\t   *\n\t   * As object — multiple properties\n\t   *\n\t   * object.animate({ left: ..., top: ... });\n\t   * object.animate({ left: ..., top: ... }, { duration: ... });\n\t   *\n\t   * As string — one property\n\t   *\n\t   * object.animate('left', ...);\n\t   * object.animate('left', { duration: ... });\n\t   *\n\t   */\n\t  animate: function() {\n\t    if (arguments[0] && typeof arguments[0] === 'object') {\n\t      var propsToAnimate = [], prop, skipCallbacks;\n\t      for (prop in arguments[0]) {\n\t        propsToAnimate.push(prop);\n\t      }\n\t      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n\t        prop = propsToAnimate[i];\n\t        skipCallbacks = i !== len - 1;\n\t        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n\t      }\n\t    }\n\t    else {\n\t      this._animate.apply(this, arguments);\n\t    }\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {String} property Property to animate\n\t   * @param {String} to Value to animate to\n\t   * @param {Object} [options] Options object\n\t   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n\t   */\n\t  _animate: function(property, to, options, skipCallbacks) {\n\t    var _this = this, propPair;\n\t\n\t    to = to.toString();\n\t\n\t    if (!options) {\n\t      options = { };\n\t    }\n\t    else {\n\t      options = fabric.util.object.clone(options);\n\t    }\n\t\n\t    if (~property.indexOf('.')) {\n\t      propPair = property.split('.');\n\t    }\n\t\n\t    var currentValue = propPair\n\t      ? this.get(propPair[0])[propPair[1]]\n\t      : this.get(property);\n\t\n\t    if (!('from' in options)) {\n\t      options.from = currentValue;\n\t    }\n\t\n\t    if (~to.indexOf('=')) {\n\t      to = currentValue + parseFloat(to.replace('=', ''));\n\t    }\n\t    else {\n\t      to = parseFloat(to);\n\t    }\n\t\n\t    fabric.util.animate({\n\t      startValue: options.from,\n\t      endValue: to,\n\t      byValue: options.by,\n\t      easing: options.easing,\n\t      duration: options.duration,\n\t      abort: options.abort && function() {\n\t        return options.abort.call(_this);\n\t      },\n\t      onChange: function(value) {\n\t        if (propPair) {\n\t          _this[propPair[0]][propPair[1]] = value;\n\t        }\n\t        else {\n\t          _this.set(property, value);\n\t        }\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t        options.onChange && options.onChange();\n\t      },\n\t      onComplete: function() {\n\t        if (skipCallbacks) {\n\t          return;\n\t        }\n\t\n\t        _this.setCoords();\n\t        options.onComplete && options.onComplete();\n\t      }\n\t    });\n\t  }\n\t});\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      clone = fabric.util.object.clone,\n\t      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n\t      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\t\n\t  if (fabric.Line) {\n\t    fabric.warn('fabric.Line is already defined');\n\t    return;\n\t  }\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push(\n\t    'x1',\n\t    'x2',\n\t    'y1',\n\t    'y2'\n\t  );\n\t\n\t  /**\n\t   * Line class\n\t   * @class fabric.Line\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Line#initialize} for constructor definition\n\t   */\n\t  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'line',\n\t\n\t    /**\n\t     * x value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x1: 0,\n\t\n\t    /**\n\t     * y value or first line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y1: 0,\n\t\n\t    /**\n\t     * x value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    x2: 0,\n\t\n\t    /**\n\t     * y value or second line edge\n\t     * @type Number\n\t     * @default\n\t     */\n\t    y2: 0,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} [points] Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Line} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      if (!points) {\n\t        points = [0, 0, 0, 0];\n\t      }\n\t\n\t      this.callSuper('initialize', options);\n\t\n\t      this.set('x1', points[0]);\n\t      this.set('y1', points[1]);\n\t      this.set('x2', points[2]);\n\t      this.set('y2', points[3]);\n\t\n\t      this._setWidthHeight(options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      options || (options = { });\n\t\n\t      this.width = Math.abs(this.x2 - this.x1);\n\t      this.height = Math.abs(this.y2 - this.y1);\n\t\n\t      this.left = 'left' in options\n\t        ? options.left\n\t        : this._getLeftToOriginX();\n\t\n\t      this.top = 'top' in options\n\t        ? options.top\n\t        : this._getTopToOriginY();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      if (typeof coordProps[key] !== 'undefined') {\n\t        this._setWidthHeight();\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n\t     */\n\t    _getLeftToOriginX: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originX',\n\t        axis1: 'x1',\n\t        axis2: 'x2',\n\t        dimension: 'width'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'left',\n\t        center: 'center',\n\t        farthest: 'right'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n\t     */\n\t    _getTopToOriginY: makeEdgeToOriginGetter(\n\t      { // property names\n\t        origin: 'originY',\n\t        axis1: 'y1',\n\t        axis2: 'y2',\n\t        dimension: 'height'\n\t      },\n\t      { // possible values of origin\n\t        nearest: 'top',\n\t        center: 'center',\n\t        farthest: 'bottom'\n\t      }\n\t    ),\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t\n\t      if (noTransform) {\n\t        //  Line coords are distances from left-top of canvas to origin of line.\n\t        //  To render line in a path-group, we need to translate them to\n\t        //  distances from center of path-group to center of line.\n\t        var cp = this.getCenterPoint();\n\t        ctx.translate(\n\t          cp.x - this.strokeWidth / 2,\n\t          cp.y - this.strokeWidth / 2\n\t        );\n\t      }\n\t\n\t      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n\t        // move from center (of virtual box) to its left/top corner\n\t        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n\t        var p = this.calcLinePoints();\n\t        ctx.moveTo(p.x1, p.y1);\n\t        ctx.lineTo(p.x2, p.y2);\n\t      }\n\t\n\t      ctx.lineWidth = this.strokeWidth;\n\t\n\t      // TODO: test this\n\t      // make sure setting \"fill\" changes color of a line\n\t      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\t      var origStrokeStyle = ctx.strokeStyle;\n\t      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n\t      this.stroke && this._renderStroke(ctx);\n\t      ctx.strokeStyle = origStrokeStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p = this.calcLinePoints();\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @methd toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n\t    },\n\t\n\t    /*\n\t     * Calculate object dimensions from its properties\n\t     * @private\n\t     */\n\t    _getNonTransformedDimensions: function() {\n\t      var dim = this.callSuper('_getNonTransformedDimensions');\n\t      if (this.strokeLineCap === 'butt') {\n\t        if (dim.x === 0) {\n\t          dim.y -= this.strokeWidth;\n\t        }\n\t        if (dim.y === 0) {\n\t          dim.x -= this.strokeWidth;\n\t        }\n\t      }\n\t      return dim;\n\t    },\n\t\n\t    /**\n\t     * Recalculates line points given width and height\n\t     * @private\n\t     */\n\t    calcLinePoints: function() {\n\t      var xMult = this.x1 <= this.x2 ? -1 : 1,\n\t          yMult = this.y1 <= this.y2 ? -1 : 1,\n\t          x1 = (xMult * this.width * 0.5),\n\t          y1 = (yMult * this.height * 0.5),\n\t          x2 = (xMult * this.width * -0.5),\n\t          y2 = (yMult * this.height * -0.5);\n\t\n\t      return {\n\t        x1: x1,\n\t        x2: x2,\n\t        y1: y1,\n\t        y2: y2\n\t      };\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\t\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        p = this.calcLinePoints();\n\t      }\n\t      markup.push(\n\t        '<line ', this.getSvgId(),\n\t          'x1=\"', p.x1,\n\t          '\" y1=\"', p.y1,\n\t          '\" x2=\"', p.x2,\n\t          '\" y2=\"', p.y2,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n\t   */\n\t  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromElement = function(element, options) {\n\t    options = options || { };\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n\t        points = [\n\t          parsedAttributes.x1 || 0,\n\t          parsedAttributes.y1 || 0,\n\t          parsedAttributes.x2 || 0,\n\t          parsedAttributes.y2 || 0\n\t        ];\n\t    options.originX = 'left';\n\t    options.originY = 'top';\n\t    return new fabric.Line(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Line instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Line\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Line} instance of fabric.Line\n\t   */\n\t  fabric.Line.fromObject = function(object, callback, forceAsync) {\n\t    function _callback(instance) {\n\t      delete instance.points;\n\t      callback && callback(instance);\n\t    };\n\t    var options = clone(object, true);\n\t    options.points = [object.x1, object.y1, object.x2, object.y2];\n\t    var line = fabric.Object._fromObject('Line', options, _callback, forceAsync, 'points');\n\t    if (line) {\n\t      delete line.points;\n\t    }\n\t    return line;\n\t  };\n\t\n\t  /**\n\t   * Produces a function that calculates distance from canvas edge to Line origin.\n\t   */\n\t  function makeEdgeToOriginGetter(propertyNames, originValues) {\n\t    var origin = propertyNames.origin,\n\t        axis1 = propertyNames.axis1,\n\t        axis2 = propertyNames.axis2,\n\t        dimension = propertyNames.dimension,\n\t        nearest = originValues.nearest,\n\t        center = originValues.center,\n\t        farthest = originValues.farthest;\n\t\n\t    return function() {\n\t      switch (this.get(origin)) {\n\t        case nearest:\n\t          return Math.min(this.get(axis1), this.get(axis2));\n\t        case center:\n\t          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n\t        case farthest:\n\t          return Math.max(this.get(axis1), this.get(axis2));\n\t      }\n\t    };\n\t\n\t  }\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      pi = Math.PI,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Circle) {\n\t    fabric.warn('fabric.Circle is already defined.');\n\t    return;\n\t  }\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push(\n\t    'radius'\n\t  );\n\t\n\t  /**\n\t   * Circle class\n\t   * @class fabric.Circle\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Circle#initialize} for constructor definition\n\t   */\n\t  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'circle',\n\t\n\t    /**\n\t     * Radius of this circle\n\t     * @type Number\n\t     * @default\n\t     */\n\t    radius: 0,\n\t\n\t    /**\n\t     * Start angle of the circle, moving clockwise\n\t     * @type Number\n\t     * @default 0\n\t     */\n\t    startAngle: 0,\n\t\n\t    /**\n\t     * End angle of the circle\n\t     * @type Number\n\t     * @default 2Pi\n\t     */\n\t    endAngle: pi * 2,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('radius', options && options.radius || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (key === 'radius') {\n\t        this.setRadius(value);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n\t          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\t\n\t      if (angle === 0) {\n\t        if (this.group && this.group.type === 'path-group') {\n\t          x = this.left + this.radius;\n\t          y = this.top + this.radius;\n\t        }\n\t        markup.push(\n\t          '<circle ', this.getSvgId(),\n\t            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n\t            'r=\"', this.radius,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            '\" transform=\"', this.getSvgTransform(),\n\t            ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t      else {\n\t        var startX = Math.cos(this.startAngle) * this.radius,\n\t            startY = Math.sin(this.startAngle) * this.radius,\n\t            endX = Math.cos(this.endAngle) * this.radius,\n\t            endY = Math.sin(this.endAngle) * this.radius,\n\t            largeFlag = angle > pi ? '1' : '0';\n\t\n\t        markup.push(\n\t          '<path d=\"M ' + startX + ' ' + startY,\n\t          ' A ' + this.radius + ' ' + this.radius,\n\t          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          ' ', this.getSvgTransformMatrix(),\n\t          '\"/>\\n'\n\t        );\n\t      }\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.arc(noTransform ? this.left + this.radius : 0,\n\t              noTransform ? this.top + this.radius : 0,\n\t              this.radius,\n\t              this.startAngle,\n\t              this.endAngle, false);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusX: function() {\n\t      return this.get('radius') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRadiusY: function() {\n\t      return this.get('radius') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Sets radius of an object (and updates width accordingly)\n\t     * @return {fabric.Circle} thisArg\n\t     */\n\t    setRadius: function(value) {\n\t      this.radius = value;\n\t      return this.set('width', value * 2).set('height', value * 2);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n\t   */\n\t  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @throws {Error} If value of `r` attribute is missing or invalid\n\t   * @return {fabric.Circle} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\t\n\t    if (!isValidRadius(parsedAttributes)) {\n\t      throw new Error('value of `r` attribute is required and can not be negative');\n\t    }\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\t\n\t    obj.left -= obj.radius;\n\t    obj.top -= obj.radius;\n\t    return obj;\n\t  };\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  function isValidRadius(attributes) {\n\t    return (('radius' in attributes) && (attributes.radius >= 0));\n\t  }\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Circle} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Circle\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {Object} Instance of fabric.Circle\n\t   */\n\t  fabric.Circle.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Circle', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Triangle) {\n\t    fabric.warn('fabric.Triangle is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Triangle class\n\t   * @class fabric.Triangle\n\t   * @extends fabric.Object\n\t   * @return {fabric.Triangle} thisArg\n\t   * @see {@link fabric.Triangle#initialize} for constructor definition\n\t   */\n\t  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'triangle',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('width', options && options.width || 100)\n\t          .set('height', options && options.height || 100);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      ctx.moveTo(-widthBy2, heightBy2);\n\t      ctx.lineTo(0, -heightBy2);\n\t      ctx.lineTo(widthBy2, heightBy2);\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(),\n\t          widthBy2 = this.width / 2,\n\t          heightBy2 = this.height / 2,\n\t          points = [\n\t            -widthBy2 + ' ' + heightBy2,\n\t            '0 ' + -heightBy2,\n\t            widthBy2 + ' ' + heightBy2\n\t          ]\n\t          .join(',');\n\t\n\t      markup.push(\n\t        '<polygon ', this.getSvgId(),\n\t          'points=\"', points,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t        '\"/>'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns {@link fabric.Triangle} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Triangle\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Triangle}\n\t   */\n\t  fabric.Triangle.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Triangle', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      piBy2   = Math.PI * 2,\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Ellipse) {\n\t    fabric.warn('fabric.Ellipse is already defined.');\n\t    return;\n\t  }\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push(\n\t    'rx',\n\t    'ry'\n\t  );\n\t\n\t  /**\n\t   * Ellipse class\n\t   * @class fabric.Ellipse\n\t   * @extends fabric.Object\n\t   * @return {fabric.Ellipse} thisArg\n\t   * @see {@link fabric.Ellipse#initialize} for constructor definition\n\t   */\n\t  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'ellipse',\n\t\n\t    /**\n\t     * Horizontal radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this.set('rx', options && options.rx || 0);\n\t      this.set('ry', options && options.ry || 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Ellipse} thisArg\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t      switch (key) {\n\t\n\t        case 'rx':\n\t          this.rx = value;\n\t          this.set('width', value * 2);\n\t          break;\n\t\n\t        case 'ry':\n\t          this.ry = value;\n\t          this.set('height', value * 2);\n\t          break;\n\t\n\t      }\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns horizontal radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRx: function() {\n\t      return this.get('rx') * this.get('scaleX');\n\t    },\n\t\n\t    /**\n\t     * Returns Vertical radius of an object (according to how an object is scaled)\n\t     * @return {Number}\n\t     */\n\t    getRy: function() {\n\t      return this.get('ry') * this.get('scaleY');\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left + this.rx;\n\t        y = this.top + this.ry;\n\t      }\n\t      markup.push(\n\t        '<ellipse ', this.getSvgId(),\n\t          'cx=\"', x, '\" cy=\"', y, '\" ',\n\t          'rx=\"', this.rx,\n\t          '\" ry=\"', this.ry,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      ctx.beginPath();\n\t      ctx.save();\n\t      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n\t      ctx.arc(\n\t        noTransform ? this.left + this.rx : 0,\n\t        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n\t        this.rx,\n\t        0,\n\t        piBy2,\n\t        false);\n\t      ctx.restore();\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n\t   */\n\t  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromElement = function(element, options) {\n\t    options || (options = { });\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top = parsedAttributes.top || 0;\n\t\n\t    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\t\n\t    ellipse.top -= ellipse.ry;\n\t    ellipse.left -= ellipse.rx;\n\t    return ellipse;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Ellipse} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Ellipse\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as first argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Ellipse}\n\t   */\n\t  fabric.Ellipse.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Ellipse', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.Rect) {\n\t    fabric.warn('fabric.Rect is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push('rx', 'ry');\n\t\n\t  /**\n\t   * Rectangle class\n\t   * @class fabric.Rect\n\t   * @extends fabric.Object\n\t   * @return {fabric.Rect} thisArg\n\t   * @see {@link fabric.Rect#initialize} for constructor definition\n\t   */\n\t  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\t\n\t    /**\n\t     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'rect',\n\t\n\t    /**\n\t     * Horizontal border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    rx:   0,\n\t\n\t    /**\n\t     * Vertical border radius\n\t     * @type Number\n\t     * @default\n\t     */\n\t    ry:   0,\n\t\n\t    /**\n\t     * Used to specify dash pattern for stroke on this object\n\t     * @type Array\n\t     */\n\t    strokeDashArray: null,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} [options] Options object\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(options) {\n\t      this.callSuper('initialize', options);\n\t      this._initRxRy();\n\t    },\n\t\n\t    /**\n\t     * Initializes rx/ry attributes\n\t     * @private\n\t     */\n\t    _initRxRy: function() {\n\t      if (this.rx && !this.ry) {\n\t        this.ry = this.rx;\n\t      }\n\t      else if (this.ry && !this.rx) {\n\t        this.rx = this.ry;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t\n\t      // optimize 1x1 case (used in spray brush)\n\t      if (this.width === 1 && this.height === 1) {\n\t        ctx.fillRect(-0.5, -0.5, 1, 1);\n\t        return;\n\t      }\n\t\n\t      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n\t          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n\t          w = this.width,\n\t          h = this.height,\n\t          x = noTransform ? this.left : -this.width / 2,\n\t          y = noTransform ? this.top : -this.height / 2,\n\t          isRounded = rx !== 0 || ry !== 0,\n\t          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n\t          k = 1 - 0.5522847498;\n\t      ctx.beginPath();\n\t\n\t      ctx.moveTo(x + rx, y);\n\t\n\t      ctx.lineTo(x + w - rx, y);\n\t      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\t\n\t      ctx.lineTo(x + w, y + h - ry);\n\t      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\t\n\t      ctx.lineTo(x + rx, y + h);\n\t      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\t\n\t      ctx.lineTo(x, y + ry);\n\t      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\t\n\t      ctx.closePath();\n\t\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        x = -this.width / 2;\n\t        y = -this.height / 2;\n\t      }\n\t      markup.push(\n\t        '<rect ', this.getSvgId(),\n\t          'x=\"', x, '\" y=\"', y,\n\t          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n\t          '\" width=\"', this.width, '\" height=\"', this.height,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(),\n\t          this.getSvgTransformMatrix(),\n\t        '\"/>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n\t   */\n\t  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Rect} Instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options = options || { };\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\t\n\t    parsedAttributes.left = parsedAttributes.left || 0;\n\t    parsedAttributes.top  = parsedAttributes.top  || 0;\n\t    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n\t    return rect;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns {@link fabric.Rect} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Rect\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {Object} instance of fabric.Rect\n\t   */\n\t  fabric.Rect.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Rect', object, callback, forceAsync);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { });\n\t\n\t  if (fabric.Polyline) {\n\t    fabric.warn('fabric.Polyline is already defined');\n\t    return;\n\t  }\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push('points');\n\t\n\t  /**\n\t   * Polyline class\n\t   * @class fabric.Polyline\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polyline#initialize} for constructor definition\n\t   */\n\t  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polyline',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points (where each point is an object with x and y)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Polyline} thisArg\n\t     * @example\n\t     * var poly = new fabric.Polyline([\n\t     *     { x: 10, y: 10 },\n\t     *     { x: 50, y: 30 },\n\t     *     { x: 40, y: 70 },\n\t     *     { x: 60, y: 50 },\n\t     *     { x: 100, y: 150 },\n\t     *     { x: 40, y: 100 }\n\t     *   ], {\n\t     *   stroke: 'red',\n\t     *   left: 100,\n\t     *   top: 100\n\t     * });\n\t     */\n\t    initialize: function(points, options) {\n\t      return fabric.Polygon.prototype.initialize.call(this, points, options);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t      return fabric.Polygon.prototype._calcDimensions.call(this);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.Polygon.prototype.toObject.call(this, propertiesToInclude);\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      return fabric.Polygon.prototype.toSVG.call(this, reviver);\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!fabric.Polygon.prototype.commonRender.call(this, ctx, noTransform)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var p1, p2;\n\t\n\t      ctx.beginPath();\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        p1 = this.points[i];\n\t        p2 = this.points[i + 1] || p1;\n\t        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.get('points').length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n\t   */\n\t  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polyline instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polyline\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Polyline} Instance of fabric.Polyline\n\t   */\n\t  fabric.Polyline.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Polyline', object, callback, forceAsync, 'points');\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      toFixed = fabric.util.toFixed;\n\t\n\t  if (fabric.Polygon) {\n\t    fabric.warn('fabric.Polygon is already defined');\n\t    return;\n\t  }\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push('points');\n\t\n\t  /**\n\t   * Polygon class\n\t   * @class fabric.Polygon\n\t   * @extends fabric.Object\n\t   * @see {@link fabric.Polygon#initialize} for constructor definition\n\t   */\n\t  fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'polygon',\n\t\n\t    /**\n\t     * Points array\n\t     * @type Array\n\t     * @default\n\t     */\n\t    points: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} points Array of points\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Polygon} thisArg\n\t     */\n\t    initialize: function(points, options) {\n\t      options = options || {};\n\t      this.points = points || [];\n\t      this.callSuper('initialize', options);\n\t      this._calcDimensions();\n\t      if (!('top' in options)) {\n\t        this.top = this.minY;\n\t      }\n\t      if (!('left' in options)) {\n\t        this.left = this.minX;\n\t      }\n\t      this.pathOffset = {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcDimensions: function() {\n\t\n\t      var points = this.points,\n\t          minX = min(points, 'x'),\n\t          minY = min(points, 'y'),\n\t          maxX = max(points, 'x'),\n\t          maxY = max(points, 'y');\n\t\n\t      this.width = (maxX - minX) || 0;\n\t      this.height = (maxY - minY) || 0;\n\t      this.minX = minX || 0;\n\t      this.minY = minY || 0;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        points: this.points.concat()\n\t      });\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var points = [], addTransform,\n\t          markup = this._createBaseSVGMarkup();\n\t\n\t      for (var i = 0, len = this.points.length; i < len; i++) {\n\t        points.push(toFixed(this.points[i].x, 2), ',', toFixed(this.points[i].y, 2), ' ');\n\t      }\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        '<', this.type, ' ', this.getSvgId(),\n\t          'points=\"', points.join(''),\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          ' ', this.getSvgTransformMatrix(),\n\t        '\"/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      if (!this.commonRender(ctx, noTransform)) {\n\t        return;\n\t      }\n\t      this._renderFill(ctx);\n\t      if (this.stroke || this.strokeDashArray) {\n\t        ctx.closePath();\n\t        this._renderStroke(ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    commonRender: function(ctx, noTransform) {\n\t      var point, len = this.points.length,\n\t          x = noTransform ? 0 : this.pathOffset.x,\n\t          y = noTransform ? 0 : this.pathOffset.y;\n\t\n\t      if (!len || isNaN(this.points[len - 1].y)) {\n\t        // do not draw if no points or odd points\n\t        // NaN comes from parseFloat of a empty string in parser\n\t        return false;\n\t      }\n\t      ctx.beginPath();\n\t      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n\t      for (var i = 0; i < len; i++) {\n\t        point = this.points[i];\n\t        ctx.lineTo(point.x - x, point.y - y);\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      fabric.Polyline.prototype._renderDashedStroke.call(this, ctx);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.points.length;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n\t   */\n\t  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\t\n\t  /**\n\t   * Returns {@link fabric.Polygon} instance from an SVG element\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    options || (options = { });\n\t\n\t    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n\t        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\t\n\t    return new fabric.Polygon(points, extend(parsedAttributes, options));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Polygon instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Polygon\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Polygon} Instance of fabric.Polygon\n\t   */\n\t  fabric.Polygon.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Polygon', object, callback, forceAsync, 'points');\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max,\n\t      extend = fabric.util.object.extend,\n\t      _toString = Object.prototype.toString,\n\t      drawArc = fabric.util.drawArc,\n\t      commandLengths = {\n\t        m: 2,\n\t        l: 2,\n\t        h: 1,\n\t        v: 1,\n\t        c: 6,\n\t        s: 4,\n\t        q: 4,\n\t        t: 2,\n\t        a: 7\n\t      },\n\t      repeatedCommands = {\n\t        m: 'l',\n\t        M: 'L'\n\t      };\n\t\n\t  if (fabric.Path) {\n\t    fabric.warn('fabric.Path is already defined');\n\t    return;\n\t  }\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push('path');\n\t\n\t  /**\n\t   * Path class\n\t   * @class fabric.Path\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.Path#initialize} for constructor definition\n\t   */\n\t  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path',\n\t\n\t    /**\n\t     * Array of path points\n\t     * @type Array\n\t     * @default\n\t     */\n\t    path: null,\n\t\n\t    /**\n\t     * Minimum X from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minX: 0,\n\t\n\t    /**\n\t     * Minimum Y from points values, necessary to offset points\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minY: 0,\n\t\n\t    cacheProperties: cacheProperties,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Path} thisArg\n\t     */\n\t    initialize: function(path, options) {\n\t      options = options || { };\n\t\n\t      if (options) {\n\t        this.setOptions(options);\n\t      }\n\t\n\t      if (!path) {\n\t        path = [];\n\t      }\n\t\n\t      var fromArray = _toString.call(path) === '[object Array]';\n\t\n\t      this.path = fromArray\n\t        ? path\n\t        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n\t        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\t\n\t      if (!this.path) {\n\t        return;\n\t      }\n\t\n\t      if (!fromArray) {\n\t        this.path = this._parsePath();\n\t      }\n\t\n\t      this._setPositionDimensions(options);\n\t\n\t      if (options.sourcePath) {\n\t        this.setSourcePath(options.sourcePath);\n\t      }\n\t      if (this.objectCaching) {\n\t        this._createCacheCanvas();\n\t        this.setupState({ propertySet: 'cacheProperties' });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} options Options object\n\t     */\n\t    _setPositionDimensions: function(options) {\n\t      var calcDim = this._parseDimensions();\n\t\n\t      this.minX = calcDim.left;\n\t      this.minY = calcDim.top;\n\t      this.width = calcDim.width;\n\t      this.height = calcDim.height;\n\t\n\t      if (typeof options.left === 'undefined') {\n\t        this.left = calcDim.left + (this.originX === 'center'\n\t          ? this.width / 2\n\t          : this.originX === 'right'\n\t            ? this.width\n\t            : 0);\n\t      }\n\t\n\t      if (typeof options.top === 'undefined') {\n\t        this.top = calcDim.top + (this.originY === 'center'\n\t          ? this.height / 2\n\t          : this.originY === 'bottom'\n\t            ? this.height\n\t            : 0);\n\t      }\n\t\n\t      this.pathOffset = this.pathOffset || {\n\t        x: this.minX + this.width / 2,\n\t        y: this.minY + this.height / 2\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _renderPathCommands: function(ctx) {\n\t      var current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          l = -this.pathOffset.x,\n\t          t = -this.pathOffset.y;\n\t\n\t      if (this.group && this.group.type === 'path-group') {\n\t        l = 0;\n\t        t = 0;\n\t      }\n\t\n\t      ctx.beginPath();\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            ctx.lineTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            ctx.moveTo(x + l, y + t);\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            ctx.bezierCurveTo(\n\t              x + current[1] + l, // x1\n\t              y + current[2] + t, // y1\n\t              controlX + l, // x2\n\t              controlY + t, // y2\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            ctx.bezierCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              controlX + l,\n\t              controlY + t,\n\t              x + l,\n\t              y + t\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              x + current[1] + l,\n\t              y + current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.bezierCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t\n\t            ctx.quadraticCurveTo(\n\t              current[1] + l,\n\t              current[2] + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            ctx.quadraticCurveTo(\n\t              controlX + l,\n\t              controlY + t,\n\t              tempX + l,\n\t              tempY + t\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x + l,\n\t              current[7] + y + t\n\t            ]);\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            drawArc(ctx, x + l, y + t, [\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + l,\n\t              current[7] + t\n\t            ]);\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            ctx.closePath();\n\t            break;\n\t        }\n\t        previous = current;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx context to render path on\n\t     */\n\t    _render: function(ctx) {\n\t      this._renderPathCommands(ctx);\n\t      this._renderFill(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} string representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Path (' + this.complexity() +\n\t        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var o = extend(this.callSuper('toObject', ['sourcePath', 'pathOffset'].concat(propertiesToInclude)), {\n\t        path: this.path.map(function(item) { return item.slice(); })\n\t      });\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.path = this.sourcePath;\n\t      }\n\t      delete o.sourcePath;\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var chunks = [],\n\t          markup = this._createBaseSVGMarkup(), addTransform = '';\n\t\n\t      for (var i = 0, len = this.path.length; i < len; i++) {\n\t        chunks.push(this.path[i].join(' '));\n\t      }\n\t      var path = chunks.join(' ');\n\t      if (!(this.group && this.group.type === 'path-group')) {\n\t        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n\t      }\n\t      markup.push(\n\t        '<path ', this.getSvgId(),\n\t          'd=\"', path,\n\t          '\" style=\"', this.getSvgStyles(),\n\t          '\" transform=\"', this.getSvgTransform(), addTransform,\n\t          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n\t        '/>\\n'\n\t      );\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns number representation of an instance complexity\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return this.path.length;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parsePath: function() {\n\t      var result = [],\n\t          coords = [],\n\t          currentPath,\n\t          parsed,\n\t          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n\t          match,\n\t          coordsStr;\n\t\n\t      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n\t        currentPath = this.path[i];\n\t\n\t        coordsStr = currentPath.slice(1).trim();\n\t        coords.length = 0;\n\t\n\t        while ((match = re.exec(coordsStr))) {\n\t          coords.push(match[0]);\n\t        }\n\t\n\t        coordsParsed = [currentPath.charAt(0)];\n\t\n\t        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n\t          parsed = parseFloat(coords[j]);\n\t          if (!isNaN(parsed)) {\n\t            coordsParsed.push(parsed);\n\t          }\n\t        }\n\t\n\t        var command = coordsParsed[0],\n\t            commandLength = commandLengths[command.toLowerCase()],\n\t            repeatedCommand = repeatedCommands[command] || command;\n\t\n\t        if (coordsParsed.length - 1 > commandLength) {\n\t          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n\t            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n\t            command = repeatedCommand;\n\t          }\n\t        }\n\t        else {\n\t          result.push(coordsParsed);\n\t        }\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _parseDimensions: function() {\n\t\n\t      var aX = [],\n\t          aY = [],\n\t          current, // current instruction\n\t          previous = null,\n\t          subpathStartX = 0,\n\t          subpathStartY = 0,\n\t          x = 0, // current x\n\t          y = 0, // current y\n\t          controlX = 0, // current control point x\n\t          controlY = 0, // current control point y\n\t          tempX,\n\t          tempY,\n\t          bounds;\n\t\n\t      for (var i = 0, len = this.path.length; i < len; ++i) {\n\t\n\t        current = this.path[i];\n\t\n\t        switch (current[0]) { // first letter\n\t\n\t          case 'l': // lineto, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'L': // lineto, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'h': // horizontal lineto, relative\n\t            x += current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'H': // horizontal lineto, absolute\n\t            x = current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'v': // vertical lineto, relative\n\t            y += current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'V': // verical lineto, absolute\n\t            y = current[1];\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'm': // moveTo, relative\n\t            x += current[1];\n\t            y += current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'M': // moveTo, absolute\n\t            x = current[1];\n\t            y = current[2];\n\t            subpathStartX = x;\n\t            subpathStartY = y;\n\t            bounds = [];\n\t            break;\n\t\n\t          case 'c': // bezierCurveTo, relative\n\t            tempX = x + current[5];\n\t            tempY = y + current[6];\n\t            controlX = x + current[3];\n\t            controlY = y + current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              x + current[1], // x1\n\t              y + current[2], // y1\n\t              controlX, // x2\n\t              controlY, // y2\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'C': // bezierCurveTo, absolute\n\t            x = current[5];\n\t            y = current[6];\n\t            controlX = current[3];\n\t            controlY = current[4];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              current[1],\n\t              current[2],\n\t              controlX,\n\t              controlY,\n\t              x,\n\t              y\n\t            );\n\t            break;\n\t\n\t          case 's': // shorthand cubic bezierCurveTo, relative\n\t\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              x + current[1],\n\t              y + current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'S': // shorthand cubic bezierCurveTo, absolute\n\t            tempX = current[3];\n\t            tempY = current[4];\n\t            if (previous[0].match(/[CcSs]/) === null) {\n\t              // If there is no previous command or if the previous command was not a C, c, S, or s,\n\t              // the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control points\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              current[1],\n\t              current[2],\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            // set control point to 2nd one of this command\n\t            // \"... the first control point is assumed to be\n\t            // the reflection of the second control point on\n\t            // the previous command relative to the current point.\"\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            break;\n\t\n\t          case 'q': // quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[3];\n\t            tempY = y + current[4];\n\t            controlX = x + current[1];\n\t            controlY = y + current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'Q': // quadraticCurveTo, absolute\n\t            controlX = current[1];\n\t            controlY = current[2];\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              current[3],\n\t              current[4]\n\t            );\n\t            x = current[3];\n\t            y = current[4];\n\t            break;\n\t\n\t          case 't': // shorthand quadraticCurveTo, relative\n\t            // transform to absolute x,y\n\t            tempX = x + current[1];\n\t            tempY = y + current[2];\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t\n\t            break;\n\t\n\t          case 'T':\n\t            tempX = current[1];\n\t            tempY = current[2];\n\t\n\t            if (previous[0].match(/[QqTt]/) === null) {\n\t              // If there is no previous command or if the previous command was not a Q, q, T or t,\n\t              // assume the control point is coincident with the current point\n\t              controlX = x;\n\t              controlY = y;\n\t            }\n\t            else {\n\t              // calculate reflection of previous control point\n\t              controlX = 2 * x - controlX;\n\t              controlY = 2 * y - controlY;\n\t            }\n\t            bounds = fabric.util.getBoundsOfCurve(x, y,\n\t              controlX,\n\t              controlY,\n\t              controlX,\n\t              controlY,\n\t              tempX,\n\t              tempY\n\t            );\n\t            x = tempX;\n\t            y = tempY;\n\t            break;\n\t\n\t          case 'a':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6] + x,\n\t              current[7] + y\n\t            );\n\t            x += current[6];\n\t            y += current[7];\n\t            break;\n\t\n\t          case 'A':\n\t            // TODO: optimize this\n\t            bounds = fabric.util.getBoundsOfArc(x, y,\n\t              current[1],\n\t              current[2],\n\t              current[3],\n\t              current[4],\n\t              current[5],\n\t              current[6],\n\t              current[7]\n\t            );\n\t            x = current[6];\n\t            y = current[7];\n\t            break;\n\t\n\t          case 'z':\n\t          case 'Z':\n\t            x = subpathStartX;\n\t            y = subpathStartY;\n\t            break;\n\t        }\n\t        previous = current;\n\t        bounds.forEach(function (point) {\n\t          aX.push(point.x);\n\t          aY.push(point.y);\n\t        });\n\t        aX.push(x);\n\t        aY.push(y);\n\t      }\n\t\n\t      var minX = min(aX) || 0,\n\t          minY = min(aY) || 0,\n\t          maxX = max(aX) || 0,\n\t          maxY = max(aY) || 0,\n\t          deltaX = maxX - minX,\n\t          deltaY = maxY - minY,\n\t\n\t          o = {\n\t            left: minX,\n\t            top: minY,\n\t            width: deltaX,\n\t            height: deltaY\n\t          };\n\t\n\t      return o;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an object\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {Object} object\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   */\n\t  fabric.Path.fromObject = function(object, callback, forceAsync) {\n\t    // remove this pattern rom 2.0, accept just object.\n\t    var path;\n\t    if (typeof object.path === 'string') {\n\t      fabric.loadSVGFromURL(object.path, function (elements) {\n\t        var pathUrl = object.path;\n\t        path = elements[0];\n\t        delete object.path;\n\t\n\t        fabric.util.object.extend(path, object);\n\t        path.setSourcePath(pathUrl);\n\t\n\t        callback && callback(path);\n\t      });\n\t    }\n\t    else {\n\t      return fabric.Object._fromObject('Path', object, callback, forceAsync, 'path');\n\t    }\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n\t   */\n\t  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\t\n\t  /**\n\t   * Creates an instance of fabric.Path from an SVG <path> element\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @param {SVGElement} element to parse\n\t   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n\t   * @param {Object} [options] Options object\n\t   */\n\t  fabric.Path.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n\t    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Path\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Path.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend;\n\t\n\t  if (fabric.PathGroup) {\n\t    fabric.warn('fabric.PathGroup is already defined');\n\t    return;\n\t  }\n\t\n\t  /**\n\t   * Path group class\n\t   * @class fabric.PathGroup\n\t   * @extends fabric.Path\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n\t   * @see {@link fabric.PathGroup#initialize} for constructor definition\n\t   */\n\t  fabric.PathGroup = fabric.util.createClass(fabric.Object, /** @lends fabric.PathGroup.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'path-group',\n\t\n\t    /**\n\t     * Fill value\n\t     * @type String\n\t     * @default\n\t     */\n\t    fill: '',\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Array} paths\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    initialize: function(paths, options) {\n\t\n\t      options = options || { };\n\t      this.paths = paths || [];\n\t\n\t      for (var i = this.paths.length; i--;) {\n\t        this.paths[i].group = this;\n\t      }\n\t\n\t      if (options.toBeParsed) {\n\t        this.parseDimensionsFromPaths(options);\n\t        delete options.toBeParsed;\n\t      }\n\t      this.setOptions(options);\n\t      this.setCoords();\n\t      if (options.sourcePath) {\n\t        this.setSourcePath(options.sourcePath);\n\t      }\n\t      if (this.objectCaching) {\n\t        this._createCacheCanvas();\n\t        this.setupState({ propertySet: 'cacheProperties' });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Calculate width and height based on paths contained\n\t     */\n\t    parseDimensionsFromPaths: function(options) {\n\t      var points, p, xC = [], yC = [], path, height, width,\n\t          m;\n\t      for (var j = this.paths.length; j--;) {\n\t        path = this.paths[j];\n\t        height = path.height + path.strokeWidth;\n\t        width = path.width + path.strokeWidth;\n\t        points = [\n\t          { x: path.left, y: path.top },\n\t          { x: path.left + width, y: path.top },\n\t          { x: path.left, y: path.top + height },\n\t          { x: path.left + width, y: path.top + height }\n\t        ];\n\t        m = this.paths[j].transformMatrix;\n\t        for (var i = 0; i < points.length; i++) {\n\t          p = points[i];\n\t          if (m) {\n\t            p = fabric.util.transformPoint(p, m, false);\n\t          }\n\t          xC.push(p.x);\n\t          yC.push(p.y);\n\t        }\n\t      }\n\t      options.width = Math.max.apply(null, xC);\n\t      options.height = Math.max.apply(null, yC);\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx) {\n\t      ctx.save();\n\t      ctx.translate(-this.width / 2, -this.height / 2);\n\t      for (var i = 0, l = this.paths.length; i < l; ++i) {\n\t        this.paths[i].render(ctx, true);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     */\n\t    isCacheDirty: function() {\n\t      if (this.callSuper('isCacheDirty')) {\n\t        return true;\n\t      }\n\t      if (!this.statefullCache) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = this.paths.length; i < len; i++) {\n\t        if (this.paths[i].isCacheDirty(true)) {\n\t          var dim = this._getNonTransformedDimensions();\n\t          this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Sets certain property to a certain value\n\t     * @param {String} prop\n\t     * @param {*} value\n\t     * @return {fabric.PathGroup} thisArg\n\t     */\n\t    _set: function(prop, value) {\n\t\n\t      if (prop === 'fill' && value && this.isSameColor()) {\n\t        var i = this.paths.length;\n\t        while (i--) {\n\t          this.paths[i]._set(prop, value);\n\t        }\n\t      }\n\t\n\t      return this.callSuper('_set', prop, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var pathsToObject = this.paths.map(function(path) {\n\t        var originalDefaults = path.includeDefaultValues;\n\t        path.includeDefaultValues = path.group.includeDefaultValues;\n\t        var obj = path.toObject(propertiesToInclude);\n\t        path.includeDefaultValues = originalDefaults;\n\t        return obj;\n\t      });\n\t      var o = extend(this.callSuper('toObject', ['sourcePath'].concat(propertiesToInclude)), {\n\t        paths: pathsToObject\n\t      });\n\t      return o;\n\t    },\n\t\n\t    /**\n\t     * Returns dataless object representation of this path group\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} dataless object representation of an instance\n\t     */\n\t    toDatalessObject: function(propertiesToInclude) {\n\t      var o = this.toObject(propertiesToInclude);\n\t      if (this.sourcePath) {\n\t        o.paths = this.sourcePath;\n\t      }\n\t      return o;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var objects = this.getObjects(),\n\t          p = this.getPointByOrigin('left', 'top'),\n\t          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n\t          markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(),\n\t        'style=\"', this.getSvgStyles(), '\" ',\n\t        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n\t        '>\\n'\n\t      );\n\t\n\t      for (var i = 0, len = objects.length; i < len; i++) {\n\t        markup.push('\\t', objects[i].toSVG(reviver));\n\t      }\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns a string representation of this path group\n\t     * @return {String} string representation of an object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.PathGroup (' + this.complexity() +\n\t        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n\t    },\n\t\n\t    /**\n\t     * Returns true if all paths in this group are of same color\n\t     * @return {Boolean} true if all paths are of the same color (`fill`)\n\t     */\n\t    isSameColor: function() {\n\t      var firstPathFill = this.getObjects()[0].get('fill') || '';\n\t      if (typeof firstPathFill !== 'string') {\n\t        return false;\n\t      }\n\t      firstPathFill = firstPathFill.toLowerCase();\n\t      return this.getObjects().every(function(path) {\n\t        var pathFill = path.get('fill') || '';\n\t        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Returns number representation of object's complexity\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return this.paths.reduce(function(total, path) {\n\t        return total + ((path && path.complexity) ? path.complexity() : 0);\n\t      }, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns all paths in this path group\n\t     * @return {Array} array of path objects included in this path group\n\t     */\n\t    getObjects: function() {\n\t      return this.paths;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Creates fabric.PathGroup instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n\t   */\n\t  fabric.PathGroup.fromObject = function(object, callback) {\n\t    // remove this pattern from 2.0 accepts only object\n\t    if (typeof object.paths === 'string') {\n\t      fabric.loadSVGFromURL(object.paths, function (elements) {\n\t\n\t        var pathUrl = object.paths;\n\t        delete object.paths;\n\t\n\t        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\t\n\t        callback(pathGroup);\n\t      });\n\t    }\n\t    else {\n\t      fabric.util.enlivenObjects(object.paths, function(enlivenedObjects) {\n\t        delete object.paths;\n\t        callback(new fabric.PathGroup(enlivenedObjects, object));\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.PathGroup\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.PathGroup.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      min = fabric.util.array.min,\n\t      max = fabric.util.array.max;\n\t\n\t  if (fabric.Group) {\n\t    return;\n\t  }\n\t\n\t  // lock-related properties, for use in fabric.Group#get\n\t  // to enable locking behavior on group\n\t  // when one of its objects has lock-related properties set\n\t  var _lockProperties = {\n\t    lockMovementX:  true,\n\t    lockMovementY:  true,\n\t    lockRotation:   true,\n\t    lockScalingX:   true,\n\t    lockScalingY:   true,\n\t    lockUniScaling: true\n\t  };\n\t\n\t  /**\n\t   * Group class\n\t   * @class fabric.Group\n\t   * @extends fabric.Object\n\t   * @mixes fabric.Collection\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n\t   * @see {@link fabric.Group#initialize} for constructor definition\n\t   */\n\t  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'group',\n\t\n\t    /**\n\t     * Width of stroke\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * Indicates if click events should also check for subtargets\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    subTargetCheck: false,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {Object} objects Group objects\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n\t     * @return {Object} thisArg\n\t     */\n\t    initialize: function(objects, options, isAlreadyGrouped) {\n\t      options = options || { };\n\t\n\t      this._objects = [];\n\t      // if objects enclosed in a group have been grouped already,\n\t      // we cannot change properties of objects.\n\t      // Thus we need to set options to group without objects,\n\t      // because delegatedProperties propagate to objects.\n\t      isAlreadyGrouped && this.callSuper('initialize', options);\n\t\n\t      this._objects = objects || [];\n\t      for (var i = this._objects.length; i--; ) {\n\t        this._objects[i].group = this;\n\t      }\n\t\n\t      this.originalState = { };\n\t\n\t      if (options.originX) {\n\t        this.originX = options.originX;\n\t      }\n\t      if (options.originY) {\n\t        this.originY = options.originY;\n\t      }\n\t\n\t      if (isAlreadyGrouped) {\n\t        // do not change coordinate of objects enclosed in a group,\n\t        // because objects coordinate system have been group coodinate system already.\n\t        this._updateObjectsCoords(true);\n\t      }\n\t      else {\n\t        this._calcBounds();\n\t        this._updateObjectsCoords();\n\t        this.callSuper('initialize', options);\n\t      }\n\t\n\t      this.setCoords();\n\t      this.saveCoords();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n\t     */\n\t    _updateObjectsCoords: function(skipCoordsChange) {\n\t      var center = this.getCenterPoint();\n\t      for (var i = this._objects.length; i--; ){\n\t        this._updateObjectCoords(this._objects[i], center, skipCoordsChange);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} object\n\t     * @param {fabric.Point} center, current center of group.\n\t     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n\t     */\n\t    _updateObjectCoords: function(object, center, skipCoordsChange) {\n\t      // do not display corners of objects enclosed in a group\n\t      object.__origHasControls = object.hasControls;\n\t      object.hasControls = false;\n\t\n\t      if (skipCoordsChange) {\n\t        return;\n\t      }\n\t\n\t      var objectLeft = object.getLeft(),\n\t          objectTop = object.getTop(),\n\t          ignoreZoom = true;\n\t\n\t      object.set({\n\t        originalLeft: objectLeft,\n\t        originalTop: objectTop,\n\t        left: objectLeft - center.x,\n\t        top: objectTop - center.y\n\t      });\n\t      object.setCoords(ignoreZoom);\n\t    },\n\t\n\t    /**\n\t     * Returns string represenation of a group\n\t     * @return {String}\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Group: (' + this.complexity() + ')>';\n\t    },\n\t\n\t    /**\n\t     * Adds an object to a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    addWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      if (object) {\n\t        this._objects.push(object);\n\t        object.group = this;\n\t        object._set('canvas', this.canvas);\n\t      }\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      this.dirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setObjectActive: function(object) {\n\t      object.set('active', true);\n\t      object.group = this;\n\t    },\n\t\n\t    /**\n\t     * Removes an object from a group; Then recalculates group's dimension, position.\n\t     * @param {Object} object\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    removeWithUpdate: function(object) {\n\t      this._restoreObjectsState();\n\t      fabric.util.resetObjectTransform(this);\n\t      // since _restoreObjectsState set objects inactive\n\t      this.forEachObject(this._setObjectActive, this);\n\t\n\t      this.remove(object);\n\t      this._calcBounds();\n\t      this._updateObjectsCoords();\n\t      this.dirty = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectAdded: function(object) {\n\t      this.dirty = true;\n\t      object.group = this;\n\t      object._set('canvas', this.canvas);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onObjectRemoved: function(object) {\n\t      this.dirty = true;\n\t      delete object.group;\n\t      object.set('active', false);\n\t    },\n\t\n\t    /**\n\t     * Properties that are delegated to group objects when reading/writing\n\t     * @param {Object} delegatedProperties\n\t     */\n\t    delegatedProperties: {\n\t      fill:             true,\n\t      stroke:           true,\n\t      strokeWidth:      true,\n\t      fontFamily:       true,\n\t      fontWeight:       true,\n\t      fontSize:         true,\n\t      fontStyle:        true,\n\t      lineHeight:       true,\n\t      textDecoration:   true,\n\t      textAlign:        true,\n\t      backgroundColor:  true\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _set: function(key, value) {\n\t      var i = this._objects.length;\n\t\n\t      if (this.delegatedProperties[key] || key === 'canvas') {\n\t        while (i--) {\n\t          this._objects[i].set(key, value);\n\t        }\n\t      }\n\t      else {\n\t        while (i--) {\n\t          this._objects[i].setOnGroup(key, value);\n\t        }\n\t      }\n\t\n\t      this.callSuper('_set', key, value);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var objsToObject = this.getObjects().map(function(obj) {\n\t        var originalDefaults = obj.includeDefaultValues;\n\t        obj.includeDefaultValues = obj.group.includeDefaultValues;\n\t        var _obj = obj.toObject(propertiesToInclude);\n\t        obj.includeDefaultValues = originalDefaults;\n\t        return _obj;\n\t      });\n\t      return extend(this.callSuper('toObject', propertiesToInclude), {\n\t        objects: objsToObject\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Renders instance on a given context\n\t     * @param {CanvasRenderingContext2D} ctx context to render instance on\n\t     */\n\t    render: function(ctx) {\n\t      this._transformDone = true;\n\t      this.callSuper('render', ctx);\n\t      this._transformDone = false;\n\t    },\n\t\n\t    /**\n\t     * Execute the drawing operation for an object on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    drawObject: function(ctx) {\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._renderObject(this._objects[i], ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Check if cache is dirty\n\t     */\n\t    isCacheDirty: function() {\n\t      if (this.callSuper('isCacheDirty')) {\n\t        return true;\n\t      }\n\t      if (!this.statefullCache) {\n\t        return false;\n\t      }\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        if (this._objects[i].isCacheDirty(true)) {\n\t          var dim = this._getNonTransformedDimensions();\n\t          this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t\n\t    /**\n\t     * Renders controls and borders for the object\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} [noTransform] When true, context is not transformed\n\t     */\n\t    _renderControls: function(ctx, noTransform) {\n\t      ctx.save();\n\t      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n\t      this.callSuper('_renderControls', ctx, noTransform);\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        this._objects[i]._renderControls(ctx);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _renderObject: function(object, ctx) {\n\t      // do not render if object is not visible\n\t      if (!object.visible) {\n\t        return;\n\t      }\n\t\n\t      var originalHasRotatingPoint = object.hasRotatingPoint;\n\t      object.hasRotatingPoint = false;\n\t      object.render(ctx);\n\t      object.hasRotatingPoint = originalHasRotatingPoint;\n\t    },\n\t\n\t    /**\n\t     * Retores original state of each of group objects (original state is that which was before group was created).\n\t     * @private\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    _restoreObjectsState: function() {\n\t      this._objects.forEach(this._restoreObjectState, this);\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Realises the transform from this group onto the supplied object\n\t     * i.e. it tells you what would happen if the supplied object was in\n\t     * the group, and then the group was destroyed. It mutates the supplied\n\t     * object.\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Object} transformedObject\n\t     */\n\t    realizeTransform: function(object) {\n\t      var matrix = object.calcTransformMatrix(),\n\t          options = fabric.util.qrDecompose(matrix),\n\t          center = new fabric.Point(options.translateX, options.translateY);\n\t      object.flipX = false;\n\t      object.flipY = false;\n\t      object.set('scaleX', options.scaleX);\n\t      object.set('scaleY', options.scaleY);\n\t      object.skewX = options.skewX;\n\t      object.skewY = options.skewY;\n\t      object.angle = options.angle;\n\t      object.setPositionByOrigin(center, 'center', 'center');\n\t      return object;\n\t    },\n\t\n\t    /**\n\t     * Restores original state of a specified object in group\n\t     * @private\n\t     * @param {fabric.Object} object\n\t     * @return {fabric.Group} thisArg\n\t     */\n\t    _restoreObjectState: function(object) {\n\t      this.realizeTransform(object);\n\t      object.setCoords();\n\t      object.hasControls = object.__origHasControls;\n\t      delete object.__origHasControls;\n\t      object.set('active', false);\n\t      delete object.group;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Destroys a group (restoring state of its objects)\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    destroy: function() {\n\t      return this._restoreObjectsState();\n\t    },\n\t\n\t    /**\n\t     * Saves coordinates of this instance (to be used together with `hasMoved`)\n\t     * @saveCoords\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    saveCoords: function() {\n\t      this._originalLeft = this.get('left');\n\t      this._originalTop = this.get('top');\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Checks whether this group was moved (since `saveCoords` was called last)\n\t     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n\t     */\n\t    hasMoved: function() {\n\t      return this._originalLeft !== this.get('left') ||\n\t             this._originalTop !== this.get('top');\n\t    },\n\t\n\t    /**\n\t     * Sets coordinates of all group objects\n\t     * @return {fabric.Group} thisArg\n\t     * @chainable\n\t     */\n\t    setObjectsCoords: function() {\n\t      var ignoreZoom = true;\n\t      this.forEachObject(function(object) {\n\t        object.setCoords(ignoreZoom);\n\t      });\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _calcBounds: function(onlyWidthHeight) {\n\t      var aX = [],\n\t          aY = [],\n\t          o, prop,\n\t          props = ['tr', 'br', 'bl', 'tl'],\n\t          i = 0, iLen = this._objects.length,\n\t          j, jLen = props.length,\n\t          ignoreZoom = true;\n\t\n\t      for ( ; i < iLen; ++i) {\n\t        o = this._objects[i];\n\t        o.setCoords(ignoreZoom);\n\t        for (j = 0; j < jLen; j++) {\n\t          prop = props[j];\n\t          aX.push(o.oCoords[prop].x);\n\t          aY.push(o.oCoords[prop].y);\n\t        }\n\t      }\n\t\n\t      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getBounds: function(aX, aY, onlyWidthHeight) {\n\t      var minXY = new fabric.Point(min(aX), min(aY)),\n\t          maxXY = new fabric.Point(max(aX), max(aY)),\n\t          obj = {\n\t            width: (maxXY.x - minXY.x) || 0,\n\t            height: (maxXY.y - minXY.y) || 0\n\t          };\n\t\n\t      if (!onlyWidthHeight) {\n\t        obj.left = minXY.x || 0;\n\t        obj.top = minXY.y || 0;\n\t        if (this.originX === 'center') {\n\t          obj.left += obj.width / 2;\n\t        }\n\t        if (this.originX === 'right') {\n\t          obj.left += obj.width;\n\t        }\n\t        if (this.originY === 'center') {\n\t          obj.top += obj.height / 2;\n\t        }\n\t        if (this.originY === 'bottom') {\n\t          obj.top += obj.height;\n\t        }\n\t      }\n\t      return obj;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns svg representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup();\n\t      markup.push(\n\t        '<g ', this.getSvgId(), 'transform=\"',\n\t        /* avoiding styles intentionally */\n\t        this.getSvgTransform(),\n\t        this.getSvgTransformMatrix(),\n\t        '\" style=\"',\n\t        this.getSvgFilter(),\n\t        '\">\\n'\n\t      );\n\t\n\t      for (var i = 0, len = this._objects.length; i < len; i++) {\n\t        markup.push('\\t', this._objects[i].toSVG(reviver));\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns requested property\n\t     * @param {String} prop Property to get\n\t     * @return {*}\n\t     */\n\t    get: function(prop) {\n\t      if (prop in _lockProperties) {\n\t        if (this[prop]) {\n\t          return this[prop];\n\t        }\n\t        else {\n\t          for (var i = 0, len = this._objects.length; i < len; i++) {\n\t            if (this._objects[i][prop]) {\n\t              return true;\n\t            }\n\t          }\n\t          return false;\n\t        }\n\t      }\n\t      else {\n\t        if (prop in this.delegatedProperties) {\n\t          return this._objects[0] && this._objects[0].get(prop);\n\t        }\n\t        return this[prop];\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns {@link fabric.Group} instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @param {Object} object Object to create a group from\n\t   * @param {Function} [callback] Callback to invoke when an group instance is created\n\t   */\n\t  fabric.Group.fromObject = function(object, callback) {\n\t    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n\t      delete object.objects;\n\t      callback && callback(new fabric.Group(enlivenedObjects, object, true));\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @memberOf fabric.Group\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Group.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var extend = fabric.util.object.extend;\n\t\n\t  if (!global.fabric) {\n\t    global.fabric = { };\n\t  }\n\t\n\t  if (global.fabric.Image) {\n\t    fabric.warn('fabric.Image is already defined.');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push(\n\t    'alignX',\n\t    'alignY',\n\t    'meetOrSlice'\n\t  );\n\t\n\t  /**\n\t   * Image class\n\t   * @class fabric.Image\n\t   * @extends fabric.Object\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n\t   * @see {@link fabric.Image#initialize} for constructor definition\n\t   */\n\t  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'image',\n\t\n\t    /**\n\t     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n\t     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n\t     * @type String\n\t     * @default\n\t     */\n\t    crossOrigin: '',\n\t\n\t    /**\n\t     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignX: 'none',\n\t\n\t    /**\n\t     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n\t     * @type String\n\t     * @default\n\t     */\n\t    alignY: 'none',\n\t\n\t    /**\n\t     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n\t     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n\t     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n\t     * @type String\n\t     * @default\n\t     */\n\t    meetOrSlice: 'meet',\n\t\n\t    /**\n\t     * Width of a stroke.\n\t     * For image quality a stroke multiple of 2 gives better results.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    strokeWidth: 0,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleX to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleX: 1,\n\t\n\t    /**\n\t     * private\n\t     * contains last value of scaleY to detect\n\t     * if the Image got resized after the last Render\n\t     * @type Number\n\t     */\n\t    _lastScaleY: 1,\n\t\n\t    /**\n\t     * minimum scale factor under which any resizeFilter is triggered to resize the image\n\t     * 0 will disable the automatic resize. 1 will trigger automatically always.\n\t     * number bigger than 1 can be used in case we want to scale with some filter above\n\t     * the natural image dimensions\n\t     * @type Number\n\t     */\n\t    minimumScaleTrigger: 0.5,\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties: stateProperties,\n\t\n\t    /**\n\t     * When `true`, object is cached on an additional canvas.\n\t     * default to false for images\n\t     * since 1.7.0\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    objectCaching: false,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {HTMLImageElement | String} element Image element\n\t     * @param {Object} [options] Options object\n\t     * @param {function} [callback] callback function to call after eventual filters applied.\n\t     * @return {fabric.Image} thisArg\n\t     */\n\t    initialize: function(element, options, callback) {\n\t      options || (options = { });\n\t      this.filters = [];\n\t      this.resizeFilters = [];\n\t      this.callSuper('initialize', options);\n\t      this._initElement(element, options, callback);\n\t    },\n\t\n\t    /**\n\t     * Returns image element which this instance if based on\n\t     * @return {HTMLImageElement} Image element\n\t     */\n\t    getElement: function() {\n\t      return this._element;\n\t    },\n\t\n\t    /**\n\t     * Sets image element for this instance to a specified one.\n\t     * If filters defined they are applied to new image.\n\t     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n\t     * @param {HTMLImageElement} element\n\t     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setElement: function(element, callback, options) {\n\t\n\t      var _callback, _this;\n\t\n\t      this._element = element;\n\t      this._originalElement = element;\n\t      this._initConfig(options);\n\t\n\t      if (this.resizeFilters.length === 0) {\n\t        _callback = callback;\n\t      }\n\t      else {\n\t        _this = this;\n\t        _callback = function() {\n\t          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n\t        };\n\t      }\n\t\n\t      if (this.filters.length !== 0) {\n\t        this.applyFilters(_callback);\n\t      }\n\t      else if (_callback) {\n\t        _callback(this);\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Sets crossOrigin value (on an instance and corresponding image element)\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setCrossOrigin: function(value) {\n\t      this.crossOrigin = value;\n\t      this._element.crossOrigin = value;\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * Returns original size of an image\n\t     * @return {Object} Object with \"width\" and \"height\" properties\n\t     */\n\t    getOriginalSize: function() {\n\t      var element = this.getElement();\n\t      return {\n\t        width: element.width,\n\t        height: element.height\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _stroke: function(ctx) {\n\t      if (!this.stroke || this.strokeWidth === 0) {\n\t        return;\n\t      }\n\t      var w = this.width / 2, h = this.height / 2;\n\t      ctx.beginPath();\n\t      ctx.moveTo(-w, -h);\n\t      ctx.lineTo(w, -h);\n\t      ctx.lineTo(w, h);\n\t      ctx.lineTo(-w, h);\n\t      ctx.lineTo(-w, -h);\n\t      ctx.closePath();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderDashedStroke: function(ctx) {\n\t      var x = -this.width / 2,\n\t          y = -this.height / 2,\n\t          w = this.width,\n\t          h = this.height;\n\t\n\t      ctx.save();\n\t      this._setStrokeStyles(ctx);\n\t\n\t      ctx.beginPath();\n\t      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n\t      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var filters = [], resizeFilters = [],\n\t          scaleX = 1, scaleY = 1;\n\t\n\t      this.filters.forEach(function(filterObj) {\n\t        if (filterObj) {\n\t          if (filterObj.type === 'Resize') {\n\t            scaleX *= filterObj.scaleX;\n\t            scaleY *= filterObj.scaleY;\n\t          }\n\t          filters.push(filterObj.toObject());\n\t        }\n\t      });\n\t\n\t      this.resizeFilters.forEach(function(filterObj) {\n\t        filterObj && resizeFilters.push(filterObj.toObject());\n\t      });\n\t      var object = extend(\n\t        this.callSuper(\n\t          'toObject',\n\t          ['crossOrigin', 'alignX', 'alignY', 'meetOrSlice'].concat(propertiesToInclude)\n\t        ), {\n\t          src: this.getSrc(),\n\t          filters: filters,\n\t          resizeFilters: resizeFilters,\n\t        });\n\t\n\t      object.width /= scaleX;\n\t      object.height /= scaleY;\n\t\n\t      return object;\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n\t          preserveAspectRatio = 'none', filtered = true;\n\t      if (this.group && this.group.type === 'path-group') {\n\t        x = this.left;\n\t        y = this.top;\n\t      }\n\t      if (this.alignX !== 'none' && this.alignY !== 'none') {\n\t        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n\t      }\n\t      markup.push(\n\t        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n\t          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n\t            '\" x=\"', x, '\" y=\"', y,\n\t            '\" style=\"', this.getSvgStyles(),\n\t            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n\t            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n\t            // so that object's center aligns with container's left/top\n\t            '\" width=\"', this.width,\n\t            '\" height=\"', this.height,\n\t            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n\t          '></image>\\n'\n\t      );\n\t\n\t      if (this.stroke || this.strokeDashArray) {\n\t        var origFill = this.fill;\n\t        this.fill = null;\n\t        markup.push(\n\t          '<rect ',\n\t            'x=\"', x, '\" y=\"', y,\n\t            '\" width=\"', this.width, '\" height=\"', this.height,\n\t            '\" style=\"', this.getSvgStyles(),\n\t          '\"/>\\n'\n\t        );\n\t        this.fill = origFill;\n\t      }\n\t\n\t      markup.push('</g>\\n');\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Returns source of an image\n\t     * @param {Boolean} filtered indicates if the src is needed for svg\n\t     * @return {String} Source of an image\n\t     */\n\t    getSrc: function(filtered) {\n\t      var element = filtered ? this._element : this._originalElement;\n\t      if (element) {\n\t        return fabric.isLikelyNode ? element._src : element.src;\n\t      }\n\t      else {\n\t        return this.src || '';\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Sets source of an image\n\t     * @param {String} src Source string (URL)\n\t     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Image} thisArg\n\t     * @chainable\n\t     */\n\t    setSrc: function(src, callback, options) {\n\t      fabric.util.loadImage(src, function(img) {\n\t        return this.setElement(img, callback, options);\n\t      }, this, options && options.crossOrigin);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of an instance\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * Applies filters assigned to this image (from \"filters\" array)\n\t     * @method applyFilters\n\t     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n\t     * @param {Array} filters to be applied\n\t     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n\t     * @param {Boolean} forResizing\n\t     * @return {CanvasElement} canvasEl to be drawn immediately\n\t     * @chainable\n\t     */\n\t    applyFilters: function(callback, filters, imgElement, forResizing) {\n\t\n\t      filters = filters || this.filters;\n\t      imgElement = imgElement || this._originalElement;\n\t\n\t      if (!imgElement) {\n\t        return;\n\t      }\n\t\n\t      var replacement = fabric.util.createImage(),\n\t          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n\t          minimumScale = this.minimumScaleTrigger / retinaScaling,\n\t          _this = this, scaleX, scaleY;\n\t\n\t      if (filters.length === 0) {\n\t        this._element = imgElement;\n\t        callback && callback(this);\n\t        return imgElement;\n\t      }\n\t\n\t      var canvasEl = fabric.util.createCanvasElement();\n\t      canvasEl.width = imgElement.width;\n\t      canvasEl.height = imgElement.height;\n\t      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\t\n\t      filters.forEach(function(filter) {\n\t        if (!filter) {\n\t          return;\n\t        }\n\t        if (forResizing) {\n\t          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n\t          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n\t          if (scaleX * retinaScaling < 1) {\n\t            scaleX *= retinaScaling;\n\t          }\n\t          if (scaleY * retinaScaling < 1) {\n\t            scaleY *= retinaScaling;\n\t          }\n\t        }\n\t        else {\n\t          scaleX = filter.scaleX;\n\t          scaleY = filter.scaleY;\n\t        }\n\t        filter.applyTo(canvasEl, scaleX, scaleY);\n\t        if (!forResizing && filter.type === 'Resize') {\n\t          _this.width *= filter.scaleX;\n\t          _this.height *= filter.scaleY;\n\t        }\n\t      });\n\t\n\t      /** @ignore */\n\t      replacement.width = canvasEl.width;\n\t      replacement.height = canvasEl.height;\n\t      if (fabric.isLikelyNode) {\n\t        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n\t        // onload doesn't fire in some node versions, so we invoke callback manually\n\t        _this._element = replacement;\n\t        !forResizing && (_this._filteredEl = replacement);\n\t        callback && callback(_this);\n\t      }\n\t      else {\n\t        replacement.onload = function() {\n\t          _this._element = replacement;\n\t          !forResizing && (_this._filteredEl = replacement);\n\t          callback && callback(_this);\n\t          replacement.onload = canvasEl = null;\n\t        };\n\t        replacement.src = canvasEl.toDataURL('image/png');\n\t      }\n\t      return canvasEl;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    _render: function(ctx, noTransform) {\n\t      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\t\n\t      x = (noTransform ? this.left : -this.width / 2);\n\t      y = (noTransform ? this.top : -this.height / 2);\n\t\n\t      if (this.meetOrSlice === 'slice') {\n\t        ctx.beginPath();\n\t        ctx.rect(x, y, this.width, this.height);\n\t        ctx.clip();\n\t      }\n\t\n\t      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n\t        this._lastScaleX = this.scaleX;\n\t        this._lastScaleY = this.scaleY;\n\t        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n\t      }\n\t      else {\n\t        elementToDraw = this._element;\n\t      }\n\t      elementToDraw && ctx.drawImage(elementToDraw,\n\t                                     x + imageMargins.marginX,\n\t                                     y + imageMargins.marginY,\n\t                                     imageMargins.width,\n\t                                     imageMargins.height\n\t                                    );\n\t\n\t      this._stroke(ctx);\n\t      this._renderStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private, needed to check if image needs resize\n\t     */\n\t    _needsResize: function() {\n\t      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _findMargins: function() {\n\t      var width = this.width, height = this.height, scales,\n\t          scale, marginX = 0, marginY = 0;\n\t\n\t      if (this.alignX !== 'none' || this.alignY !== 'none') {\n\t        scales = [this.width / this._element.width, this.height / this._element.height];\n\t        scale = this.meetOrSlice === 'meet'\n\t                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n\t        width = this._element.width * scale;\n\t        height = this._element.height * scale;\n\t        if (this.alignX === 'Mid') {\n\t          marginX = (this.width - width) / 2;\n\t        }\n\t        if (this.alignX === 'Max') {\n\t          marginX = this.width - width;\n\t        }\n\t        if (this.alignY === 'Mid') {\n\t          marginY = (this.height - height) / 2;\n\t        }\n\t        if (this.alignY === 'Max') {\n\t          marginY = this.height - height;\n\t        }\n\t      }\n\t      return {\n\t        width:  width,\n\t        height: height,\n\t        marginX: marginX,\n\t        marginY: marginY\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _resetWidthHeight: function() {\n\t      var element = this.getElement();\n\t\n\t      this.set('width', element.width);\n\t      this.set('height', element.height);\n\t    },\n\t\n\t    /**\n\t     * The Image class's initialization method. This method is automatically\n\t     * called by the constructor.\n\t     * @private\n\t     * @param {HTMLImageElement|String} element The element representing the image\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initElement: function(element, options, callback) {\n\t      this.setElement(fabric.util.getById(element), callback, options);\n\t      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Options object\n\t     */\n\t    _initConfig: function(options) {\n\t      options || (options = { });\n\t      this.setOptions(options);\n\t      this._setWidthHeight(options);\n\t      if (this._element && this.crossOrigin) {\n\t        this._element.crossOrigin = this.crossOrigin;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Array} filters to be initialized\n\t     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n\t     */\n\t    _initFilters: function(filters, callback) {\n\t      if (filters && filters.length) {\n\t        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n\t          callback && callback(enlivenedObjects);\n\t        }, 'fabric.Image.filters');\n\t      }\n\t      else {\n\t        callback && callback();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} [options] Object with width/height properties\n\t     */\n\t    _setWidthHeight: function(options) {\n\t      this.width = 'width' in options\n\t        ? options.width\n\t        : (this.getElement()\n\t            ? this.getElement().width || 0\n\t            : 0);\n\t\n\t      this.height = 'height' in options\n\t        ? options.height\n\t        : (this.getElement()\n\t            ? this.getElement().height || 0\n\t            : 0);\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity of this instance\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Default CSS class name for canvas\n\t   * @static\n\t   * @type String\n\t   * @default\n\t   */\n\t  fabric.Image.CSS_CANVAS = 'canvas-img';\n\t\n\t  /**\n\t   * Alias for getSrc\n\t   * @static\n\t   */\n\t  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from its object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} callback Callback to invoke when an image instance is created\n\t   */\n\t  fabric.Image.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.src, function(img, error) {\n\t      if (error) {\n\t        callback && callback(null, error);\n\t        return;\n\t      }\n\t      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n\t        object.filters = filters || [];\n\t        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n\t          object.resizeFilters = resizeFilters || [];\n\t          return new fabric.Image(img, object, callback);\n\t        });\n\t      });\n\t    }, null, object.crossOrigin);\n\t  };\n\t\n\t  /**\n\t   * Creates an instance of fabric.Image from an URL string\n\t   * @static\n\t   * @param {String} url URL to create an image from\n\t   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n\t   * @param {Object} [imgOptions] Options object\n\t   */\n\t  fabric.Image.fromURL = function(url, callback, imgOptions) {\n\t    fabric.util.loadImage(url, function(img) {\n\t      callback && callback(new fabric.Image(img, imgOptions));\n\t    }, null, imgOptions && imgOptions.crossOrigin);\n\t  };\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n\t   * @static\n\t   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n\t   */\n\t  fabric.Image.ATTRIBUTE_NAMES =\n\t    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' '));\n\t\n\t  /**\n\t   * Returns {@link fabric.Image} instance from an SVG element\n\t   * @static\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Function} callback Callback to execute when fabric.Image object is created\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Image} Instance of fabric.Image\n\t   */\n\t  fabric.Image.fromElement = function(element, callback, options) {\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n\t        preserveAR;\n\t\n\t    if (parsedAttributes.preserveAspectRatio) {\n\t      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n\t      extend(parsedAttributes, preserveAR);\n\t    }\n\t\n\t    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n\t      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.async = true;\n\t\n\t  /**\n\t   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n\t   * @static\n\t   * @type Number\n\t   * @default\n\t   */\n\t  fabric.Image.pngCompression = 1;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\tfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\t\n\t  /**\n\t   * @private\n\t   * @return {Number} angle value\n\t   */\n\t  _getAngleValueForStraighten: function() {\n\t    var angle = this.getAngle() % 360;\n\t    if (angle > 0) {\n\t      return Math.round((angle - 1) / 90) * 90;\n\t    }\n\t    return Math.round(angle / 90) * 90;\n\t  },\n\t\n\t  /**\n\t   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  straighten: function() {\n\t    this.setAngle(this._getAngleValueForStraighten());\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Object.prototype.straighten} but with animation\n\t   * @param {Object} callbacks Object with callback functions\n\t   * @param {Function} [callbacks.onComplete] Invoked on completion\n\t   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n\t   * @return {fabric.Object} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraighten: function(callbacks) {\n\t    callbacks = callbacks || { };\n\t\n\t    var empty = function() { },\n\t        onComplete = callbacks.onComplete || empty,\n\t        onChange = callbacks.onChange || empty,\n\t        _this = this;\n\t\n\t    fabric.util.animate({\n\t      startValue: this.get('angle'),\n\t      endValue: this._getAngleValueForStraighten(),\n\t      duration: this.FX_DURATION,\n\t      onChange: function(value) {\n\t        _this.setAngle(value);\n\t        onChange();\n\t      },\n\t      onComplete: function() {\n\t        _this.setCoords();\n\t        onComplete();\n\t      },\n\t      onStart: function() {\n\t        _this.set('active', false);\n\t      }\n\t    });\n\t\n\t    return this;\n\t  }\n\t});\n\t\n\tfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\t\n\t  /**\n\t   * Straightens object, then rerenders canvas\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  straightenObject: function (object) {\n\t    object.straighten();\n\t    this.renderAll();\n\t    return this;\n\t  },\n\t\n\t  /**\n\t   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n\t   * @param {fabric.Object} object Object to straighten\n\t   * @return {fabric.Canvas} thisArg\n\t   * @chainable\n\t   */\n\t  fxStraightenObject: function (object) {\n\t    object.fxStraighten({\n\t      onChange: this.renderAll.bind(this)\n\t    });\n\t    return this;\n\t  }\n\t});\n\t\n\t\n\t/**\n\t * @namespace fabric.Image.filters\n\t * @memberOf fabric.Image\n\t * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n\t * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t */\n\tfabric.Image.filters = fabric.Image.filters || { };\n\t\n\t/**\n\t * Root filter class from which all filter classes inherit from\n\t * @class fabric.Image.filters.BaseFilter\n\t * @memberOf fabric.Image.filters\n\t */\n\tfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\t\n\t  /**\n\t   * Filter type\n\t   * @param {String} type\n\t   * @default\n\t   */\n\t  type: 'BaseFilter',\n\t\n\t  /**\n\t   * Constructor\n\t   * @param {Object} [options] Options object\n\t   */\n\t  initialize: function(options) {\n\t    if (options) {\n\t      this.setOptions(options);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets filter's properties from options\n\t   * @param {Object} [options] Options object\n\t   */\n\t  setOptions: function(options) {\n\t    for (var prop in options) {\n\t      this[prop] = options[prop];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Returns object representation of an instance\n\t   * @return {Object} Object representation of an instance\n\t   */\n\t  toObject: function() {\n\t    return { type: this.type };\n\t  },\n\t\n\t  /**\n\t   * Returns a JSON representation of an instance\n\t   * @return {Object} JSON\n\t   */\n\t  toJSON: function() {\n\t    // delegate, not alias\n\t    return this.toObject();\n\t  }\n\t});\n\t\n\tfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n\t  var filter = new fabric.Image.filters[object.type](object);\n\t  callback && callback(filter);\n\t  return filter;\n\t};\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Brightness filter class\n\t   * @class fabric.Image.filters.Brightness\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Brightness({\n\t   *   brightness: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Brightness',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Brightness.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.brightness=0] Value to brighten the image up (-255..255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.brightness = options.brightness || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          brightness = this.brightness;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] += brightness;\n\t        data[i + 1] += brightness;\n\t        data[i + 2] += brightness;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        brightness: this.brightness\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n\t   */\n\t  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n\t   * @class fabric.Image.filters.Convolute\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Sharpen filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 0, -1,  0,\n\t   *            -1,  5, -1,\n\t   *             0, -1,  0 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Blur filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9,\n\t   *             1/9, 1/9, 1/9 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Emboss filter with opaqueness</caption>\n\t   * var filter = new fabric.Image.filters.Convolute({\n\t   *   opaque: true,\n\t   *   matrix: [ 1,   1,  1,\n\t   *             1, 0.7, -1,\n\t   *            -1,  -1, -1 ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Convolute',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Convolute.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n\t     * @param {Array} [options.matrix] Filter matrix\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.opaque = options.opaque;\n\t      this.matrix = options.matrix || [\n\t        0, 0, 0,\n\t        0, 1, 0,\n\t        0, 0, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t\n\t      var weights = this.matrix,\n\t          context = canvasEl.getContext('2d'),\n\t          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t\n\t          side = Math.round(Math.sqrt(weights.length)),\n\t          halfSide = Math.floor(side / 2),\n\t          src = pixels.data,\n\t          sw = pixels.width,\n\t          sh = pixels.height,\n\t          output = context.createImageData(sw, sh),\n\t          dst = output.data,\n\t          // go through the destination image pixels\n\t          alphaFac = this.opaque ? 1 : 0,\n\t          r, g, b, a, dstOff,\n\t          scx, scy, srcOff, wt;\n\t\n\t      for (var y = 0; y < sh; y++) {\n\t        for (var x = 0; x < sw; x++) {\n\t          dstOff = (y * sw + x) * 4;\n\t          // calculate the weighed sum of the source image pixels that\n\t          // fall under the convolution matrix\n\t          r = 0; g = 0; b = 0; a = 0;\n\t\n\t          for (var cy = 0; cy < side; cy++) {\n\t            for (var cx = 0; cx < side; cx++) {\n\t              scy = y + cy - halfSide;\n\t              scx = x + cx - halfSide;\n\t\n\t              // eslint-disable-next-line max-depth\n\t              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n\t                continue;\n\t              }\n\t\n\t              srcOff = (scy * sw + scx) * 4;\n\t              wt = weights[cy * side + cx];\n\t\n\t              r += src[srcOff] * wt;\n\t              g += src[srcOff + 1] * wt;\n\t              b += src[srcOff + 2] * wt;\n\t              a += src[srcOff + 3] * wt;\n\t            }\n\t          }\n\t          dst[dstOff] = r;\n\t          dst[dstOff + 1] = g;\n\t          dst[dstOff + 2] = b;\n\t          dst[dstOff + 3] = a + alphaFac * (255 - a);\n\t        }\n\t      }\n\t\n\t      context.putImageData(output, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        opaque: this.opaque,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n\t   */\n\t  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * GradientTransparency filter class\n\t   * @class fabric.Image.filters.GradientTransparency\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.GradientTransparency({\n\t   *   threshold: 200\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t   // eslint-disable-next-line max-len\n\t  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'GradientTransparency',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=100] Threshold value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 100;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          total = data.length;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i + 3] = threshold + 255 * (total - i) / total;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n\t   */\n\t  fabric.Image.filters.GradientTransparency.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Grayscale image filter class\n\t   * @class fabric.Image.filters.Grayscale\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Grayscale();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Grayscale',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Grayscale.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          len = imageData.width * imageData.height * 4,\n\t          index = 0,\n\t          average;\n\t\n\t      while (index < len) {\n\t        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n\t        data[index]     = average;\n\t        data[index + 1] = average;\n\t        data[index + 2] = average;\n\t        index += 4;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n\t   */\n\t  fabric.Image.filters.Grayscale.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Grayscale';\n\t    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Invert filter class\n\t   * @class fabric.Image.filters.Invert\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Invert();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Invert',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Invert.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i] = 255 - data[i];\n\t        data[i + 1] = 255 - data[i + 1];\n\t        data[i + 2] = 255 - data[i + 2];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n\t   */\n\t  fabric.Image.filters.Invert.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Invert';\n\t    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Mask filter class\n\t   * See http://resources.aleph-1.com/mask/\n\t   * @class fabric.Image.filters.Mask\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n\t   */\n\t  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Mask',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Mask.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {fabric.Image} [options.mask] Mask image object\n\t     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.mask = options.mask;\n\t      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      if (!this.mask) {\n\t        return;\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          maskEl = this.mask.getElement(),\n\t          maskCanvasEl = fabric.util.createCanvasElement(),\n\t          channel = this.channel,\n\t          i,\n\t          iLen = imageData.width * imageData.height * 4;\n\t\n\t      maskCanvasEl.width = canvasEl.width;\n\t      maskCanvasEl.height = canvasEl.height;\n\t\n\t      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\t\n\t      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          maskData = maskImageData.data;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i + 3] = maskData[i + channel];\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        mask: this.mask.toObject(),\n\t        channel: this.channel\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n\t   */\n\t  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n\t    fabric.util.loadImage(object.mask.src, function(img) {\n\t      object.mask = new fabric.Image(img, object.mask);\n\t      return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t    });\n\t  };\n\t\n\t  /**\n\t   * Indicates that instances of this type are async\n\t   * @static\n\t   * @type Boolean\n\t   * @default\n\t   */\n\t  fabric.Image.filters.Mask.async = true;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Noise filter class\n\t   * @class fabric.Image.filters.Noise\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Noise({\n\t   *   noise: 700\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Noise',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Noise.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.noise=0] Noise value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.noise = options.noise || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          noise = this.noise, rand;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        rand = (0.5 - Math.random()) * noise;\n\t\n\t        data[i] += rand;\n\t        data[i + 1] += rand;\n\t        data[i + 2] += rand;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        noise: this.noise\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n\t   */\n\t  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Pixelate filter class\n\t   * @class fabric.Image.filters.Pixelate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Pixelate({\n\t   *   blocksize: 8\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Pixelate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Pixelate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.blocksize = options.blocksize || 4;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = imageData.height,\n\t          jLen = imageData.width,\n\t          index, i, j, r, g, b, a;\n\t\n\t      for (i = 0; i < iLen; i += this.blocksize) {\n\t        for (j = 0; j < jLen; j += this.blocksize) {\n\t\n\t          index = (i * 4) * jLen + (j * 4);\n\t\n\t          r = data[index];\n\t          g = data[index + 1];\n\t          b = data[index + 2];\n\t          a = data[index + 3];\n\t\n\t          /*\n\t           blocksize: 4\n\t\n\t           [1,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [x,x,x,x,1]\n\t           [1,1,1,1,1]\n\t           */\n\t\n\t          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n\t            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n\t              index = (_i * 4) * jLen + (_j * 4);\n\t              data[index] = r;\n\t              data[index + 1] = g;\n\t              data[index + 2] = b;\n\t              data[index + 3] = a;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        blocksize: this.blocksize\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n\t   */\n\t  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Remove white filter class\n\t   * @class fabric.Image.filters.RemoveWhite\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.RemoveWhite({\n\t   *   threshold: 40,\n\t   *   distance: 140\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'RemoveWhite',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.threshold=30] Threshold value\n\t     * @param {Number} [options.distance=20] Distance value\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.threshold = options.threshold || 30;\n\t      this.distance = options.distance || 20;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          threshold = this.threshold,\n\t          distance = this.distance,\n\t          limit = 255 - threshold,\n\t          abs = Math.abs,\n\t          r, g, b;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (r > limit &&\n\t            g > limit &&\n\t            b > limit &&\n\t            abs(r - g) < distance &&\n\t            abs(r - b) < distance &&\n\t            abs(g - b) < distance\n\t        ) {\n\t          data[i + 3] = 0;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        threshold: this.threshold,\n\t        distance: this.distance\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n\t   */\n\t  fabric.Image.filters.RemoveWhite.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Sepia filter class\n\t   * @class fabric.Image.filters.Sepia\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, avg;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n\t        data[i] = avg + 100;\n\t        data[i + 1] = avg + 50;\n\t        data[i + 2] = avg + 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n\t   */\n\t  fabric.Image.filters.Sepia.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Sepia';\n\t    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Sepia2 filter class\n\t   * @class fabric.Image.filters.Sepia2\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Sepia2();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Sepia2',\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Sepia.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i, r, g, b;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n\t        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n\t        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n\t   */\n\t  fabric.Image.filters.Sepia2.fromObject = function(object, callback) {\n\t    object = object || { };\n\t    object.type = 'Sepia2';\n\t    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Tint filter class\n\t   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n\t   * @class fabric.Image.filters.Tint\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example <caption>Tint filter with hex color and opacity</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: '#3513B0',\n\t   *   opacity: 0.5\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Tint filter with rgba color</caption>\n\t   * var filter = new fabric.Image.filters.Tint({\n\t   *   color: 'rgba(53, 21, 176, 0.5)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Tint',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Tint.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to tint the image with\n\t     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t      this.opacity = typeof options.opacity !== 'undefined'\n\t                      ? options.opacity\n\t                      : new fabric.Color(this.color).getAlpha();\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          tintR, tintG, tintB,\n\t          r, g, b, alpha1,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      tintR = source[0] * this.opacity;\n\t      tintG = source[1] * this.opacity;\n\t      tintB = source[2] * this.opacity;\n\t\n\t      alpha1 = 1 - this.opacity;\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        // alpha compositing\n\t        data[i] = tintR + r * alpha1;\n\t        data[i + 1] = tintG + g * alpha1;\n\t        data[i + 2] = tintB + b * alpha1;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color,\n\t        opacity: this.opacity\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n\t   */\n\t  fabric.Image.filters.Tint.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Multiply filter class\n\t   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n\t   * @class fabric.Image.filters.Multiply\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example <caption>Multiply filter with hex color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: '#F0F'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   * @example <caption>Multiply filter with rgb color</caption>\n\t   * var filter = new fabric.Image.filters.Multiply({\n\t   *   color: 'rgb(53, 21, 176)'\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Multiply',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Multiply.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t\n\t      this.color = options.color || '#000000';\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          iLen = data.length, i,\n\t          source;\n\t\n\t      source = new fabric.Color(this.color).getSource();\n\t\n\t      for (i = 0; i < iLen; i += 4) {\n\t        data[i] *= source[0] / 255;\n\t        data[i + 1] *= source[1] / 255;\n\t        data[i + 2] *= source[2] / 255;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        color: this.color\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n\t   */\n\t  fabric.Image.filters.Multiply.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t  'use strict';\n\t\n\t  var fabric = global.fabric,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Color Blend filter class\n\t   * @class fabric.Image.filter.Blend\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  color: '#000',\n\t   *  mode: 'multiply'\n\t   * });\n\t   *\n\t   * var filter = new fabric.Image.filters.Blend({\n\t   *  image: fabricImageObject,\n\t   *  mode: 'multiply',\n\t   *  alpha: 0.5\n\t   * });\n\t\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t\n\t  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n\t    type: 'Blend',\n\t\n\t    initialize: function(options) {\n\t      options = options || {};\n\t      this.color = options.color || '#000';\n\t      this.image = options.image || false;\n\t      this.mode = options.mode || 'multiply';\n\t      this.alpha = options.alpha || 1;\n\t    },\n\t\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          tr, tg, tb,\n\t          r, g, b,\n\t          _r, _g, _b,\n\t          source,\n\t          isImage = false;\n\t\n\t      if (this.image) {\n\t        // Blend images\n\t        isImage = true;\n\t\n\t        var _el = fabric.util.createCanvasElement();\n\t        _el.width = this.image.width;\n\t        _el.height = this.image.height;\n\t\n\t        var tmpCanvas = new fabric.StaticCanvas(_el);\n\t        tmpCanvas.add(this.image);\n\t        var context2 =  tmpCanvas.getContext('2d');\n\t        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n\t      }\n\t      else {\n\t        // Blend color\n\t        source = new fabric.Color(this.color).getSource();\n\t\n\t        tr = source[0] * this.alpha;\n\t        tg = source[1] * this.alpha;\n\t        tb = source[2] * this.alpha;\n\t      }\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t\n\t        r = data[i];\n\t        g = data[i + 1];\n\t        b = data[i + 2];\n\t\n\t        if (isImage) {\n\t          tr = source[i] * this.alpha;\n\t          tg = source[i + 1] * this.alpha;\n\t          tb = source[i + 2] * this.alpha;\n\t        }\n\t\n\t        switch (this.mode) {\n\t          case 'multiply':\n\t            data[i] = r * tr / 255;\n\t            data[i + 1] = g * tg / 255;\n\t            data[i + 2] = b * tb / 255;\n\t            break;\n\t          case 'screen':\n\t            data[i] = 1 - (1 - r) * (1 - tr);\n\t            data[i + 1] = 1 - (1 - g) * (1 - tg);\n\t            data[i + 2] = 1 - (1 - b) * (1 - tb);\n\t            break;\n\t          case 'add':\n\t            data[i] = Math.min(255, r + tr);\n\t            data[i + 1] = Math.min(255, g + tg);\n\t            data[i + 2] = Math.min(255, b + tb);\n\t            break;\n\t          case 'diff':\n\t          case 'difference':\n\t            data[i] = Math.abs(r - tr);\n\t            data[i + 1] = Math.abs(g - tg);\n\t            data[i + 2] = Math.abs(b - tb);\n\t            break;\n\t          case 'subtract':\n\t            _r = r - tr;\n\t            _g = g - tg;\n\t            _b = b - tb;\n\t\n\t            data[i] = (_r < 0) ? 0 : _r;\n\t            data[i + 1] = (_g < 0) ? 0 : _g;\n\t            data[i + 2] = (_b < 0) ? 0 : _b;\n\t            break;\n\t          case 'darken':\n\t            data[i] = Math.min(r, tr);\n\t            data[i + 1] = Math.min(g, tg);\n\t            data[i + 2] = Math.min(b, tb);\n\t            break;\n\t          case 'lighten':\n\t            data[i] = Math.max(r, tr);\n\t            data[i + 1] = Math.max(g, tg);\n\t            data[i + 2] = Math.max(b, tb);\n\t            break;\n\t        }\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        color: this.color,\n\t        image: this.image,\n\t        mode: this.mode,\n\t        alpha: this.alpha\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Blend} Instance of fabric.Image.filters.Blend\n\t   */\n\t  fabric.Image.filters.Blend.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n\t      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n\t      ceil = Math.ceil,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Resize image filter class\n\t   * @class fabric.Image.filters.Resize\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Resize();\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Resize',\n\t\n\t    /**\n\t     * Resize type\n\t     * @param {String} resizeType\n\t     * @default\n\t     */\n\t    resizeType: 'hermite',\n\t\n\t    /**\n\t     * Scale factor for resizing, x axis\n\t     * @param {Number} scaleX\n\t     * @default\n\t     */\n\t    scaleX: 0,\n\t\n\t    /**\n\t     * Scale factor for resizing, y axis\n\t     * @param {Number} scaleY\n\t     * @default\n\t     */\n\t    scaleY: 0,\n\t\n\t    /**\n\t     * LanczosLobes parameter for lanczos filter\n\t     * @param {Number} lanczosLobes\n\t     * @default\n\t     */\n\t    lanczosLobes: 3,\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @memberOf fabric.Image.filters.Resize.prototype\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} scaleX\n\t     * @param {Number} scaleY\n\t     */\n\t    applyTo: function(canvasEl, scaleX, scaleY) {\n\t      if (scaleX === 1 && scaleY === 1) {\n\t        return;\n\t      }\n\t\n\t      this.rcpScaleX = 1 / scaleX;\n\t      this.rcpScaleY = 1 / scaleY;\n\t\n\t      var oW = canvasEl.width, oH = canvasEl.height,\n\t          dW = round(oW * scaleX), dH = round(oH * scaleY),\n\t          imageData;\n\t\n\t      if (this.resizeType === 'sliceHack') {\n\t        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'hermite') {\n\t        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'bilinear') {\n\t        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      if (this.resizeType === 'lanczos') {\n\t        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n\t      }\n\t      canvasEl.width = dW;\n\t      canvasEl.height = dH;\n\t      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Filter sliceByTwo\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n\t      var context = canvasEl.getContext('2d'), imageData,\n\t          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n\t          doneW = false, doneH = false, stepW = oW, stepH = oH,\n\t          tmpCanvas = fabric.util.createCanvasElement(),\n\t          tmpCtx = tmpCanvas.getContext('2d');\n\t      dW = floor(dW);\n\t      dH = floor(dH);\n\t      tmpCanvas.width = max(dW, oW);\n\t      tmpCanvas.height = max(dH, oH);\n\t\n\t      if (dW > oW) {\n\t        multW = 2;\n\t        signW = -1;\n\t      }\n\t      if (dH > oH) {\n\t        multH = 2;\n\t        signH = -1;\n\t      }\n\t      imageData = context.getImageData(0, 0, oW, oH);\n\t      canvasEl.width = max(dW, oW);\n\t      canvasEl.height = max(dH, oH);\n\t      context.putImageData(imageData, 0, 0);\n\t\n\t      while (!doneW || !doneH) {\n\t        oW = stepW;\n\t        oH = stepH;\n\t        if (dW * signW < floor(stepW * multW * signW)) {\n\t          stepW = floor(stepW * multW);\n\t        }\n\t        else {\n\t          stepW = dW;\n\t          doneW = true;\n\t        }\n\t        if (dH * signH < floor(stepH * multH * signH)) {\n\t          stepH = floor(stepH * multH);\n\t        }\n\t        else {\n\t          stepH = dH;\n\t          doneH = true;\n\t        }\n\t        imageData = context.getImageData(0, 0, oW, oH);\n\t        tmpCtx.putImageData(imageData, 0, 0);\n\t        context.clearRect(0, 0, stepW, stepH);\n\t        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n\t      }\n\t      return context.getImageData(0, 0, dW, dH);\n\t    },\n\t\n\t    /**\n\t     * Filter lanczosResize\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\t\n\t      function lanczosCreate(lobes) {\n\t        return function(x) {\n\t          if (x > lobes) {\n\t            return 0;\n\t          }\n\t          x *= Math.PI;\n\t          if (abs(x) < 1e-16) {\n\t            return 1;\n\t          }\n\t          var xx = x / lobes;\n\t          return sin(x) * sin(xx) / x / xx;\n\t        };\n\t      }\n\t\n\t      function process(u) {\n\t        var v, i, weight, idx, a, red, green,\n\t            blue, alpha, fX, fY;\n\t        center.x = (u + 0.5) * ratioX;\n\t        icenter.x = floor(center.x);\n\t        for (v = 0; v < dH; v++) {\n\t          center.y = (v + 0.5) * ratioY;\n\t          icenter.y = floor(center.y);\n\t          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n\t          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n\t            if (i < 0 || i >= oW) {\n\t              continue;\n\t            }\n\t            fX = floor(1000 * abs(i - center.x));\n\t            if (!cacheLanc[fX]) {\n\t              cacheLanc[fX] = { };\n\t            }\n\t            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n\t              if (j < 0 || j >= oH) {\n\t                continue;\n\t              }\n\t              fY = floor(1000 * abs(j - center.y));\n\t              if (!cacheLanc[fX][fY]) {\n\t                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n\t              }\n\t              weight = cacheLanc[fX][fY];\n\t              if (weight > 0) {\n\t                idx = (j * oW + i) * 4;\n\t                a += weight;\n\t                red += weight * srcData[idx];\n\t                green += weight * srcData[idx + 1];\n\t                blue += weight * srcData[idx + 2];\n\t                alpha += weight * srcData[idx + 3];\n\t              }\n\t            }\n\t          }\n\t          idx = (v * dW + u) * 4;\n\t          destData[idx] = red / a;\n\t          destData[idx + 1] = green / a;\n\t          destData[idx + 2] = blue / a;\n\t          destData[idx + 3] = alpha / a;\n\t        }\n\t\n\t        if (++u < dW) {\n\t          return process(u);\n\t        }\n\t        else {\n\t          return destImg;\n\t        }\n\t      }\n\t\n\t      var context = canvasEl.getContext('2d'),\n\t          srcImg = context.getImageData(0, 0, oW, oH),\n\t          destImg = context.getImageData(0, 0, dW, dH),\n\t          srcData = srcImg.data, destData = destImg.data,\n\t          lanczos = lanczosCreate(this.lanczosLobes),\n\t          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n\t          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n\t          range2X = ceil(ratioX * this.lanczosLobes / 2),\n\t          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n\t          cacheLanc = { }, center = { }, icenter = { };\n\t\n\t      return process(0);\n\t    },\n\t\n\t    /**\n\t     * bilinearFiltering\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n\t      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n\t          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n\t          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n\t          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n\t          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n\t          destPixels = destImage.data;\n\t      for (i = 0; i < dH; i++) {\n\t        for (j = 0; j < dW; j++) {\n\t          x = floor(ratioX * j);\n\t          y = floor(ratioY * i);\n\t          xDiff = ratioX * j - x;\n\t          yDiff = ratioY * i - y;\n\t          origPix = 4 * (y * oW + x);\n\t\n\t          for (chnl = 0; chnl < 4; chnl++) {\n\t            a = pixels[origPix + chnl];\n\t            b = pixels[origPix + 4 + chnl];\n\t            c = pixels[origPix + w4 + chnl];\n\t            d = pixels[origPix + w4 + 4 + chnl];\n\t            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n\t                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n\t            destPixels[offset++] = color;\n\t          }\n\t        }\n\t      }\n\t      return destImage;\n\t    },\n\t\n\t    /**\n\t     * hermiteFastResize\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     * @param {Number} oW Original Width\n\t     * @param {Number} oH Original Height\n\t     * @param {Number} dW Destination Width\n\t     * @param {Number} dH Destination Height\n\t     * @returns {ImageData}\n\t     */\n\t    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n\t      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n\t          ratioWHalf = ceil(ratioW / 2),\n\t          ratioHHalf = ceil(ratioH / 2),\n\t          context = canvasEl.getContext('2d'),\n\t          img = context.getImageData(0, 0, oW, oH), data = img.data,\n\t          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n\t      for (var j = 0; j < dH; j++) {\n\t        for (var i = 0; i < dW; i++) {\n\t          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n\t              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n\t          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n\t            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n\t                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n\t            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n\t              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n\t                  w = sqrt(w0 + dx * dx);\n\t              /* eslint-disable max-depth */\n\t              if (w > 1 && w < -1) {\n\t                continue;\n\t              }\n\t              //hermite filter\n\t              weight = 2 * w * w * w - 3 * w * w + 1;\n\t              if (weight > 0) {\n\t                dx = 4 * (xx + yy * oW);\n\t                //alpha\n\t                gxA += weight * data[dx + 3];\n\t                weightsAlpha += weight;\n\t                //colors\n\t                if (data[dx + 3] < 255) {\n\t                  weight = weight * data[dx + 3] / 250;\n\t                }\n\t                gxR += weight * data[dx];\n\t                gxG += weight * data[dx + 1];\n\t                gxB += weight * data[dx + 2];\n\t                weights += weight;\n\t              }\n\t              /* eslint-enable max-depth */\n\t            }\n\t          }\n\t          data2[x2] = gxR / weights;\n\t          data2[x2 + 1] = gxG / weights;\n\t          data2[x2 + 2] = gxB / weights;\n\t          data2[x2 + 3] = gxA / weightsAlpha;\n\t        }\n\t      }\n\t      return img2;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return {\n\t        type: this.type,\n\t        scaleX: this.scaleX,\n\t        scaleY: this.scaleY,\n\t        resizeType: this.resizeType,\n\t        lanczosLobes: this.lanczosLobes\n\t      };\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n\t   */\n\t  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Color Matrix filter class\n\t   * @class fabric.Image.filters.ColorMatrix\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n\t   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n\t   * @example <caption>Kodachrome filter</caption>\n\t   * var filter = new fabric.Image.filters.ColorMatrix({\n\t   *  matrix: [\n\t       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n\t       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n\t       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n\t       0, 0, 0, 1, 0\n\t      ]\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'ColorMatrix',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n\t     */\n\t    initialize: function( options ) {\n\t      options || ( options = {} );\n\t      this.matrix = options.matrix || [\n\t        1, 0, 0, 0, 0,\n\t        0, 1, 0, 0, 0,\n\t        0, 0, 1, 0, 0,\n\t        0, 0, 0, 1, 0\n\t      ];\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function( canvasEl ) {\n\t      var context = canvasEl.getContext( '2d' ),\n\t          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n\t          data = imageData.data,\n\t          iLen = data.length,\n\t          i,\n\t          r,\n\t          g,\n\t          b,\n\t          a,\n\t          m = this.matrix;\n\t\n\t      for ( i = 0; i < iLen; i += 4 ) {\n\t        r = data[ i ];\n\t        g = data[ i + 1 ];\n\t        b = data[ i + 2 ];\n\t        a = data[ i + 3 ];\n\t\n\t        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n\t        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n\t        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n\t        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n\t      }\n\t\n\t      context.putImageData( imageData, 0, 0 );\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        type: this.type,\n\t        matrix: this.matrix\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] function to invoke after filter creation\n\t   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n\t   */\n\t  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Contrast filter class\n\t   * @class fabric.Image.filters.Contrast\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Contrast({\n\t   *   contrast: 40\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Contrast',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Contrast.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.contrast=0] Value to contrast the image up (-255...255)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.contrast = options.contrast || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          contrastF = 259 * (this.contrast + 255) / (255 * (259 - this.contrast));\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        data[i] = contrastF * (data[i] - 128) + 128;\n\t        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n\t        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        contrast: this.contrast\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n\t   */\n\t  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric  = global.fabric || (global.fabric = { }),\n\t      extend = fabric.util.object.extend,\n\t      filters = fabric.Image.filters,\n\t      createClass = fabric.util.createClass;\n\t\n\t  /**\n\t   * Saturate filter class\n\t   * @class fabric.Image.filters.Saturate\n\t   * @memberOf fabric.Image.filters\n\t   * @extends fabric.Image.filters.BaseFilter\n\t   * @see {@link fabric.Image.filters.Saturate#initialize} for constructor definition\n\t   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n\t   * @example\n\t   * var filter = new fabric.Image.filters.Saturate({\n\t   *   saturate: 100\n\t   * });\n\t   * object.filters.push(filter);\n\t   * object.applyFilters(canvas.renderAll.bind(canvas));\n\t   */\n\t  filters.Saturate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturate.prototype */ {\n\t\n\t    /**\n\t     * Filter type\n\t     * @param {String} type\n\t     * @default\n\t     */\n\t    type: 'Saturate',\n\t\n\t    /**\n\t     * Constructor\n\t     * @memberOf fabric.Image.filters.Saturate.prototype\n\t     * @param {Object} [options] Options object\n\t     * @param {Number} [options.saturate=0] Value to saturate the image (-100...100)\n\t     */\n\t    initialize: function(options) {\n\t      options = options || { };\n\t      this.saturate = options.saturate || 0;\n\t    },\n\t\n\t    /**\n\t     * Applies filter to canvas element\n\t     * @param {Object} canvasEl Canvas element to apply filter to\n\t     */\n\t    applyTo: function(canvasEl) {\n\t      var context = canvasEl.getContext('2d'),\n\t          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\t          data = imageData.data,\n\t          max, adjust = -this.saturate * 0.01;\n\t\n\t      for (var i = 0, len = data.length; i < len; i += 4) {\n\t        max = Math.max(data[i], data[i + 1], data[i + 2]);\n\t        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n\t        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n\t        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n\t      }\n\t\n\t      context.putImageData(imageData, 0, 0);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function() {\n\t      return extend(this.callSuper('toObject'), {\n\t        saturate: this.saturate\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns filter instance from an object representation\n\t   * @static\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] to be invoked after filter creation\n\t   * @return {fabric.Image.filters.Saturate} Instance of fabric.Image.filters.Saturate\n\t   */\n\t  fabric.Image.filters.Saturate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = { }),\n\t      toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\t      MIN_TEXT_WIDTH = 2;\n\t\n\t  if (fabric.Text) {\n\t    fabric.warn('fabric.Text is already defined');\n\t    return;\n\t  }\n\t\n\t  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n\t  stateProperties.push(\n\t    'fontFamily',\n\t    'fontWeight',\n\t    'fontSize',\n\t    'text',\n\t    'textDecoration',\n\t    'textAlign',\n\t    'fontStyle',\n\t    'lineHeight',\n\t    'textBackgroundColor',\n\t    'charSpacing'\n\t  );\n\t\n\t  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n\t  cacheProperties.push(\n\t    'fontFamily',\n\t    'fontWeight',\n\t    'fontSize',\n\t    'text',\n\t    'textDecoration',\n\t    'textAlign',\n\t    'fontStyle',\n\t    'lineHeight',\n\t    'textBackgroundColor',\n\t    'charSpacing',\n\t    'styles'\n\t  );\n\t  /**\n\t   * Text class\n\t   * @class fabric.Text\n\t   * @extends fabric.Object\n\t   * @return {fabric.Text} thisArg\n\t   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n\t   * @see {@link fabric.Text#initialize} for constructor definition\n\t   */\n\t  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\t\n\t    /**\n\t     * Properties which when set cause object to change dimensions\n\t     * @type Object\n\t     * @private\n\t     */\n\t    _dimensionAffectingProps: [\n\t      'fontSize',\n\t      'fontWeight',\n\t      'fontFamily',\n\t      'fontStyle',\n\t      'lineHeight',\n\t      'text',\n\t      'charSpacing',\n\t      'textAlign'\n\t    ],\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reNewline: /\\r?\\n/,\n\t\n\t    /**\n\t     * Use this regular expression to filter for whitespace that is not a new line.\n\t     * Mostly used when text is 'justify' aligned.\n\t     * @private\n\t     */\n\t    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\t\n\t    /**\n\t     * Retrieves object's fontSize\n\t     * @method getFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font size (in pixels)\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontSize\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontSize\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} fontSize Font size (in pixels)\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontWeight\n\t     * @method getFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {(String|Number)} Font weight\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontWeight\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontWeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {(Number|String)} fontWeight Font weight\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontFamily\n\t     * @method getFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font family\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontFamily\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontFamily\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontFamily Font family\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's text\n\t     * @method getText\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} text\n\t     */\n\t\n\t    /**\n\t     * Sets object's text\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setText\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} text Text\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textDecoration\n\t     * @method getTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text decoration\n\t     */\n\t\n\t    /**\n\t     * Sets object's textDecoration\n\t     * @method setTextDecoration\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textDecoration Text decoration\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's fontStyle\n\t     * @method getFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Font style\n\t     */\n\t\n\t    /**\n\t     * Sets object's fontStyle\n\t     * Does not update the object .width and .height,\n\t     * call ._initDimensions() to update the values.\n\t     * @method setFontStyle\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} fontStyle Font style\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's lineHeight\n\t     * @method getLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {Number} Line height\n\t     */\n\t\n\t    /**\n\t     * Sets object's lineHeight\n\t     * @method setLineHeight\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {Number} lineHeight Line height\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textAlign\n\t     * @method getTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text alignment\n\t     */\n\t\n\t    /**\n\t     * Sets object's textAlign\n\t     * @method setTextAlign\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textAlign Text alignment\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Retrieves object's textBackgroundColor\n\t     * @method getTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @return {String} Text background color\n\t     */\n\t\n\t    /**\n\t     * Sets object's textBackgroundColor\n\t     * @method setTextBackgroundColor\n\t     * @memberOf fabric.Text.prototype\n\t     * @param {String} textBackgroundColor Text background color\n\t     * @return {fabric.Text}\n\t     * @chainable\n\t     */\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type:                 'text',\n\t\n\t    /**\n\t     * Font size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    fontSize:             40,\n\t\n\t    /**\n\t     * Font weight (e.g. bold, normal, 400, 600, 800)\n\t     * @type {(Number|String)}\n\t     * @default\n\t     */\n\t    fontWeight:           'normal',\n\t\n\t    /**\n\t     * Font family\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontFamily:           'Times New Roman',\n\t\n\t    /**\n\t     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textDecoration:       '',\n\t\n\t    /**\n\t     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    textAlign:            'left',\n\t\n\t    /**\n\t     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n\t     * @type String\n\t     * @default\n\t     */\n\t    fontStyle:            '',\n\t\n\t    /**\n\t     * Line height\n\t     * @type Number\n\t     * @default\n\t     */\n\t    lineHeight:           1.16,\n\t\n\t    /**\n\t     * Background color of text lines\n\t     * @type String\n\t     * @default\n\t     */\n\t    textBackgroundColor:  '',\n\t\n\t    /**\n\t     * List of properties to consider when checking if\n\t     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n\t     * as well as for history (undo/redo) purposes\n\t     * @type Array\n\t     */\n\t    stateProperties:      stateProperties,\n\t\n\t    /**\n\t     * List of properties to consider when checking if cache needs refresh\n\t     * @type Array\n\t     */\n\t    cacheProperties:      cacheProperties,\n\t\n\t    /**\n\t     * When defined, an object is rendered via stroke and this property specifies its color.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n\t     * @type String\n\t     * @default\n\t     */\n\t    stroke:               null,\n\t\n\t    /**\n\t     * Shadow object representing shadow of this shape.\n\t     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n\t     * @type fabric.Shadow\n\t     * @default\n\t     */\n\t    shadow:               null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _fontSizeFraction: 0.25,\n\t\n\t    /**\n\t     * Text Line proportion to font Size (in pixels)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    _fontSizeMult:             1.13,\n\t\n\t    /**\n\t     * additional space between characters\n\t     * expressed in thousands of em unit\n\t     * @type Number\n\t     * @default\n\t     */\n\t    charSpacing:             0,\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Text} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      options = options || { };\n\t      this.text = text;\n\t      this.__skipDimension = true;\n\t      this.callSuper('initialize', options);\n\t      this.__skipDimension = false;\n\t      this._initDimensions();\n\t      this.setupState({ propertySet: '_dimensionAffectingProps' });\n\t    },\n\t\n\t    /**\n\t     * Initialize text dimensions. Render all text on given context\n\t     * or on a offscreen canvas to get the text width with measureText.\n\t     * Updates this.width and this.height with the proper values.\n\t     * Does not return dimensions.\n\t     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t      }\n\t      this._textLines = this._splitTextIntoLines();\n\t      this._clearCache();\n\t      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n\t      this.height = this._getTextHeight(ctx);\n\t    },\n\t\n\t    /**\n\t     * Returns string representation of an instance\n\t     * @return {String} String representation of text object\n\t     */\n\t    toString: function() {\n\t      return '#<fabric.Text (' + this.complexity() +\n\t        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n\t    },\n\t\n\t    /**\n\t     * Return the dimension and the zoom level needed to create a cache canvas\n\t     * big enough to host the object to be cached.\n\t     * @private\n\t     * @return {Object}.width width of canvas\n\t     * @return {Object}.height height of canvas\n\t     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n\t     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n\t     */\n\t    _getCacheCanvasDimensions: function() {\n\t      var dim = this.callSuper('_getCacheCanvasDimensions');\n\t      var fontSize = Math.ceil(this.fontSize) * 2;\n\t      dim.width += fontSize;\n\t      dim.height += fontSize;\n\t      return dim;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this._setTextStyles(ctx);\n\t      if (this.group && this.group.type === 'path-group') {\n\t        ctx.translate(this.left, this.top);\n\t      }\n\t      this._renderTextLinesBackground(ctx);\n\t      this._renderText(ctx);\n\t      this._renderTextDecoration(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderText: function(ctx) {\n\t      this._renderTextFill(ctx);\n\t      this._renderTextStroke(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _setTextStyles: function(ctx) {\n\t      ctx.textBaseline = 'alphabetic';\n\t      ctx.font = this._getFontDeclaration();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Height of fabric.Text object\n\t     */\n\t    _getTextHeight: function() {\n\t      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @return {Number} Maximum width of fabric.Text object\n\t     */\n\t    _getTextWidth: function(ctx) {\n\t      var maxWidth = this._getLineWidth(ctx, 0);\n\t\n\t      for (var i = 1, len = this._textLines.length; i < len; i++) {\n\t        var currentLineWidth = this._getLineWidth(ctx, i);\n\t        if (currentLineWidth > maxWidth) {\n\t          maxWidth = currentLineWidth;\n\t        }\n\t      }\n\t      return maxWidth;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} chars Chars to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     */\n\t    _renderChars: function(method, ctx, chars, left, top) {\n\t      // remove Text word from method var\n\t      var shortM = method.slice(0, -4), char, width;\n\t      if (this[shortM].toLive) {\n\t        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n\t            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n\t        ctx.save();\n\t        ctx.translate(offsetX, offsetY);\n\t        left -= offsetX;\n\t        top -= offsetY;\n\t      }\n\t      if (this.charSpacing !== 0) {\n\t        var additionalSpace = this._getWidthOfCharSpacing();\n\t        chars = chars.split('');\n\t        for (var i = 0, len = chars.length; i < len; i++) {\n\t          char = chars[i];\n\t          width = ctx.measureText(char).width + additionalSpace;\n\t          ctx[method](char, left, top);\n\t          left += width > 0 ? width : 0;\n\t        }\n\t      }\n\t      else {\n\t        ctx[method](chars, left, top);\n\t      }\n\t      this[shortM].toLive && ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Text to render\n\t     * @param {Number} left Left position of text\n\t     * @param {Number} top Top position of text\n\t     * @param {Number} lineIndex Index of a line in a text\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // lift the line by quarter of fontSize\n\t      top -= this.fontSize * this._fontSizeFraction;\n\t\n\t      // short-circuit\n\t      var lineWidth = this._getLineWidth(ctx, lineIndex);\n\t      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n\t        this._renderChars(method, ctx, line, left, top, lineIndex);\n\t        return;\n\t      }\n\t\n\t      // stretch the line\n\t      var words = line.split(/\\s+/),\n\t          charOffset = 0,\n\t          wordsWidth = this._getWidthOfWords(ctx, words.join(' '), lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          leftOffset = 0, word;\n\t\n\t      for (var i = 0, len = words.length; i < len; i++) {\n\t        while (line[charOffset] === ' ' && charOffset < line.length) {\n\t          charOffset++;\n\t        }\n\t        word = words[i];\n\t        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n\t        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n\t        charOffset += word.length;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} word\n\t     */\n\t    _getWidthOfWords: function (ctx, word) {\n\t      var width = ctx.measureText(word).width, charCount, additionalSpace;\n\t      if (this.charSpacing !== 0) {\n\t        charCount = word.split('').length;\n\t        additionalSpace = charCount * this._getWidthOfCharSpacing();\n\t        width += additionalSpace;\n\t      }\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Left offset\n\t     */\n\t    _getLeftOffset: function() {\n\t      return -this.width / 2;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} Top offset\n\t     */\n\t    _getTopOffset: function() {\n\t      return -this.height / 2;\n\t    },\n\t\n\t    /**\n\t     * Returns true because text has no style\n\t     */\n\t    isEmptyStyles: function() {\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n\t     */\n\t    _renderTextCommon: function(ctx, method) {\n\t\n\t      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\t\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        var heightOfLine = this._getHeightOfLine(ctx, i),\n\t            maxHeight = heightOfLine / this.lineHeight,\n\t            lineWidth = this._getLineWidth(ctx, i),\n\t            leftOffset = this._getLineLeftOffset(lineWidth);\n\t        this._renderTextLine(\n\t          method,\n\t          ctx,\n\t          this._textLines[i],\n\t          left + leftOffset,\n\t          top + lineHeights + maxHeight,\n\t          i\n\t        );\n\t        lineHeights += heightOfLine;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextFill: function(ctx) {\n\t      if (!this.fill && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      this._renderTextCommon(ctx, 'fillText');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextStroke: function(ctx) {\n\t      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n\t        return;\n\t      }\n\t\n\t      if (this.shadow && !this.shadow.affectStroke) {\n\t        this._removeShadow(ctx);\n\t      }\n\t\n\t      ctx.save();\n\t      this._setLineDash(ctx, this.strokeDashArray);\n\t      ctx.beginPath();\n\t      this._renderTextCommon(ctx, 'strokeText');\n\t      ctx.closePath();\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line\n\t     */\n\t    _getHeightOfLine: function() {\n\t      return this._getHeightOfSingleLine() * this.lineHeight;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Number} height of line without lineHeight\n\t     */\n\t    _getHeightOfSingleLine: function() {\n\t      return this.fontSize * this._fontSizeMult;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      if (!this.textBackgroundColor) {\n\t        return;\n\t      }\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset, originalFill = ctx.fillStyle;\n\t\n\t      ctx.fillStyle = this.textBackgroundColor;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        if (lineWidth > 0) {\n\t          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t          ctx.fillRect(\n\t            this._getLeftOffset() + lineLeftOffset,\n\t            this._getTopOffset() + lineTopOffset,\n\t            lineWidth,\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t      ctx.fillStyle = originalFill;\n\t      // if there is text background color no\n\t      // other shadows should be casted\n\t      this._removeShadow(ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} lineWidth Width of text line\n\t     * @return {Number} Line left offset\n\t     */\n\t    _getLineLeftOffset: function(lineWidth) {\n\t      if (this.textAlign === 'center') {\n\t        return (this.width - lineWidth) / 2;\n\t      }\n\t      if (this.textAlign === 'right') {\n\t        return this.width - lineWidth;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.__lineWidths = [];\n\t      this.__lineHeights = [];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _shouldClearDimensionCache: function() {\n\t      var shouldClear = this._forceClearCache;\n\t      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n\t      if (shouldClear) {\n\t        this.saveState({ propertySet: '_dimensionAffectingProps' });\n\t        this.dirty = true;\n\t      }\n\t      return shouldClear;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _getLineWidth: function(ctx, lineIndex) {\n\t      if (this.__lineWidths[lineIndex]) {\n\t        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n\t      }\n\t\n\t      var width, wordCount, line = this._textLines[lineIndex];\n\t\n\t      if (line === '') {\n\t        width = 0;\n\t      }\n\t      else {\n\t        width = this._measureLine(ctx, lineIndex);\n\t      }\n\t      this.__lineWidths[lineIndex] = width;\n\t\n\t      if (width && this.textAlign === 'justify') {\n\t        wordCount = line.split(/\\s+/);\n\t        if (wordCount.length > 1) {\n\t          this.__lineWidths[lineIndex] = -1;\n\t        }\n\t      }\n\t      return width;\n\t    },\n\t\n\t    _getWidthOfCharSpacing: function() {\n\t      if (this.charSpacing !== 0) {\n\t        return this.fontSize * this.charSpacing / 1000;\n\t      }\n\t      return 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      var line = this._textLines[lineIndex],\n\t          width = ctx.measureText(line).width,\n\t          additionalSpace = 0, charCount, finalWidth;\n\t      if (this.charSpacing !== 0) {\n\t        charCount = line.split('').length;\n\t        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n\t      }\n\t      finalWidth = width + additionalSpace;\n\t      return finalWidth > 0 ? finalWidth : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (!this.textDecoration) {\n\t        return;\n\t      }\n\t      var halfOfVerticalBox = this.height / 2,\n\t          _this = this, offsets = [];\n\t\n\t      /** @ignore */\n\t      function renderLinesAtOffset(offsets) {\n\t        var i, lineHeight = 0, len, j, oLen, lineWidth,\n\t            lineLeftOffset, heightOfLine;\n\t\n\t        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\t\n\t          lineWidth = _this._getLineWidth(ctx, i);\n\t          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n\t          heightOfLine = _this._getHeightOfLine(ctx, i);\n\t\n\t          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n\t            ctx.fillRect(\n\t              _this._getLeftOffset() + lineLeftOffset,\n\t              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n\t              lineWidth,\n\t              _this.fontSize / 15);\n\t          }\n\t          lineHeight += heightOfLine;\n\t        }\n\t      }\n\t\n\t      if (this.textDecoration.indexOf('underline') > -1) {\n\t        offsets.push(0.85); // 1 - 3/16\n\t      }\n\t      if (this.textDecoration.indexOf('line-through') > -1) {\n\t        offsets.push(0.43);\n\t      }\n\t      if (this.textDecoration.indexOf('overline') > -1) {\n\t        offsets.push(-0.12);\n\t      }\n\t      if (offsets.length > 0) {\n\t        renderLinesAtOffset(offsets);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * return font declaration string for canvas context\n\t     * @returns {String} font declaration formatted for canvas context.\n\t     */\n\t    _getFontDeclaration: function() {\n\t      return [\n\t        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n\t        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n\t        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n\t        this.fontSize + 'px',\n\t        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n\t      ].join(' ');\n\t    },\n\t\n\t    /**\n\t     * Renders text instance on a specified context\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      // do not render if object is not visible\n\t      if (!this.visible) {\n\t        return;\n\t      }\n\t      if (this._shouldClearDimensionCache()) {\n\t        this._setTextStyles(ctx);\n\t        this._initDimensions(ctx);\n\t      }\n\t      this.callSuper('render', ctx, noTransform);\n\t    },\n\t\n\t    /**\n\t     * Returns the text as an array of lines.\n\t     * @returns {Array} Lines in the text\n\t     */\n\t    _splitTextIntoLines: function() {\n\t      return this.text.split(this._reNewline);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} Object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      var additionalProperties = [\n\t        'text',\n\t        'fontSize',\n\t        'fontWeight',\n\t        'fontFamily',\n\t        'fontStyle',\n\t        'lineHeight',\n\t        'textDecoration',\n\t        'textAlign',\n\t        'textBackgroundColor',\n\t        'charSpacing'\n\t      ].concat(propertiesToInclude);\n\t      return this.callSuper('toObject', additionalProperties);\n\t    },\n\t\n\t    /* _TO_SVG_START_ */\n\t    /**\n\t     * Returns SVG representation of an instance\n\t     * @param {Function} [reviver] Method for further parsing of svg representation.\n\t     * @return {String} svg representation of an instance\n\t     */\n\t    toSVG: function(reviver) {\n\t      if (!this.ctx) {\n\t        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n\t      }\n\t      var markup = this._createBaseSVGMarkup(),\n\t          offsets = this._getSVGLeftTopOffsets(this.ctx),\n\t          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\t      this._wrapSVGTextAndBg(markup, textAndBg);\n\t\n\t      return reviver ? reviver(markup.join('')) : markup.join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLeftTopOffsets: function(ctx) {\n\t      var lineTop = this._getHeightOfLine(ctx, 0),\n\t          textLeft = -this.width / 2,\n\t          textTop = 0;\n\t\n\t      return {\n\t        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n\t        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n\t        lineTop: lineTop\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _wrapSVGTextAndBg: function(markup, textAndBg) {\n\t      var noShadow = true, filter = this.getSvgFilter(),\n\t          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\t\n\t      markup.push(\n\t        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n\t          style, '>\\n',\n\t          textAndBg.textBgRects.join(''),\n\t          '\\t\\t<text ',\n\t            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n\t            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n\t            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n\t            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n\t            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n\t            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n\t            textAndBg.textSpans.join(''),\n\t          '\\t\\t</text>\\n',\n\t        '\\t</g>\\n'\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Number} textTopOffset Text top offset\n\t     * @param {Number} textLeftOffset Text left offset\n\t     * @return {Object}\n\t     */\n\t    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n\t      var textSpans = [],\n\t          textBgRects = [],\n\t          height = 0;\n\t      // bounding-box background\n\t      this._setSVGBg(textBgRects);\n\t\n\t      // text and text-background\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        if (this.textBackgroundColor) {\n\t          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n\t        }\n\t        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n\t        height += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      return {\n\t        textSpans: textSpans,\n\t        textBgRects: textBgRects\n\t      };\n\t    },\n\t\n\t    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n\t      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n\t        - textTopOffset + height - this.height / 2;\n\t      if (this.textAlign === 'justify') {\n\t        // i call from here to do not intefere with IText\n\t        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n\t        return;\n\t      }\n\t      textSpans.push(\n\t        '\\t\\t\\t<tspan x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n\t          'y=\"',\n\t          toFixed(yPos, NUM_FRACTION_DIGITS),\n\t          '\" ',\n\t          // doing this on <tspan> elements since setting opacity\n\t          // on containing <text> one doesn't work in Illustrator\n\t          this._getFillAttributes(this.fill), '>',\n\t          fabric.util.string.escapeXml(this._textLines[i]),\n\t        '</tspan>\\n'\n\t      );\n\t    },\n\t\n\t    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n\t      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\t\n\t      this._setTextStyles(ctx);\n\t\n\t      var line = this._textLines[i],\n\t          words = line.split(/\\s+/),\n\t          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = words.length - 1,\n\t          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n\t          word, attributes = this._getFillAttributes(this.fill),\n\t          len;\n\t\n\t      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\t\n\t      for (i = 0, len = words.length; i < len; i++) {\n\t        word = words[i];\n\t        textSpans.push(\n\t          '\\t\\t\\t<tspan x=\"',\n\t            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n\t            'y=\"',\n\t            toFixed(yPos, NUM_FRACTION_DIGITS),\n\t            '\" ',\n\t            // doing this on <tspan> elements since setting opacity\n\t            // on containing <text> one doesn't work in Illustrator\n\t            attributes, '>',\n\t            fabric.util.string.escapeXml(word),\n\t          '</tspan>\\n'\n\t        );\n\t        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n\t      }\n\t    },\n\t\n\t    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n\t      textBgRects.push(\n\t        '\\t\\t<rect ',\n\t          this._getFillAttributes(this.textBackgroundColor),\n\t          ' x=\"',\n\t          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n\t          '\" y=\"',\n\t          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n\t          '\" width=\"',\n\t          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n\t          '\" height=\"',\n\t          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n');\n\t    },\n\t\n\t    _setSVGBg: function(textBgRects) {\n\t      if (this.backgroundColor) {\n\t        textBgRects.push(\n\t          '\\t\\t<rect ',\n\t            this._getFillAttributes(this.backgroundColor),\n\t            ' x=\"',\n\t            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n\t            '\" y=\"',\n\t            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n\t            '\" width=\"',\n\t            toFixed(this.width, NUM_FRACTION_DIGITS),\n\t            '\" height=\"',\n\t            toFixed(this.height, NUM_FRACTION_DIGITS),\n\t          '\"></rect>\\n');\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n\t     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n\t     *\n\t     * @private\n\t     * @param {*} value\n\t     * @return {String}\n\t     */\n\t    _getFillAttributes: function(value) {\n\t      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n\t      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n\t        return 'fill=\"' + value + '\"';\n\t      }\n\t      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n\t    },\n\t    /* _TO_SVG_END_ */\n\t\n\t    /**\n\t     * Sets specified property to a specified value\n\t     * @param {String} key\n\t     * @param {*} value\n\t     * @return {fabric.Text} thisArg\n\t     * @chainable\n\t     */\n\t    _set: function(key, value) {\n\t      this.callSuper('_set', key, value);\n\t\n\t      if (this._dimensionAffectingProps.indexOf(key) > -1) {\n\t        this._initDimensions();\n\t        this.setCoords();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns complexity of an instance\n\t     * @return {Number} complexity\n\t     */\n\t    complexity: function() {\n\t      return 1;\n\t    }\n\t  });\n\t\n\t  /* _FROM_SVG_START_ */\n\t  /**\n\t   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n\t   */\n\t  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n\t    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\t\n\t  /**\n\t   * Default SVG font size\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   */\n\t  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {SVGElement} element Element to parse\n\t   * @param {Object} [options] Options object\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromElement = function(element, options) {\n\t    if (!element) {\n\t      return null;\n\t    }\n\t\n\t    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n\t    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\t\n\t    options.top = options.top || 0;\n\t    options.left = options.left || 0;\n\t    if ('dx' in parsedAttributes) {\n\t      options.left += parsedAttributes.dx;\n\t    }\n\t    if ('dy' in parsedAttributes) {\n\t      options.top += parsedAttributes.dy;\n\t    }\n\t    if (!('fontSize' in options)) {\n\t      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\t    }\n\t\n\t    if (!options.originX) {\n\t      options.originX = 'left';\n\t    }\n\t\n\t    var textContent = '';\n\t\n\t    // The XML is not properly parsed in IE9 so a workaround to get\n\t    // textContent is through firstChild.data. Another workaround would be\n\t    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n\t    if (!('textContent' in element)) {\n\t      if ('firstChild' in element && element.firstChild !== null) {\n\t        if ('data' in element.firstChild && element.firstChild.data !== null) {\n\t          textContent = element.firstChild.data;\n\t        }\n\t      }\n\t    }\n\t    else {\n\t      textContent = element.textContent;\n\t    }\n\t\n\t    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\t\n\t    var text = new fabric.Text(textContent, options),\n\t        textHeightScaleFactor = text.getHeight() / text.height,\n\t        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n\t        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n\t        textHeight = text.getHeight() + scaledDiff,\n\t        offX = 0;\n\t    /*\n\t      Adjust positioning:\n\t        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n\t        top/left properties in Fabric correspond to center point of text bounding box\n\t    */\n\t    if (text.originX === 'left') {\n\t      offX = text.getWidth() / 2;\n\t    }\n\t    if (text.originX === 'right') {\n\t      offX = -text.getWidth() / 2;\n\t    }\n\t    text.set({\n\t      left: text.getLeft() + offX,\n\t      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n\t    });\n\t\n\t    return text;\n\t  };\n\t  /* _FROM_SVG_END_ */\n\t\n\t  /**\n\t   * Returns fabric.Text instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Text\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Text} Instance of fabric.Text\n\t   */\n\t  fabric.Text.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Text', object, callback, forceAsync, 'text');\n\t  };\n\t\n\t  fabric.util.createAccessors(fabric.Text);\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  /**\n\t   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n\t   * prefix when observing canvas.\n\t   * @class fabric.IText\n\t   * @extends fabric.Text\n\t   * @mixes fabric.Observable\n\t   *\n\t   * @fires changed\n\t   * @fires selection:changed\n\t   * @fires editing:entered\n\t   * @fires editing:exited\n\t   *\n\t   * @return {fabric.IText} thisArg\n\t   * @see {@link fabric.IText#initialize} for constructor definition\n\t   *\n\t   * <p>Supported key combinations:</p>\n\t   * <pre>\n\t   *   Move cursor:                    left, right, up, down\n\t   *   Select character:               shift + left, shift + right\n\t   *   Select text vertically:         shift + up, shift + down\n\t   *   Move cursor by word:            alt + left, alt + right\n\t   *   Select words:                   shift + alt + left, shift + alt + right\n\t   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n\t   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n\t   *   Jump to start/end of text:      cmd + up, cmd + down\n\t   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n\t   *   Delete character:               backspace\n\t   *   Delete word:                    alt + backspace\n\t   *   Delete line:                    cmd + backspace\n\t   *   Forward delete:                 delete\n\t   *   Copy text:                      ctrl/cmd + c\n\t   *   Paste text:                     ctrl/cmd + v\n\t   *   Cut text:                       ctrl/cmd + x\n\t   *   Select entire text:             ctrl/cmd + a\n\t   *   Quit editing                    tab or esc\n\t   * </pre>\n\t   *\n\t   * <p>Supported mouse/touch combination</p>\n\t   * <pre>\n\t   *   Position cursor:                click/touch\n\t   *   Create selection:               click/touch & drag\n\t   *   Create selection:               click & shift + click\n\t   *   Select word:                    double click\n\t   *   Select line:                    triple click\n\t   * </pre>\n\t   */\n\t  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'i-text',\n\t\n\t    /**\n\t     * Index where text selection starts (or where cursor is when there is no selection)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionStart: 0,\n\t\n\t    /**\n\t     * Index where text selection ends\n\t     * @type Number\n\t     * @default\n\t     */\n\t    selectionEnd: 0,\n\t\n\t    /**\n\t     * Color of text selection\n\t     * @type String\n\t     * @default\n\t     */\n\t    selectionColor: 'rgba(17,119,255,0.3)',\n\t\n\t    /**\n\t     * Indicates whether text is in editing mode\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    isEditing: false,\n\t\n\t    /**\n\t     * Indicates whether a text can be edited\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    editable: true,\n\t\n\t    /**\n\t     * Border color of text object while it's in editing mode\n\t     * @type String\n\t     * @default\n\t     */\n\t    editingBorderColor: 'rgba(102,153,255,0.25)',\n\t\n\t    /**\n\t     * Width of cursor (in px)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorWidth: 2,\n\t\n\t    /**\n\t     * Color of default cursor (when not overwritten by character style)\n\t     * @type String\n\t     * @default\n\t     */\n\t    cursorColor: '#333',\n\t\n\t    /**\n\t     * Delay between cursor blink (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDelay: 1000,\n\t\n\t    /**\n\t     * Duration of cursor fadein (in ms)\n\t     * @type Number\n\t     * @default\n\t     */\n\t    cursorDuration: 600,\n\t\n\t    /**\n\t     * Object containing character styles\n\t     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n\t     * @type Object\n\t     * @default\n\t     */\n\t    styles: null,\n\t\n\t    /**\n\t     * Indicates whether internal text char widths can be cached\n\t     * @type Boolean\n\t     * @default\n\t     */\n\t    caching: true,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _reSpace: /\\s|\\n/,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _currentCursorOpacity: 0,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _selectionDirection: null,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _abortCursorAnimation: false,\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    __widthOfSpace: [],\n\t\n\t    /**\n\t     * Constructor\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.IText} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t      this.styles = options ? (options.styles || { }) : { };\n\t      this.callSuper('initialize', text, options);\n\t      this.initBehavior();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _clearCache: function() {\n\t      this.callSuper('_clearCache');\n\t      this.__widthOfSpace = [];\n\t    },\n\t\n\t    /**\n\t     * Returns true if object has no styling\n\t     */\n\t    isEmptyStyles: function() {\n\t      if (!this.styles) {\n\t        return true;\n\t      }\n\t      var obj = this.styles;\n\t\n\t      for (var p1 in obj) {\n\t        for (var p2 in obj[p1]) {\n\t          // eslint-disable-next-line no-unused-vars\n\t          for (var p3 in obj[p1][p2]) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    },\n\t\n\t    /**\n\t     * Sets selection start (left boundary of a selection)\n\t     * @param {Number} index Index to set selection start to\n\t     */\n\t    setSelectionStart: function(index) {\n\t      index = Math.max(index, 0);\n\t      this._updateAndFire('selectionStart', index);\n\t    },\n\t\n\t    /**\n\t     * Sets selection end (right boundary of a selection)\n\t     * @param {Number} index Index to set selection end to\n\t     */\n\t    setSelectionEnd: function(index) {\n\t      index = Math.min(index, this.text.length);\n\t      this._updateAndFire('selectionEnd', index);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} property 'selectionStart' or 'selectionEnd'\n\t     * @param {Number} index new position of property\n\t     */\n\t    _updateAndFire: function(property, index) {\n\t      if (this[property] !== index) {\n\t        this._fireSelectionChanged();\n\t        this[property] = index;\n\t      }\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Fires the even of selection changed\n\t     * @private\n\t     */\n\t    _fireSelectionChanged: function() {\n\t      this.fire('selection:changed');\n\t      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n\t    },\n\t\n\t    /**\n\t     * Gets style of a current selection/cursor (at the start position)\n\t     * @param {Number} [startIndex] Start index to get styles at\n\t     * @param {Number} [endIndex] End index to get styles at\n\t     * @return {Object} styles Style object at a specified (or current) index\n\t     */\n\t    getSelectionStyles: function(startIndex, endIndex) {\n\t\n\t      if (arguments.length === 2) {\n\t        var styles = [];\n\t        for (var i = startIndex; i < endIndex; i++) {\n\t          styles.push(this.getSelectionStyles(i));\n\t        }\n\t        return styles;\n\t      }\n\t\n\t      var loc = this.get2DCursorLocation(startIndex),\n\t          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\t\n\t      return style || {};\n\t    },\n\t\n\t    /**\n\t     * Sets style of a current selection\n\t     * @param {Object} [styles] Styles object\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    setSelectionStyles: function(styles) {\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        this._extendStyles(this.selectionStart, styles);\n\t      }\n\t      else {\n\t        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n\t          this._extendStyles(i, styles);\n\t        }\n\t      }\n\t      /* not included in _extendStyles to avoid clearing cache more than once */\n\t      this._forceClearCache = true;\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _extendStyles: function(index, styles) {\n\t      var loc = this.get2DCursorLocation(index);\n\t\n\t      if (!this._getLineStyle(loc.lineIndex)) {\n\t        this._setLineStyle(loc.lineIndex, {});\n\t      }\n\t\n\t      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n\t        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n\t      }\n\t\n\t      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n\t    },\n\t\n\t    /**\n\t     * Initialize text dimensions. Render all text on given context\n\t     * or on a offscreen canvas to get the text width with measureText.\n\t     * Updates this.width and this.height with the proper values.\n\t     * Does not return dimensions.\n\t     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n\t     * @private\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (!ctx) {\n\t        this.clearContextTop();\n\t      }\n\t      this.callSuper('_initDimensions', ctx);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Boolean} noTransform\n\t     */\n\t    render: function(ctx, noTransform) {\n\t      this.clearContextTop();\n\t      this.callSuper('render', ctx, noTransform);\n\t      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n\t      // the correct position but not at every cursor animation.\n\t      this.cursorOffsetCache = { };\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _render: function(ctx) {\n\t      this.callSuper('_render', ctx);\n\t      this.ctx = ctx;\n\t    },\n\t\n\t    /**\n\t     * Prepare and clean the contextTop\n\t     */\n\t    clearContextTop: function() {\n\t      if (!this.active || !this.isEditing) {\n\t        return;\n\t      }\n\t      if (this.canvas && this.canvas.contextTop) {\n\t        var ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t        this._clearTextArea(ctx);\n\t        ctx.restore();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Renders cursor or selection (depending on what exists)\n\t     */\n\t    renderCursorOrSelection: function() {\n\t      if (!this.active || !this.isEditing) {\n\t        return;\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries, ctx;\n\t      if (this.canvas && this.canvas.contextTop) {\n\t        ctx = this.canvas.contextTop;\n\t        ctx.save();\n\t        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n\t        this.transform(ctx);\n\t        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\t        this._clearTextArea(ctx);\n\t      }\n\t      else {\n\t        ctx = this.ctx;\n\t        ctx.save();\n\t      }\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        boundaries = this._getCursorBoundaries(chars, 'cursor');\n\t        this.renderCursor(boundaries, ctx);\n\t      }\n\t      else {\n\t        boundaries = this._getCursorBoundaries(chars, 'selection');\n\t        this.renderSelection(chars, boundaries, ctx);\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    _clearTextArea: function(ctx) {\n\t      // we add 4 pixel, to be sure to do not leave any pixel out\n\t      var width = this.width + 4, height = this.height + 4;\n\t      ctx.clearRect(-width / 2, -height / 2, width, height);\n\t    },\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t      var len = this._textLines.length;\n\t      for (var i = 0; i < len; i++) {\n\t        if (selectionStart <= this._textLines[i].length) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart\n\t          };\n\t        }\n\t        selectionStart -= this._textLines[i].length + 1;\n\t      }\n\t      return {\n\t        lineIndex: i - 1,\n\t        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns complete style of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Object} Character style\n\t     */\n\t    getCurrentCharStyle: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t\n\t      return {\n\t        fontSize: style && style.fontSize || this.fontSize,\n\t        fill: style && style.fill || this.fill,\n\t        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n\t        textDecoration: style && style.textDecoration || this.textDecoration,\n\t        fontFamily: style && style.fontFamily || this.fontFamily,\n\t        fontWeight: style && style.fontWeight || this.fontWeight,\n\t        fontStyle: style && style.fontStyle || this.fontStyle,\n\t        stroke: style && style.stroke || this.stroke,\n\t        strokeWidth: style && style.strokeWidth || this.strokeWidth\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Returns fontSize of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {Number} Character font size\n\t     */\n\t    getCurrentCharFontSize: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * Returns color (fill) of char at the current cursor\n\t     * @param {Number} lineIndex Line index\n\t     * @param {Number} charIndex Char index\n\t     * @return {String} Character color (fill)\n\t     */\n\t    getCurrentCharColor: function(lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\t      return style && style.fill ? style.fill : this.cursorColor;\n\t    },\n\t\n\t    /**\n\t     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n\t     * @private\n\t     * @param {Array} chars Array of characters\n\t     * @param {String} typeOfBoundaries\n\t     */\n\t    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\t\n\t      // left/top are left/top of entire text box\n\t      // leftOffset/topOffset are offset from that left/top point of a text box\n\t\n\t      var left = Math.round(this._getLeftOffset()),\n\t          top = this._getTopOffset(),\n\t\n\t          offsets = this._getCursorBoundariesOffsets(\n\t                      chars, typeOfBoundaries);\n\t\n\t      return {\n\t        left: left,\n\t        top: top,\n\t        leftOffset: offsets.left + offsets.lineLeft,\n\t        topOffset: offsets.top\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n\t        return this.cursorOffsetCache;\n\t      }\n\t      var lineLeftOffset = 0,\n\t          lineIndex = 0,\n\t          charIndex = 0,\n\t          topOffset = 0,\n\t          leftOffset = 0,\n\t          boundaries;\n\t\n\t      for (var i = 0; i < this.selectionStart; i++) {\n\t        if (chars[i] === '\\n') {\n\t          leftOffset = 0;\n\t          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t          lineIndex++;\n\t          charIndex = 0;\n\t        }\n\t        else {\n\t          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n\t          charIndex++;\n\t        }\n\t\n\t        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n\t      }\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n\t          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n\t      }\n\t      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n\t        leftOffset -= this._getWidthOfCharSpacing();\n\t      }\n\t      boundaries = {\n\t        top: topOffset,\n\t        left: leftOffset > 0 ? leftOffset : 0,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t      this.cursorOffsetCache = boundaries;\n\t      return this.cursorOffsetCache;\n\t    },\n\t\n\t    /**\n\t     * Renders cursor\n\t     * @param {Object} boundaries\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderCursor: function(boundaries, ctx) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = (lineIndex === 0 && charIndex === 0)\n\t                    ? this._getLineLeftOffset(this._getLineWidth(ctx, lineIndex))\n\t                    : boundaries.leftOffset,\n\t          multiplier = this.scaleX * this.canvas.getZoom(),\n\t          cursorWidth = this.cursorWidth / multiplier;\n\t\n\t      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n\t      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\t\n\t      ctx.fillRect(\n\t        boundaries.left + leftOffset - cursorWidth / 2,\n\t        boundaries.top + boundaries.topOffset,\n\t        cursorWidth,\n\t        charHeight);\n\t    },\n\t\n\t    /**\n\t     * Renders text selection\n\t     * @param {Array} chars Array of characters\n\t     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n\t     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n\t     */\n\t    renderSelection: function(chars, boundaries, ctx) {\n\t\n\t      ctx.fillStyle = this.selectionColor;\n\t\n\t      var start = this.get2DCursorLocation(this.selectionStart),\n\t          end = this.get2DCursorLocation(this.selectionEnd),\n\t          startLine = start.lineIndex,\n\t          endLine = end.lineIndex;\n\t      for (var i = startLine; i <= endLine; i++) {\n\t        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n\t            lineHeight = this._getHeightOfLine(this.ctx, i),\n\t            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\t\n\t        if (i === startLine) {\n\t          for (var j = 0, len = line.length; j < len; j++) {\n\t            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n\t              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t            if (j < start.charIndex) {\n\t              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n\t            }\n\t          }\n\t          if (j === line.length) {\n\t            boxWidth -= this._getWidthOfCharSpacing();\n\t          }\n\t        }\n\t        else if (i > startLine && i < endLine) {\n\t          boxWidth += this._getLineWidth(ctx, i) || 5;\n\t        }\n\t        else if (i === endLine) {\n\t          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n\t            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n\t          }\n\t          if (end.charIndex === line.length) {\n\t            boxWidth -= this._getWidthOfCharSpacing();\n\t          }\n\t        }\n\t        realLineHeight = lineHeight;\n\t        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n\t          lineHeight /= this.lineHeight;\n\t        }\n\t        ctx.fillRect(\n\t          boundaries.left + lineOffset,\n\t          boundaries.top + boundaries.topOffset,\n\t          boxWidth > 0 ? boxWidth : 0,\n\t          lineHeight);\n\t\n\t        boundaries.topOffset += realLineHeight;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left\n\t     * @param {Number} top\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charOffset\n\t     */\n\t    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\t\n\t      if (this.isEmptyStyles()) {\n\t        return this._renderCharsFast(method, ctx, line, left, top);\n\t      }\n\t\n\t      charOffset = charOffset || 0;\n\t\n\t      // set proper line offset\n\t      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n\t          prevStyle,\n\t          thisStyle,\n\t          charsToRender = '';\n\t\n\t      ctx.save();\n\t      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n\t      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n\t        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n\t        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\t\n\t        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n\t          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n\t          charsToRender = '';\n\t          prevStyle = thisStyle;\n\t        }\n\t        charsToRender += line[i - charOffset];\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line Content of the line\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     */\n\t    _renderCharsFast: function(method, ctx, line, left, top) {\n\t\n\t      if (method === 'fillText' && this.fill) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n\t        this.callSuper('_renderChars', method, ctx, line, left, top);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} i\n\t     * @param {String} _char\n\t     * @param {Number} left Left coordinate\n\t     * @param {Number} top Top coordinate\n\t     * @param {Number} lineHeight Height of the line\n\t     */\n\t    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n\t      var charWidth, charHeight, shouldFill, shouldStroke,\n\t          decl = this._getStyleDeclaration(lineIndex, i),\n\t          offset, textDecoration, chars, additionalSpace, _charWidth;\n\t\n\t      if (decl) {\n\t        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n\t        shouldStroke = decl.stroke;\n\t        shouldFill = decl.fill;\n\t        textDecoration = decl.textDecoration;\n\t      }\n\t      else {\n\t        charHeight = this.fontSize;\n\t      }\n\t\n\t      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n\t      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\t\n\t      decl && ctx.save();\n\t\n\t      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n\t      textDecoration = textDecoration || this.textDecoration;\n\t\n\t      if (decl && decl.textBackgroundColor) {\n\t        this._removeShadow(ctx);\n\t      }\n\t      if (this.charSpacing !== 0) {\n\t        additionalSpace = this._getWidthOfCharSpacing();\n\t        chars = _char.split('');\n\t        charWidth = 0;\n\t        for (var j = 0, len = chars.length, char; j < len; j++) {\n\t          char = chars[j];\n\t          shouldFill && ctx.fillText(char, left + charWidth, top);\n\t          shouldStroke && ctx.strokeText(char, left + charWidth, top);\n\t          _charWidth = ctx.measureText(char).width + additionalSpace;\n\t          charWidth += _charWidth > 0 ? _charWidth : 0;\n\t        }\n\t      }\n\t      else {\n\t        shouldFill && ctx.fillText(_char, left, top);\n\t        shouldStroke && ctx.strokeText(_char, left, top);\n\t      }\n\t\n\t      if (textDecoration || textDecoration !== '') {\n\t        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n\t        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n\t      }\n\t\n\t      decl && ctx.restore();\n\t      ctx.translate(charWidth, 0);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} prevStyle\n\t     * @param {Object} thisStyle\n\t     */\n\t    _hasStyleChanged: function(prevStyle, thisStyle) {\n\t      return (prevStyle.fill !== thisStyle.fill ||\n\t              prevStyle.fontSize !== thisStyle.fontSize ||\n\t              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n\t              prevStyle.textDecoration !== thisStyle.textDecoration ||\n\t              prevStyle.fontFamily !== thisStyle.fontFamily ||\n\t              prevStyle.fontWeight !== thisStyle.fontWeight ||\n\t              prevStyle.fontStyle !== thisStyle.fontStyle ||\n\t              prevStyle.stroke !== thisStyle.stroke ||\n\t              prevStyle.strokeWidth !== thisStyle.strokeWidth\n\t      );\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\t\n\t      if (!textDecoration) {\n\t        return;\n\t      }\n\t\n\t      var decorationWeight = charHeight / 15,\n\t          positions = {\n\t            underline: top + charHeight / 10,\n\t            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n\t            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n\t          },\n\t          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\t\n\t      for (i = 0; i < decorations.length; i++) {\n\t        decoration = decorations[i];\n\t        if (textDecoration.indexOf(decoration) > -1) {\n\t          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} method\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     * @param {Number} left\n\t     * @param {Number} top\n\t     * @param {Number} lineIndex\n\t     */\n\t    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n\t      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n\t      // the adding 0.03 is just to align text with itext by overlap test\n\t      if (!this.isEmptyStyles()) {\n\t        top += this.fontSize * (this._fontSizeFraction + 0.03);\n\t      }\n\t      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextDecoration: function(ctx) {\n\t      if (this.isEmptyStyles()) {\n\t        return this.callSuper('_renderTextDecoration', ctx);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _renderTextLinesBackground: function(ctx) {\n\t      this.callSuper('_renderTextLinesBackground', ctx);\n\t\n\t      var lineTopOffset = 0, heightOfLine,\n\t          lineWidth, lineLeftOffset,\n\t          leftOffset = this._getLeftOffset(),\n\t          topOffset = this._getTopOffset(),\n\t          line, _char, style;\n\t      ctx.save();\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        heightOfLine = this._getHeightOfLine(ctx, i);\n\t        line = this._textLines[i];\n\t\n\t        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n\t          lineTopOffset += heightOfLine;\n\t          continue;\n\t        }\n\t\n\t        lineWidth = this._getLineWidth(ctx, i);\n\t        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\t\n\t        for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t          style = this._getStyleDeclaration(i, j);\n\t          if (!style || !style.textBackgroundColor) {\n\t            continue;\n\t          }\n\t          _char = line[j];\n\t\n\t          ctx.fillStyle = style.textBackgroundColor;\n\t\n\t          ctx.fillRect(\n\t            leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j),\n\t            topOffset + lineTopOffset,\n\t            this._getWidthOfChar(ctx, _char, i, j),\n\t            heightOfLine / this.lineHeight\n\t          );\n\t        }\n\t        lineTopOffset += heightOfLine;\n\t      }\n\t      ctx.restore();\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getCacheProp: function(_char, styleDeclaration) {\n\t      return _char +\n\t             styleDeclaration.fontSize +\n\t             styleDeclaration.fontWeight +\n\t             styleDeclaration.fontStyle;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {String} fontFamily name\n\t     * @return {Object} reference to cache\n\t     */\n\t    _getFontCache: function(fontFamily) {\n\t      if (!fabric.charWidthsCache[fontFamily]) {\n\t        fabric.charWidthsCache[fontFamily] = { };\n\t      }\n\t      return fabric.charWidthsCache[fontFamily];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} _char\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} [decl]\n\t     */\n\t    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n\t      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n\t          styleDeclaration = clone(charDecl),\n\t          width, cacheProp, charWidthsCache;\n\t\n\t      this._applyFontStyles(styleDeclaration);\n\t      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n\t      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\t\n\t      // short-circuit if no styles for this char\n\t      // global style from object is always applyed and handled by save and restore\n\t      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n\t        return charWidthsCache[cacheProp];\n\t      }\n\t\n\t      if (typeof styleDeclaration.shadow === 'string') {\n\t        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n\t      }\n\t\n\t      var fill = styleDeclaration.fill || this.fill;\n\t      ctx.fillStyle = fill.toLive\n\t        ? fill.toLive(ctx, this)\n\t        : fill;\n\t\n\t      if (styleDeclaration.stroke) {\n\t        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n\t          ? styleDeclaration.stroke.toLive(ctx, this)\n\t          : styleDeclaration.stroke;\n\t      }\n\t\n\t      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n\t      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\t\n\t      //if we want this._setShadow.call to work with styleDeclarion\n\t      //we have to add those references\n\t      if (styleDeclaration.shadow) {\n\t        styleDeclaration.scaleX = this.scaleX;\n\t        styleDeclaration.scaleY = this.scaleY;\n\t        styleDeclaration.canvas = this.canvas;\n\t        styleDeclaration.getObjectScaling = this.getObjectScaling;\n\t        this._setShadow.call(styleDeclaration, ctx);\n\t      }\n\t\n\t      if (!this.caching || !charWidthsCache[cacheProp]) {\n\t        width = ctx.measureText(_char).width;\n\t        this.caching && (charWidthsCache[cacheProp] = width);\n\t        return width;\n\t      }\n\t\n\t      return charWidthsCache[cacheProp];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {Object} styleDeclaration\n\t     */\n\t    _applyFontStyles: function(styleDeclaration) {\n\t      if (!styleDeclaration.fontFamily) {\n\t        styleDeclaration.fontFamily = this.fontFamily;\n\t      }\n\t      if (!styleDeclaration.fontSize) {\n\t        styleDeclaration.fontSize = this.fontSize;\n\t      }\n\t      if (!styleDeclaration.fontWeight) {\n\t        styleDeclaration.fontWeight = this.fontWeight;\n\t      }\n\t      if (!styleDeclaration.fontStyle) {\n\t        styleDeclaration.fontStyle = this.fontStyle;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (returnCloneOrEmpty) {\n\t        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n\t          ? clone(this.styles[lineIndex][charIndex])\n\t          : { };\n\t      }\n\t\n\t      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     *\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      return this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      this.styles[lineIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      delete this.styles[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n\t      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n\t        return this._getWidthOfSpace(ctx, lineIndex);\n\t      }\n\t      ctx.save();\n\t      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n\t      if (this.charSpacing !== 0) {\n\t        width += this._getWidthOfCharSpacing();\n\t      }\n\t      ctx.restore();\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n\t      var style = this._getStyleDeclaration(lineIndex, charIndex);\n\t      return style && style.fontSize ? style.fontSize : this.fontSize;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     */\n\t    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n\t      var width = 0, i, _char;\n\t      for (i = 0; i < charIndex; i++) {\n\t        _char = this._textLines[lineIndex][i];\n\t        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex line number\n\t     * @return {Number} Line width\n\t     */\n\t    _measureLine: function(ctx, lineIndex) {\n\t      this._isMeasuring = true;\n\t      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n\t      if (this.charSpacing !== 0) {\n\t        width -= this._getWidthOfCharSpacing();\n\t      }\n\t      this._isMeasuring = false;\n\t      return width > 0 ? width : 0;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {Number} lineIndex\n\t     */\n\t    _getWidthOfSpace: function (ctx, lineIndex) {\n\t      if (this.__widthOfSpace[lineIndex]) {\n\t        return this.__widthOfSpace[lineIndex];\n\t      }\n\t      var line = this._textLines[lineIndex],\n\t          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n\t          widthDiff = this.width - wordsWidth,\n\t          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n\t          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n\t      this.__widthOfSpace[lineIndex] = width;\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     * @param {String} line\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charOffset\n\t     */\n\t    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n\t      var width = 0;\n\t\n\t      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n\t        var _char = line[charIndex];\n\t\n\t        if (!_char.match(/\\s/)) {\n\t          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n\t        }\n\t      }\n\t\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getHeightOfLine: function(ctx, lineIndex) {\n\t      if (this.__lineHeights[lineIndex]) {\n\t        return this.__lineHeights[lineIndex];\n\t      }\n\t\n\t      var line = this._textLines[lineIndex],\n\t          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\t\n\t      for (var i = 1, len = line.length; i < len; i++) {\n\t        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n\t        if (currentCharHeight > maxHeight) {\n\t          maxHeight = currentCharHeight;\n\t        }\n\t      }\n\t      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n\t      return this.__lineHeights[lineIndex];\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @param {CanvasRenderingContext2D} ctx Context to render on\n\t     */\n\t    _getTextHeight: function(ctx) {\n\t      var lineHeight, height = 0;\n\t      for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t        lineHeight = this._getHeightOfLine(ctx, i);\n\t        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n\t      }\n\t      return height;\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n\t        styles: clone(this.styles, true)\n\t      });\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.IText instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.IText\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {function} [callback] invoked with new instance as argument\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.IText} instance of fabric.IText\n\t   */\n\t  fabric.IText.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('IText', object, callback, forceAsync, 'text');\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * Initializes all the interactive behavior of IText\n\t     */\n\t    initBehavior: function() {\n\t      this.initAddedHandler();\n\t      this.initRemovedHandler();\n\t      this.initCursorSelectionHandlers();\n\t      this.initDoubleClickSimulation();\n\t      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n\t    },\n\t\n\t    /**\n\t     * Initializes \"selected\" event handler\n\t     */\n\t    initSelectedHandler: function() {\n\t      this.on('selected', function() {\n\t\n\t        var _this = this;\n\t        setTimeout(function() {\n\t          _this.selected = true;\n\t        }, 100);\n\t      });\n\t    },\n\t\n\t    /**\n\t     * Initializes \"added\" event handler\n\t     */\n\t    initAddedHandler: function() {\n\t      var _this = this;\n\t      this.on('added', function() {\n\t        var canvas = _this.canvas;\n\t        if (canvas) {\n\t          if (!canvas._hasITextHandlers) {\n\t            canvas._hasITextHandlers = true;\n\t            _this._initCanvasHandlers(canvas);\n\t          }\n\t          canvas._iTextInstances = canvas._iTextInstances || [];\n\t          canvas._iTextInstances.push(_this);\n\t        }\n\t      });\n\t    },\n\t\n\t    initRemovedHandler: function() {\n\t      var _this = this;\n\t      this.on('removed', function() {\n\t        var canvas = _this.canvas;\n\t        if (canvas) {\n\t          canvas._iTextInstances = canvas._iTextInstances || [];\n\t          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n\t          if (canvas._iTextInstances.length === 0) {\n\t            canvas._hasITextHandlers = false;\n\t            _this._removeCanvasHandlers(canvas);\n\t          }\n\t        }\n\t      });\n\t    },\n\t\n\t    /**\n\t     * register canvas event to manage exiting on other instances\n\t     * @private\n\t     */\n\t    _initCanvasHandlers: function(canvas) {\n\t      canvas._canvasITextSelectionClearedHanlder = (function() {\n\t        fabric.IText.prototype.exitEditingOnOthers(canvas);\n\t      }).bind(this);\n\t      canvas._mouseUpITextHandler = (function() {\n\t        if (canvas._iTextInstances) {\n\t          canvas._iTextInstances.forEach(function(obj) {\n\t            obj.__isMousedown = false;\n\t          });\n\t        }\n\t      }).bind(this);\n\t      canvas.on('selection:cleared', canvas._canvasITextSelectionClearedHanlder);\n\t      canvas.on('object:selected', canvas._canvasITextSelectionClearedHanlder);\n\t      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n\t    },\n\t\n\t    /**\n\t     * remove canvas event to manage exiting on other instances\n\t     * @private\n\t     */\n\t    _removeCanvasHandlers: function(canvas) {\n\t      canvas.off('selection:cleared', canvas._canvasITextSelectionClearedHanlder);\n\t      canvas.off('object:selected', canvas._canvasITextSelectionClearedHanlder);\n\t      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _tick: function() {\n\t      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\t\n\t      var tickState;\n\t\n\t      tickState = {\n\t        isAborted: false,\n\t        abort: function() {\n\t          this.isAborted = true;\n\t        },\n\t      };\n\t\n\t      obj.animate('_currentCursorOpacity', targetOpacity, {\n\t        duration: duration,\n\t        onComplete: function() {\n\t          if (!tickState.isAborted) {\n\t            obj[completeMethod]();\n\t          }\n\t        },\n\t        onChange: function() {\n\t          // we do not want to animate a selection, only cursor\n\t          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n\t            obj.renderCursorOrSelection();\n\t          }\n\t        },\n\t        abort: function() {\n\t          return tickState.isAborted;\n\t        }\n\t      });\n\t      return tickState;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _onTickComplete: function() {\n\t\n\t      var _this = this;\n\t\n\t      if (this._cursorTimeout1) {\n\t        clearTimeout(this._cursorTimeout1);\n\t      }\n\t      this._cursorTimeout1 = setTimeout(function() {\n\t        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n\t      }, 100);\n\t    },\n\t\n\t    /**\n\t     * Initializes delayed cursor\n\t     */\n\t    initDelayedCursor: function(restart) {\n\t      var _this = this,\n\t          delay = restart ? 0 : this.cursorDelay;\n\t\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this._cursorTimeout2 = setTimeout(function() {\n\t        _this._tick();\n\t      }, delay);\n\t    },\n\t\n\t    /**\n\t     * Aborts cursor animation and clears all timeouts\n\t     */\n\t    abortCursorAnimation: function() {\n\t      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n\t      this._currentTickState && this._currentTickState.abort();\n\t      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\t\n\t      clearTimeout(this._cursorTimeout1);\n\t      clearTimeout(this._cursorTimeout2);\n\t\n\t      this._currentCursorOpacity = 0;\n\t      // to clear just itext area we need to transform the context\n\t      // it may not be worth it\n\t      if (shouldClear) {\n\t        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n\t      }\n\t\n\t    },\n\t\n\t    /**\n\t     * Selects entire text\n\t     */\n\t    selectAll: function() {\n\t      this.selectionStart = 0;\n\t      this.selectionEnd = this.text.length;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Returns selected text\n\t     * @return {String}\n\t     */\n\t    getSelectedText: function() {\n\t      return this.text.slice(this.selectionStart, this.selectionEnd);\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current word according to current selection index\n\t     * @param {Number} startFrom Surrent selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      // remove space before cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index--;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current word according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findWordBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      // remove space after cursor first\n\t      if (this._reSpace.test(this.text.charAt(index))) {\n\t        while (this._reSpace.test(this.text.charAt(index))) {\n\t          offset++;\n\t          index++;\n\t        }\n\t      }\n\t      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing start of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryLeft: function(startFrom) {\n\t      var offset = 0, index = startFrom - 1;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n\t        offset++;\n\t        index--;\n\t      }\n\t\n\t      return startFrom - offset;\n\t    },\n\t\n\t    /**\n\t     * Find new selection index representing end of current line according to current selection index\n\t     * @param {Number} startFrom Current selection index\n\t     * @return {Number} New selection index\n\t     */\n\t    findLineBoundaryRight: function(startFrom) {\n\t      var offset = 0, index = startFrom;\n\t\n\t      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n\t        offset++;\n\t        index++;\n\t      }\n\t\n\t      return startFrom + offset;\n\t    },\n\t\n\t    /**\n\t     * Returns number of newlines in selected text\n\t     * @return {Number} Number of newlines in selected text\n\t     */\n\t    getNumNewLinesInSelectedText: function() {\n\t      var selectedText = this.getSelectedText(),\n\t          numNewLines  = 0;\n\t\n\t      for (var i = 0, len = selectedText.length; i < len; i++) {\n\t        if (selectedText[i] === '\\n') {\n\t          numNewLines++;\n\t        }\n\t      }\n\t      return numNewLines;\n\t    },\n\t\n\t    /**\n\t     * Finds index corresponding to beginning or end of a word\n\t     * @param {Number} selectionStart Index of a character\n\t     * @param {Number} direction 1 or -1\n\t     * @return {Number} Index of the beginning or end of a word\n\t     */\n\t    searchWordBoundary: function(selectionStart, direction) {\n\t      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n\t          _char     = this.text.charAt(index),\n\t          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\t\n\t      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n\t        index += direction;\n\t        _char = this.text.charAt(index);\n\t      }\n\t      if (reNonWord.test(_char) && _char !== '\\n') {\n\t        index += direction === 1 ? 0 : 1;\n\t      }\n\t      return index;\n\t    },\n\t\n\t    /**\n\t     * Selects a word based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectWord: function(selectionStart) {\n\t      selectionStart = selectionStart || this.selectionStart;\n\t      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n\t          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\t\n\t      this.selectionStart = newSelectionStart;\n\t      this.selectionEnd = newSelectionEnd;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t      this.renderCursorOrSelection();\n\t    },\n\t\n\t    /**\n\t     * Selects a line based on the index\n\t     * @param {Number} selectionStart Index of a character\n\t     */\n\t    selectLine: function(selectionStart) {\n\t      selectionStart = selectionStart || this.selectionStart;\n\t      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n\t          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\t\n\t      this.selectionStart = newSelectionStart;\n\t      this.selectionEnd = newSelectionEnd;\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    },\n\t\n\t    /**\n\t     * Enters editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    enterEditing: function(e) {\n\t      if (this.isEditing || !this.editable) {\n\t        return;\n\t      }\n\t\n\t      if (this.canvas) {\n\t        this.exitEditingOnOthers(this.canvas);\n\t      }\n\t\n\t      this.isEditing = true;\n\t\n\t      this.initHiddenTextarea(e);\n\t      this.hiddenTextarea.focus();\n\t      this._updateTextarea();\n\t      this._saveEditingProps();\n\t      this._setEditingProps();\n\t      this._textBeforeEdit = this.text;\n\t\n\t      this._tick();\n\t      this.fire('editing:entered');\n\t\n\t      if (!this.canvas) {\n\t        return this;\n\t      }\n\t      this.canvas.fire('text:editing:entered', { target: this });\n\t      this.initMouseMoveHandler();\n\t      this.canvas.renderAll();\n\t      return this;\n\t    },\n\t\n\t    exitEditingOnOthers: function(canvas) {\n\t      if (canvas._iTextInstances) {\n\t        canvas._iTextInstances.forEach(function(obj) {\n\t          obj.selected = false;\n\t          if (obj.isEditing) {\n\t            obj.exitEditing();\n\t          }\n\t        });\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Initializes \"mousemove\" event handler\n\t     */\n\t    initMouseMoveHandler: function() {\n\t      this.canvas.on('mouse:move', this.mouseMoveHandler);\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    mouseMoveHandler: function(options) {\n\t      if (!this.__isMousedown || !this.isEditing) {\n\t        return;\n\t      }\n\t\n\t      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n\t          currentStart = this.selectionStart,\n\t          currentEnd = this.selectionEnd;\n\t      if (newSelectionStart === this.__selectionStartOnMouseDown) {\n\t        return;\n\t      }\n\t      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n\t        this.selectionStart = this.__selectionStartOnMouseDown;\n\t        this.selectionEnd = newSelectionStart;\n\t      }\n\t      else {\n\t        this.selectionStart = newSelectionStart;\n\t        this.selectionEnd = this.__selectionStartOnMouseDown;\n\t      }\n\t      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n\t        this._fireSelectionChanged();\n\t        this._updateTextarea();\n\t        this.renderCursorOrSelection();\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setEditingProps: function() {\n\t      this.hoverCursor = 'text';\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n\t      }\n\t\n\t      this.borderColor = this.editingBorderColor;\n\t\n\t      this.hasControls = this.selectable = false;\n\t      this.lockMovementX = this.lockMovementY = true;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _updateTextarea: function() {\n\t      if (!this.hiddenTextarea || this.inCompositionMode) {\n\t        return;\n\t      }\n\t      this.cursorOffsetCache = { };\n\t      this.hiddenTextarea.value = this.text;\n\t      this.hiddenTextarea.selectionStart = this.selectionStart;\n\t      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n\t      if (this.selectionStart === this.selectionEnd) {\n\t        var style = this._calcTextareaPosition();\n\t        this.hiddenTextarea.style.left = style.left;\n\t        this.hiddenTextarea.style.top = style.top;\n\t        this.hiddenTextarea.style.fontSize = style.fontSize;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     * @return {Object} style contains style for hiddenTextarea\n\t     */\n\t    _calcTextareaPosition: function() {\n\t      if (!this.canvas) {\n\t        return { x: 1, y: 1 };\n\t      }\n\t      var chars = this.text.split(''),\n\t          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex = cursorLocation.lineIndex,\n\t          charIndex = cursorLocation.charIndex,\n\t          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n\t          leftOffset = (lineIndex === 0 && charIndex === 0)\n\t                    ? this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex))\n\t                    : boundaries.leftOffset,\n\t          m = this.calcTransformMatrix(),\n\t          p = {\n\t            x: boundaries.left + leftOffset,\n\t            y: boundaries.top + boundaries.topOffset + charHeight\n\t          },\n\t          upperCanvas = this.canvas.upperCanvasEl,\n\t          maxWidth = upperCanvas.width - charHeight,\n\t          maxHeight = upperCanvas.height - charHeight;\n\t\n\t      p = fabric.util.transformPoint(p, m);\n\t      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\t\n\t      if (p.x < 0) {\n\t        p.x = 0;\n\t      }\n\t      if (p.x > maxWidth) {\n\t        p.x = maxWidth;\n\t      }\n\t      if (p.y < 0) {\n\t        p.y = 0;\n\t      }\n\t      if (p.y > maxHeight) {\n\t        p.y = maxHeight;\n\t      }\n\t\n\t      // add canvas offset on document\n\t      p.x += this.canvas._offset.left;\n\t      p.y += this.canvas._offset.top;\n\t\n\t      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _saveEditingProps: function() {\n\t      this._savedProps = {\n\t        hasControls: this.hasControls,\n\t        borderColor: this.borderColor,\n\t        lockMovementX: this.lockMovementX,\n\t        lockMovementY: this.lockMovementY,\n\t        hoverCursor: this.hoverCursor,\n\t        defaultCursor: this.canvas && this.canvas.defaultCursor,\n\t        moveCursor: this.canvas && this.canvas.moveCursor\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _restoreEditingProps: function() {\n\t      if (!this._savedProps) {\n\t        return;\n\t      }\n\t\n\t      this.hoverCursor = this._savedProps.overCursor;\n\t      this.hasControls = this._savedProps.hasControls;\n\t      this.borderColor = this._savedProps.borderColor;\n\t      this.lockMovementX = this._savedProps.lockMovementX;\n\t      this.lockMovementY = this._savedProps.lockMovementY;\n\t\n\t      if (this.canvas) {\n\t        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n\t        this.canvas.moveCursor = this._savedProps.moveCursor;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Exits from editing state\n\t     * @return {fabric.IText} thisArg\n\t     * @chainable\n\t     */\n\t    exitEditing: function() {\n\t      var isTextChanged = (this._textBeforeEdit !== this.text);\n\t      this.selected = false;\n\t      this.isEditing = false;\n\t      this.selectable = true;\n\t\n\t      this.selectionEnd = this.selectionStart;\n\t      this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n\t      this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n\t      this.hiddenTextarea = null;\n\t\n\t      this.abortCursorAnimation();\n\t      this._restoreEditingProps();\n\t      this._currentCursorOpacity = 0;\n\t\n\t      this.fire('editing:exited');\n\t      isTextChanged && this.fire('modified');\n\t      if (this.canvas) {\n\t        this.canvas.off('mouse:move', this.mouseMoveHandler);\n\t        this.canvas.fire('text:editing:exited', { target: this });\n\t        isTextChanged && this.canvas.fire('object:modified', { target: this });\n\t      }\n\t\n\t      return this;\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this.styles) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[prop];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _removeCharsFromTo: function(start, end) {\n\t      while (end !== start) {\n\t        this._removeSingleCharAndStyle(start + 1);\n\t        end--;\n\t      }\n\t      this.selectionStart = start;\n\t      this.selectionEnd = start;\n\t    },\n\t\n\t    _removeSingleCharAndStyle: function(index) {\n\t      var isBeginningOfLine = this.text[index - 1] === '\\n',\n\t          indexStyle        = isBeginningOfLine ? index : index - 1;\n\t      this.removeStyleObject(isBeginningOfLine, indexStyle);\n\t      this.text = this.text.slice(0, index - 1) +\n\t        this.text.slice(index);\n\t\n\t      this._textLines = this._splitTextIntoLines();\n\t    },\n\t\n\t    /**\n\t     * Inserts characters where cursor is (replacing selection if one exists)\n\t     * @param {String} _chars Characters to insert\n\t     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n\t     */\n\t    insertChars: function(_chars, useCopiedStyle) {\n\t      var style;\n\t\n\t      if (this.selectionEnd - this.selectionStart > 1) {\n\t        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t      }\n\t      //short circuit for block paste\n\t      if (!useCopiedStyle && this.isEmptyStyles()) {\n\t        this.insertChar(_chars, false);\n\t        return;\n\t      }\n\t      for (var i = 0, len = _chars.length; i < len; i++) {\n\t        if (useCopiedStyle) {\n\t          style = fabric.util.object.clone(fabric.copiedTextStyle[i], true);\n\t        }\n\t        this.insertChar(_chars[i], i < len - 1, style);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts a character where cursor is\n\t     * @param {String} _char Characters to insert\n\t     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n\t     * @param {Object} styleObject Style to be inserted for the new char\n\t     */\n\t    insertChar: function(_char, skipUpdate, styleObject) {\n\t      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n\t      this.text = this.text.slice(0, this.selectionStart) +\n\t        _char + this.text.slice(this.selectionEnd);\n\t      this._textLines = this._splitTextIntoLines();\n\t      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n\t      this.selectionStart += _char.length;\n\t      this.selectionEnd = this.selectionStart;\n\t      if (skipUpdate) {\n\t        return;\n\t      }\n\t      this._updateTextarea();\n\t      this.setCoords();\n\t      this._fireSelectionChanged();\n\t      this.fire('changed');\n\t      this.canvas && this.canvas.fire('text:changed', { target: this });\n\t      this.canvas && this.canvas.renderAll();\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t\n\t      this.shiftLineStyles(lineIndex, +1);\n\t\n\t      if (!this.styles[lineIndex + 1]) {\n\t        this.styles[lineIndex + 1] = {};\n\t      }\n\t\n\t      var currentCharStyle = {},\n\t          newLineStyles    = {};\n\t\n\t      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n\t        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n\t      }\n\t\n\t      // if there's nothing after cursor,\n\t      // we clone current char style onto the next (otherwise empty) line\n\t      if (isEndOfLine) {\n\t        newLineStyles[0] = clone(currentCharStyle);\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      // otherwise we clone styles of all chars\n\t      // after cursor onto the next line, from the beginning\n\t      else {\n\t        for (var index in this.styles[lineIndex]) {\n\t          if (parseInt(index, 10) >= charIndex) {\n\t            newLineStyles[parseInt(index, 10) - charIndex] = this.styles[lineIndex][index];\n\t            // remove lines from the previous line since they're on a new line now\n\t            delete this.styles[lineIndex][index];\n\t          }\n\t        }\n\t        this.styles[lineIndex + 1] = newLineStyles;\n\t      }\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t\n\t      var currentLineStyles       = this.styles[lineIndex],\n\t          currentLineStylesCloned = clone(currentLineStyles);\n\t\n\t      if (charIndex === 0 && !style) {\n\t        charIndex = 1;\n\t      }\n\t\n\t      // shift all char styles by 1 forward\n\t      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\t      for (var index in currentLineStylesCloned) {\n\t        var numericIndex = parseInt(index, 10);\n\t\n\t        if (numericIndex >= charIndex) {\n\t          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\t\n\t          // only delete the style if there was nothing moved there\n\t          if (!currentLineStylesCloned[numericIndex - 1]) {\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t\n\t      this.styles[lineIndex][charIndex] =\n\t        style || clone(currentLineStyles[charIndex - 1]);\n\t      this._forceClearCache = true;\n\t    },\n\t\n\t    /**\n\t     * Inserts style object(s)\n\t     * @param {String} _chars Characters at the location where style is inserted\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     * @param {Object} [styleObject] Style to insert\n\t     */\n\t    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n\t      // removed shortcircuit over isEmptyStyles\n\t\n\t      var cursorLocation = this.get2DCursorLocation(),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        this._setLineStyle(lineIndex, {});\n\t      }\n\t\n\t      if (_chars === '\\n') {\n\t        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n\t      }\n\t      else {\n\t        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var clonedStyles = clone(this.styles);\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          lineIndex      = cursorLocation.lineIndex,\n\t          charIndex      = cursorLocation.charIndex;\n\t\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    },\n\t\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      return this._textLines[lIndex - 1];\n\t    },\n\t\n\t    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\t\n\t      if (isBeginningOfLine) {\n\t        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n\t            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\t\n\t        if (!this.styles[lineIndex - 1]) {\n\t          this.styles[lineIndex - 1] = {};\n\t        }\n\t        for (charIndex in this.styles[lineIndex]) {\n\t          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n\t            = this.styles[lineIndex][charIndex];\n\t        }\n\t        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n\t      }\n\t      else {\n\t        var currentLineStyles = this.styles[lineIndex];\n\t\n\t        if (currentLineStyles) {\n\t          delete currentLineStyles[charIndex];\n\t        }\n\t        var currentLineStylesCloned = clone(currentLineStyles);\n\t        // shift all styles by 1 backwards\n\t        for (var i in currentLineStylesCloned) {\n\t          var numericIndex = parseInt(i, 10);\n\t          if (numericIndex >= charIndex && numericIndex !== 0) {\n\t            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n\t            delete currentLineStyles[numericIndex];\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts new line\n\t     */\n\t    insertNewline: function() {\n\t      this.insertChars('\\n');\n\t    },\n\t\n\t    /**\n\t     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n\t     * mimic the key - mouse navigation when shift is pressed.\n\t     */\n\t    setSelectionStartEndWithShift: function(start, end, newSelection) {\n\t      if (newSelection <= start) {\n\t        if (end === start) {\n\t          this._selectionDirection = 'left';\n\t        }\n\t        else if (this._selectionDirection === 'right') {\n\t          this._selectionDirection = 'left';\n\t          this.selectionEnd = start;\n\t        }\n\t        this.selectionStart = newSelection;\n\t      }\n\t      else if (newSelection > start && newSelection < end) {\n\t        if (this._selectionDirection === 'right') {\n\t          this.selectionEnd = newSelection;\n\t        }\n\t        else {\n\t          this.selectionStart = newSelection;\n\t        }\n\t      }\n\t      else {\n\t        // newSelection is > selection start and end\n\t        if (end === start) {\n\t          this._selectionDirection = 'right';\n\t        }\n\t        else if (this._selectionDirection === 'left') {\n\t          this._selectionDirection = 'right';\n\t          this.selectionStart = end;\n\t        }\n\t        this.selectionEnd = newSelection;\n\t      }\n\t    },\n\t\n\t    setSelectionInBoundaries: function() {\n\t      var length = this.text.length;\n\t      if (this.selectionStart > length) {\n\t        this.selectionStart = length;\n\t      }\n\t      else if (this.selectionStart < 0) {\n\t        this.selectionStart = 0;\n\t      }\n\t      if (this.selectionEnd > length) {\n\t        this.selectionEnd = length;\n\t      }\n\t      else if (this.selectionEnd < 0) {\n\t        this.selectionEnd = 0;\n\t      }\n\t    }\n\t  });\n\t})();\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t  /**\n\t   * Initializes \"dbclick\" event handler\n\t   */\n\t  initDoubleClickSimulation: function() {\n\t\n\t    // for double click\n\t    this.__lastClickTime = +new Date();\n\t\n\t    // for triple click\n\t    this.__lastLastClickTime = +new Date();\n\t\n\t    this.__lastPointer = { };\n\t\n\t    this.on('mousedown', this.onMouseDown.bind(this));\n\t  },\n\t\n\t  onMouseDown: function(options) {\n\t\n\t    this.__newClickTime = +new Date();\n\t    var newPointer = this.canvas.getPointer(options.e);\n\t\n\t    if (this.isTripleClick(newPointer)) {\n\t      this.fire('tripleclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t    else if (this.isDoubleClick(newPointer)) {\n\t      this.fire('dblclick', options);\n\t      this._stopEvent(options.e);\n\t    }\n\t\n\t    this.__lastLastClickTime = this.__lastClickTime;\n\t    this.__lastClickTime = this.__newClickTime;\n\t    this.__lastPointer = newPointer;\n\t    this.__lastIsEditing = this.isEditing;\n\t    this.__lastSelected = this.selected;\n\t  },\n\t\n\t  isDoubleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n\t  },\n\t\n\t  isTripleClick: function(newPointer) {\n\t    return this.__newClickTime - this.__lastClickTime < 500 &&\n\t        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n\t        this.__lastPointer.x === newPointer.x &&\n\t        this.__lastPointer.y === newPointer.y;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _stopEvent: function(e) {\n\t    e.preventDefault && e.preventDefault();\n\t    e.stopPropagation && e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Initializes event handlers related to cursor or selection\n\t   */\n\t  initCursorSelectionHandlers: function() {\n\t    this.initSelectedHandler();\n\t    this.initMousedownHandler();\n\t    this.initMouseupHandler();\n\t    this.initClicks();\n\t  },\n\t\n\t  /**\n\t   * Initializes double and triple click event handlers\n\t   */\n\t  initClicks: function() {\n\t    this.on('dblclick', function(options) {\n\t      this.selectWord(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t    this.on('tripleclick', function(options) {\n\t      this.selectLine(this.getSelectionStartFromPointer(options.e));\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mousedown\" event handler\n\t   */\n\t  initMousedownHandler: function() {\n\t    this.on('mousedown', function(options) {\n\t      if (!this.editable) {\n\t        return;\n\t      }\n\t      var pointer = this.canvas.getPointer(options.e);\n\t\n\t      this.__mousedownX = pointer.x;\n\t      this.__mousedownY = pointer.y;\n\t      this.__isMousedown = true;\n\t\n\t      if (this.selected) {\n\t        this.setCursorByClick(options.e);\n\t      }\n\t\n\t      if (this.isEditing) {\n\t        this.__selectionStartOnMouseDown = this.selectionStart;\n\t        if (this.selectionStart === this.selectionEnd) {\n\t          this.abortCursorAnimation();\n\t        }\n\t        this.renderCursorOrSelection();\n\t      }\n\t    });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _isObjectMoved: function(e) {\n\t    var pointer = this.canvas.getPointer(e);\n\t\n\t    return this.__mousedownX !== pointer.x ||\n\t           this.__mousedownY !== pointer.y;\n\t  },\n\t\n\t  /**\n\t   * Initializes \"mouseup\" event handler\n\t   */\n\t  initMouseupHandler: function() {\n\t    this.on('mouseup', function(options) {\n\t      this.__isMousedown = false;\n\t      if (!this.editable || this._isObjectMoved(options.e)) {\n\t        return;\n\t      }\n\t\n\t      if (this.__lastSelected && !this.__corner) {\n\t        this.enterEditing(options.e);\n\t        if (this.selectionStart === this.selectionEnd) {\n\t          this.initDelayedCursor(true);\n\t        }\n\t        else {\n\t          this.renderCursorOrSelection();\n\t        }\n\t      }\n\t      this.selected = true;\n\t    });\n\t  },\n\t\n\t  /**\n\t   * Changes cursor location in a text depending on passed pointer (x/y) object\n\t   * @param {Event} e Event object\n\t   */\n\t  setCursorByClick: function(e) {\n\t    var newSelection = this.getSelectionStartFromPointer(e),\n\t        start = this.selectionStart, end = this.selectionEnd;\n\t    if (e.shiftKey) {\n\t      this.setSelectionStartEndWithShift(start, end, newSelection);\n\t    }\n\t    else {\n\t      this.selectionStart = newSelection;\n\t      this.selectionEnd = newSelection;\n\t    }\n\t    this._fireSelectionChanged();\n\t    this._updateTextarea();\n\t  },\n\t\n\t  /**\n\t   * Returns index of a character corresponding to where an object was clicked\n\t   * @param {Event} e Event object\n\t   * @return {Number} Index of a character\n\t   */\n\t  getSelectionStartFromPointer: function(e) {\n\t    var mouseOffset = this.getLocalPointer(e),\n\t        prevWidth = 0,\n\t        width = 0,\n\t        height = 0,\n\t        charIndex = 0,\n\t        newSelectionStart,\n\t        line;\n\t\n\t    for (var i = 0, len = this._textLines.length; i < len; i++) {\n\t      line = this._textLines[i];\n\t      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\t\n\t      var widthOfLine = this._getLineWidth(this.ctx, i),\n\t          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\t\n\t      width = lineLeftOffset * this.scaleX;\n\t\n\t      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\t\n\t        prevWidth = width;\n\t\n\t        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n\t                 this.scaleX;\n\t\n\t        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n\t          charIndex++;\n\t          continue;\n\t        }\n\t\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i, jlen);\n\t      }\n\t\n\t      if (mouseOffset.y < height) {\n\t        //this happens just on end of lines.\n\t        return this._getNewSelectionStartFromOffset(\n\t          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n\t      }\n\t    }\n\t\n\t    // clicked somewhere after all chars, so set at the end\n\t    if (typeof newSelectionStart === 'undefined') {\n\t      return this.text.length;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\t\n\t    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n\t        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n\t        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n\t        newSelectionStart = index + offset;\n\t\n\t    // if object is horizontally flipped, mirror cursor location from the end\n\t    if (this.flipX) {\n\t      newSelectionStart = jlen - newSelectionStart;\n\t    }\n\t\n\t    if (newSelectionStart > this.text.length) {\n\t      newSelectionStart = this.text.length;\n\t    }\n\t\n\t    return newSelectionStart;\n\t  }\n\t});\n\t\n\t\n\tfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t  /**\n\t   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n\t   */\n\t  initHiddenTextarea: function() {\n\t    this.hiddenTextarea = fabric.document.createElement('textarea');\n\t    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n\t    var style = this._calcTextareaPosition();\n\t    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + ';'\n\t                                        + ' opacity: 0; width: 0px; height: 0px; z-index: -999;';\n\t    fabric.document.body.appendChild(this.hiddenTextarea);\n\t\n\t    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n\t    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\t\n\t    if (!this._clickHandlerInitialized && this.canvas) {\n\t      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n\t      this._clickHandlerInitialized = true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _keysMap: {\n\t    8:  'removeChars',\n\t    9:  'exitEditing',\n\t    27: 'exitEditing',\n\t    13: 'insertNewline',\n\t    33: 'moveCursorUp',\n\t    34: 'moveCursorDown',\n\t    35: 'moveCursorRight',\n\t    36: 'moveCursorLeft',\n\t    37: 'moveCursorLeft',\n\t    38: 'moveCursorUp',\n\t    39: 'moveCursorRight',\n\t    40: 'moveCursorDown',\n\t    46: 'forwardDelete'\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _ctrlKeysMapUp: {\n\t    67: 'copy',\n\t    88: 'cut'\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _ctrlKeysMapDown: {\n\t    65: 'selectAll'\n\t  },\n\t\n\t  onClick: function() {\n\t    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n\t    this.hiddenTextarea && this.hiddenTextarea.focus();\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyDown: function(e) {\n\t    if (!this.isEditing) {\n\t      return;\n\t    }\n\t    if (e.keyCode in this._keysMap) {\n\t      this[this._keysMap[e.keyCode]](e);\n\t    }\n\t    else if ((e.keyCode in this._ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n\t      this[this._ctrlKeysMapDown[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    if (e.keyCode >= 33 && e.keyCode <= 40) {\n\t      // if i press an arrow key just update selection\n\t      this.clearContextTop();\n\t      this.renderCursorOrSelection();\n\t    }\n\t    else {\n\t      this.canvas && this.canvas.renderAll();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Handles keyup event\n\t   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n\t   * if a copy/cut event fired, keyup is dismissed\n\t   * @param {Event} e Event object\n\t   */\n\t  onKeyUp: function(e) {\n\t    if (!this.isEditing || this._copyDone) {\n\t      this._copyDone = false;\n\t      return;\n\t    }\n\t    if ((e.keyCode in this._ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n\t      this[this._ctrlKeysMapUp[e.keyCode]](e);\n\t    }\n\t    else {\n\t      return;\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this.canvas && this.canvas.renderAll();\n\t  },\n\t\n\t  /**\n\t   * Handles onInput event\n\t   * @param {Event} e Event object\n\t   */\n\t  onInput: function(e) {\n\t    if (!this.isEditing || this.inCompositionMode) {\n\t      return;\n\t    }\n\t    var offset = this.selectionStart || 0,\n\t        offsetEnd = this.selectionEnd || 0,\n\t        textLength = this.text.length,\n\t        newTextLength = this.hiddenTextarea.value.length,\n\t        diff, charsToInsert, start;\n\t    if (newTextLength > textLength) {\n\t      //we added some character\n\t      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n\t      diff = newTextLength - textLength;\n\t      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n\t    }\n\t    else {\n\t      //we selected a portion of text and then input something else.\n\t      //Internet explorer does not trigger this else\n\t      diff = newTextLength - textLength + offsetEnd - offset;\n\t      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n\t    }\n\t    this.insertChars(charsToInsert);\n\t    e.stopPropagation();\n\t  },\n\t\n\t  /**\n\t   * Composition start\n\t   */\n\t  onCompositionStart: function() {\n\t    this.inCompositionMode = true;\n\t    this.prevCompositionLength = 0;\n\t    this.compositionStart = this.selectionStart;\n\t  },\n\t\n\t  /**\n\t   * Composition end\n\t   */\n\t  onCompositionEnd: function() {\n\t    this.inCompositionMode = false;\n\t  },\n\t\n\t  /**\n\t   * Composition update\n\t   */\n\t  onCompositionUpdate: function(e) {\n\t    var data = e.data;\n\t    this.selectionStart = this.compositionStart;\n\t    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n\t      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n\t    this.insertChars(data, false);\n\t    this.prevCompositionLength = data.length;\n\t  },\n\t\n\t  /**\n\t   * Forward delete\n\t   */\n\t  forwardDelete: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      if (this.selectionStart === this.text.length) {\n\t        return;\n\t      }\n\t      this.moveCursorRight(e);\n\t    }\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * Copies selected text\n\t   * @param {Event} e Event object\n\t   */\n\t  copy: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      //do not cut-copy if no selection\n\t      return;\n\t    }\n\t    var selectedText = this.getSelectedText(),\n\t        clipboardData = this._getClipboardData(e);\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      clipboardData.setData('text', selectedText);\n\t    }\n\t\n\t    fabric.copiedText = selectedText;\n\t    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd);\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t    this._copyDone = true;\n\t  },\n\t\n\t  /**\n\t   * Pastes text\n\t   * @param {Event} e Event object\n\t   */\n\t  paste: function(e) {\n\t    var copiedText = null,\n\t        clipboardData = this._getClipboardData(e),\n\t        useCopiedStyle = true;\n\t\n\t    // Check for backward compatibility with old browsers\n\t    if (clipboardData) {\n\t      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n\t      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n\t        useCopiedStyle = false;\n\t      }\n\t    }\n\t    else {\n\t      copiedText = fabric.copiedText;\n\t    }\n\t\n\t    if (copiedText) {\n\t      this.insertChars(copiedText, useCopiedStyle);\n\t    }\n\t    e.stopImmediatePropagation();\n\t    e.preventDefault();\n\t  },\n\t\n\t  /**\n\t   * Cuts text\n\t   * @param {Event} e Event object\n\t   */\n\t  cut: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      return;\n\t    }\n\t\n\t    this.copy(e);\n\t    this.removeChars(e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   * @return {Object} Clipboard data object\n\t   */\n\t  _getClipboardData: function(e) {\n\t    return (e && e.clipboardData) || fabric.window.clipboardData;\n\t  },\n\t\n\t  /**\n\t   * Finds the width in pixels before the cursor on the same line\n\t   * @private\n\t   * @param {Number} lineIndex\n\t   * @param {Number} charIndex\n\t   * @return {Number} widthBeforeCursor width before cursor\n\t   */\n\t  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n\t    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n\t        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n\t        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\t\n\t    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n\t      _char = textBeforeCursor[i];\n\t      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n\t    }\n\t    return widthBeforeCursor;\n\t  },\n\t\n\t  /**\n\t   * Gets start offset of a selection\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getDownCursorOffset: function(e, isRight) {\n\t    var selectionProp = this._getSelectionForOffset(e, isRight),\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    // if on last line, down cursor goes to end of line\n\t    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n\t      // move to the end of a text\n\t      return this.text.length - selectionProp;\n\t    }\n\t    var charIndex = cursorLocation.charIndex,\n\t        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n\t        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n\t        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\t\n\t    return textAfterCursor.length + indexOnOtherLine + 2;\n\t  },\n\t\n\t  /**\n\t   * private\n\t   * Helps finding if the offset should be counted from Start or End\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  _getSelectionForOffset: function(e, isRight) {\n\t    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n\t      return this.selectionEnd;\n\t    }\n\t    else {\n\t      return this.selectionStart;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {Event} e Event object\n\t   * @param {Boolean} isRight\n\t   * @return {Number}\n\t   */\n\t  getUpCursorOffset: function(e, isRight) {\n\t    var selectionProp = this._getSelectionForOffset(e, isRight),\n\t        cursorLocation = this.get2DCursorLocation(selectionProp),\n\t        lineIndex = cursorLocation.lineIndex;\n\t    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n\t      // if on first line, up cursor goes to start of line\n\t      return -selectionProp;\n\t    }\n\t    var charIndex = cursorLocation.charIndex,\n\t        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n\t        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n\t        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n\t    // return a negative offset\n\t    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n\t  },\n\t\n\t  /**\n\t   * find for a given width it founds the matching character.\n\t   * @private\n\t   */\n\t  _getIndexOnLine: function(lineIndex, width) {\n\t\n\t    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n\t        textOnLine = this._textLines[lineIndex],\n\t        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n\t        widthOfCharsOnLine = lineLeftOffset,\n\t        indexOnLine = 0,\n\t        foundMatch;\n\t\n\t    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\t\n\t      var _char = textOnLine[j],\n\t          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\t\n\t      widthOfCharsOnLine += widthOfChar;\n\t\n\t      if (widthOfCharsOnLine > width) {\n\t\n\t        foundMatch = true;\n\t\n\t        var leftEdge = widthOfCharsOnLine - widthOfChar,\n\t            rightEdge = widthOfCharsOnLine,\n\t            offsetFromLeftEdge = Math.abs(leftEdge - width),\n\t            offsetFromRightEdge = Math.abs(rightEdge - width);\n\t\n\t        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\t\n\t        break;\n\t      }\n\t    }\n\t\n\t    // reached end\n\t    if (!foundMatch) {\n\t      indexOnLine = textOnLine.length - 1;\n\t    }\n\t\n\t    return indexOnLine;\n\t  },\n\t\n\t\n\t  /**\n\t   * Moves cursor down\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorDown: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t    this._moveCursorUpOrDown('Down', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorUp: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t    this._moveCursorUpOrDown('Up', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up or down, fires the events\n\t   * @param {String} direction 'Up' or 'Down'\n\t   * @param {Event} e Event object\n\t   */\n\t  _moveCursorUpOrDown: function(direction, e) {\n\t    // getUpCursorOffset\n\t    // getDownCursorOffset\n\t    var action = 'get' + direction + 'CursorOffset',\n\t        offset = this[action](e, this._selectionDirection === 'right');\n\t    if (e.shiftKey) {\n\t      this.moveCursorWithShift(offset);\n\t    }\n\t    else {\n\t      this.moveCursorWithoutShift(offset);\n\t    }\n\t    if (offset !== 0) {\n\t      this.setSelectionInBoundaries();\n\t      this.abortCursorAnimation();\n\t      this._currentCursorOpacity = 1;\n\t      this.initDelayedCursor();\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor with shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorWithShift: function(offset) {\n\t    var newSelection = this._selectionDirection === 'left'\n\t    ? this.selectionStart + offset\n\t    : this.selectionEnd + offset;\n\t    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n\t    return offset !== 0;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor up without shift\n\t   * @param {Number} offset\n\t   */\n\t  moveCursorWithoutShift: function(offset) {\n\t    if (offset < 0) {\n\t      this.selectionStart += offset;\n\t      this.selectionEnd = this.selectionStart;\n\t    }\n\t    else {\n\t      this.selectionEnd += offset;\n\t      this.selectionStart = this.selectionEnd;\n\t    }\n\t    return offset !== 0;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorLeft: function(e) {\n\t    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n\t      return;\n\t    }\n\t    this._moveCursorLeftOrRight('Left', e);\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @return {Boolean} true if a change happened\n\t   */\n\t  _move: function(e, prop, direction) {\n\t    var newValue;\n\t    if (e.altKey) {\n\t      newValue = this['findWordBoundary' + direction](this[prop]);\n\t    }\n\t    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n\t      newValue = this['findLineBoundary' + direction](this[prop]);\n\t    }\n\t    else {\n\t      this[prop] += direction === 'Left' ? -1 : 1;\n\t      return true;\n\t    }\n\t    if (typeof newValue !== undefined && this[prop] !== newValue) {\n\t      this[prop] = newValue;\n\t      return true;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveLeft: function(e, prop) {\n\t    return this._move(e, prop, 'Left');\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _moveRight: function(e, prop) {\n\t    return this._move(e, prop, 'Right');\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left without keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithoutShift: function(e) {\n\t    var change = true;\n\t    this._selectionDirection = 'left';\n\t\n\t    // only move cursor when there is no selection,\n\t    // otherwise we discard it, and leave cursor on same place\n\t    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n\t      change = this._moveLeft(e, 'selectionStart');\n\t\n\t    }\n\t    this.selectionEnd = this.selectionStart;\n\t    return change;\n\t  },\n\t\n\t  /**\n\t   * Moves cursor left while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorLeftWithShift: function(e) {\n\t    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n\t      return this._moveLeft(e, 'selectionEnd');\n\t    }\n\t    else if (this.selectionStart !== 0){\n\t      this._selectionDirection = 'left';\n\t      return this._moveLeft(e, 'selectionStart');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRight: function(e) {\n\t    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n\t      return;\n\t    }\n\t    this._moveCursorLeftOrRight('Right', e);\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right or Left, fires event\n\t   * @param {String} direction 'Left', 'Right'\n\t   * @param {Event} e Event object\n\t   */\n\t  _moveCursorLeftOrRight: function(direction, e) {\n\t    var actionName = 'moveCursor' + direction + 'With';\n\t    this._currentCursorOpacity = 1;\n\t\n\t    if (e.shiftKey) {\n\t      actionName += 'Shift';\n\t    }\n\t    else {\n\t      actionName += 'outShift';\n\t    }\n\t    if (this[actionName](e)) {\n\t      this.abortCursorAnimation();\n\t      this.initDelayedCursor();\n\t      this._fireSelectionChanged();\n\t      this._updateTextarea();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right while keeping selection\n\t   * @param {Event} e\n\t   */\n\t  moveCursorRightWithShift: function(e) {\n\t    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n\t      return this._moveRight(e, 'selectionStart');\n\t    }\n\t    else if (this.selectionEnd !== this.text.length) {\n\t      this._selectionDirection = 'right';\n\t      return this._moveRight(e, 'selectionEnd');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Moves cursor right without keeping selection\n\t   * @param {Event} e Event object\n\t   */\n\t  moveCursorRightWithoutShift: function(e) {\n\t    var changed = true;\n\t    this._selectionDirection = 'right';\n\t\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      changed = this._moveRight(e, 'selectionStart');\n\t      this.selectionEnd = this.selectionStart;\n\t    }\n\t    else {\n\t      this.selectionStart = this.selectionEnd;\n\t    }\n\t    return changed;\n\t  },\n\t\n\t  /**\n\t   * Removes characters selected by selection\n\t   * @param {Event} e Event object\n\t   */\n\t  removeChars: function(e) {\n\t    if (this.selectionStart === this.selectionEnd) {\n\t      this._removeCharsNearCursor(e);\n\t    }\n\t    else {\n\t      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n\t    }\n\t\n\t    this.set('dirty', true);\n\t    this.setSelectionEnd(this.selectionStart);\n\t\n\t    this._removeExtraneousStyles();\n\t\n\t    this.canvas && this.canvas.renderAll();\n\t\n\t    this.setCoords();\n\t    this.fire('changed');\n\t    this.canvas && this.canvas.fire('text:changed', { target: this });\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   * @param {Event} e Event object\n\t   */\n\t  _removeCharsNearCursor: function(e) {\n\t    if (this.selectionStart === 0) {\n\t      return;\n\t    }\n\t    if (e.metaKey) {\n\t      // remove all till the start of current line\n\t      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftLineBoundary);\n\t    }\n\t    else if (e.altKey) {\n\t      // remove all till the start of current word\n\t      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\t\n\t      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n\t      this.setSelectionStart(leftWordBoundary);\n\t    }\n\t    else {\n\t      this._removeSingleCharAndStyle(this.selectionStart);\n\t      this.setSelectionStart(this.selectionStart - 1);\n\t    }\n\t  }\n\t});\n\t\n\t\n\t/* _TO_SVG_START_ */\n\t(function() {\n\t  var toFixed = fabric.util.toFixed,\n\t      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\t\n\t  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n\t      if (!this._getLineStyle(lineIndex)) {\n\t        fabric.Text.prototype._setSVGTextLineText.call(this,\n\t          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n\t      }\n\t      else {\n\t        this._setSVGTextLineChars(\n\t          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\t\n\t      var chars = this._textLines[lineIndex],\n\t          charOffset = 0,\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n\t          lineOffset = this._getSVGLineTopOffset(lineIndex),\n\t          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\t\n\t      for (var i = 0, len = chars.length; i < len; i++) {\n\t        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\t\n\t        textSpans.push(\n\t          this._createTextCharSpan(\n\t            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\t\n\t        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\t\n\t        if (styleDecl.textBackgroundColor) {\n\t          textBgRects.push(\n\t            this._createTextCharBg(\n\t              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n\t        }\n\t\n\t        charOffset += charWidth;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _getSVGLineTopOffset: function(lineIndex) {\n\t      var lineTopOffset = 0, lastHeight = 0;\n\t      for (var j = 0; j < lineIndex; j++) {\n\t        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n\t      }\n\t      lastHeight = this._getHeightOfLine(this.ctx, j);\n\t      return {\n\t        lineTop: lineTopOffset,\n\t        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n\t      };\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n\t      return [\n\t        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n\t        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n\t        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n\t        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n\t        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n\t        '\"></rect>\\n'\n\t      ].join('');\n\t    },\n\t\n\t    /**\n\t     * @private\n\t     */\n\t    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\t\n\t      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n\t        visible: true,\n\t        fill: this.fill,\n\t        stroke: this.stroke,\n\t        type: 'text',\n\t        getSvgFilter: fabric.Object.prototype.getSvgFilter\n\t      }, styleDecl));\n\t\n\t      return [\n\t        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n\t        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n\t          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n\t          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n\t          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n\t          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n\t          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n\t        'style=\"', fillStyles, '\">',\n\t        fabric.util.string.escapeXml(_char),\n\t        '</tspan>\\n'\n\t      ].join('');\n\t    }\n\t  });\n\t})();\n\t/* _TO_SVG_END_ */\n\t\n\t\n\t(function(global) {\n\t\n\t  'use strict';\n\t\n\t  var fabric = global.fabric || (global.fabric = {});\n\t\n\t  /**\n\t   * Textbox class, based on IText, allows the user to resize the text rectangle\n\t   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n\t   * user can only change width. Height is adjusted automatically based on the\n\t   * wrapping of lines.\n\t   * @class fabric.Textbox\n\t   * @extends fabric.IText\n\t   * @mixes fabric.Observable\n\t   * @return {fabric.Textbox} thisArg\n\t   * @see {@link fabric.Textbox#initialize} for constructor definition\n\t   */\n\t  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\t\n\t    /**\n\t     * Type of an object\n\t     * @type String\n\t     * @default\n\t     */\n\t    type: 'textbox',\n\t\n\t    /**\n\t     * Minimum width of textbox, in pixels.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    minWidth: 20,\n\t\n\t    /**\n\t     * Minimum calculated width of a textbox, in pixels.\n\t     * fixed to 2 so that an empty textbox cannot go to 0\n\t     * and is still selectable without text.\n\t     * @type Number\n\t     * @default\n\t     */\n\t    dynamicMinWidth: 2,\n\t\n\t    /**\n\t     * Cached array of text wrapping.\n\t     * @type Array\n\t     */\n\t    __cachedLines: null,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingY: true,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     */\n\t    lockScalingFlip: true,\n\t\n\t    /**\n\t     * Override standard Object class values\n\t     * Textbox needs this on false\n\t     */\n\t    noScaleCache: false,\n\t\n\t    /**\n\t     * Constructor. Some scaling related property values are forced. Visibility\n\t     * of controls is also fixed; only the rotation and width controls are\n\t     * made available.\n\t     * @param {String} text Text string\n\t     * @param {Object} [options] Options object\n\t     * @return {fabric.Textbox} thisArg\n\t     */\n\t    initialize: function(text, options) {\n\t\n\t      this.callSuper('initialize', text, options);\n\t      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t      this.ctx = this.objectCaching ? this._cacheContext : fabric.util.createCanvasElement().getContext('2d');\n\t      // add width to this list of props that effect line wrapping.\n\t      this._dimensionAffectingProps.push('width');\n\t    },\n\t\n\t    /**\n\t     * Unlike superclass's version of this function, Textbox does not update\n\t     * its width.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @private\n\t     * @override\n\t     */\n\t    _initDimensions: function(ctx) {\n\t      if (this.__skipDimension) {\n\t        return;\n\t      }\n\t\n\t      if (!ctx) {\n\t        ctx = fabric.util.createCanvasElement().getContext('2d');\n\t        this._setTextStyles(ctx);\n\t        this.clearContextTop();\n\t      }\n\t\n\t      // clear dynamicMinWidth as it will be different after we re-wrap line\n\t      this.dynamicMinWidth = 0;\n\t\n\t      // wrap lines\n\t      this._textLines = this._splitTextIntoLines(ctx);\n\t      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\t      if (this.dynamicMinWidth > this.width) {\n\t        this._set('width', this.dynamicMinWidth);\n\t      }\n\t\n\t      // clear cache and re-calculate height\n\t      this._clearCache();\n\t      this.height = this._getTextHeight(ctx);\n\t    },\n\t\n\t    /**\n\t     * Generate an object that translates the style object so that it is\n\t     * broken up by visual lines (new lines and automatic wrapping).\n\t     * The original text styles object is broken up by actual lines (new lines only),\n\t     * which is only sufficient for Text / IText\n\t     * @private\n\t     */\n\t    _generateStyleMap: function() {\n\t      var realLineCount     = 0,\n\t          realLineCharCount = 0,\n\t          charCount         = 0,\n\t          map               = {};\n\t\n\t      for (var i = 0; i < this._textLines.length; i++) {\n\t        if (this.text[charCount] === '\\n' && i > 0) {\n\t          realLineCharCount = 0;\n\t          charCount++;\n\t          realLineCount++;\n\t        }\n\t        else if (this.text[charCount] === ' ' && i > 0) {\n\t          // this case deals with space's that are removed from end of lines when wrapping\n\t          realLineCharCount++;\n\t          charCount++;\n\t        }\n\t\n\t        map[i] = { line: realLineCount, offset: realLineCharCount };\n\t\n\t        charCount += this._textLines[i].length;\n\t        realLineCharCount += this._textLines[i].length;\n\t      }\n\t\n\t      return map;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Boolean} [returnCloneOrEmpty=false]\n\t     * @private\n\t     */\n\t    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n\t      if (this._styleMap) {\n\t        var map = this._styleMap[lineIndex];\n\t        if (!map) {\n\t          return returnCloneOrEmpty ? { } : null;\n\t        }\n\t        lineIndex = map.line;\n\t        charIndex = map.offset + charIndex;\n\t      }\n\t      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      this.styles[lineIndex][charIndex] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Number} charIndex\n\t     * @private\n\t     */\n\t    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      delete this.styles[lineIndex][charIndex];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _getLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      return this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @param {Object} style\n\t     * @private\n\t     */\n\t    _setLineStyle: function(lineIndex, style) {\n\t      var map = this._styleMap[lineIndex];\n\t      this.styles[map.line] = style;\n\t    },\n\t\n\t    /**\n\t     * @param {Number} lineIndex\n\t     * @private\n\t     */\n\t    _deleteLineStyle: function(lineIndex) {\n\t      var map = this._styleMap[lineIndex];\n\t      delete this.styles[map.line];\n\t    },\n\t\n\t    /**\n\t     * Wraps text using the 'width' property of Textbox. First this function\n\t     * splits text on newlines, so we preserve newlines entered by the user.\n\t     * Then it wraps each line using the width of the Textbox by calling\n\t     * _wrapLine().\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text that is split into lines\n\t     * @returns {Array} Array of lines\n\t     */\n\t    _wrapText: function(ctx, text) {\n\t      var lines = text.split(this._reNewline), wrapped = [], i;\n\t\n\t      for (i = 0; i < lines.length; i++) {\n\t        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n\t      }\n\t\n\t      return wrapped;\n\t    },\n\t\n\t    /**\n\t     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n\t     *\n\t     * @param {CanvasRenderingContext2D} ctx\n\t     * @param {String} text\n\t     * @param {number} lineIndex\n\t     * @param {number} charOffset\n\t     * @returns {number}\n\t     * @private\n\t     */\n\t    _measureText: function(ctx, text, lineIndex, charOffset) {\n\t      var width = 0;\n\t      charOffset = charOffset || 0;\n\t      for (var i = 0, len = text.length; i < len; i++) {\n\t        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n\t      }\n\t      return width;\n\t    },\n\t\n\t    /**\n\t     * Wraps a line of text using the width of the Textbox and a context.\n\t     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n\t     * @param {String} text The string of text to split into lines\n\t     * @param {Number} lineIndex\n\t     * @returns {Array} Array of line(s) into which the given text is wrapped\n\t     * to.\n\t     */\n\t    _wrapLine: function(ctx, text, lineIndex) {\n\t      var lineWidth        = 0,\n\t          lines            = [],\n\t          line             = '',\n\t          words            = text.split(' '),\n\t          word             = '',\n\t          offset           = 0,\n\t          infix            = ' ',\n\t          wordWidth        = 0,\n\t          infixWidth       = 0,\n\t          largestWordWidth = 0,\n\t          lineJustStarted = true,\n\t          additionalSpace = this._getWidthOfCharSpacing();\n\t\n\t      for (var i = 0; i < words.length; i++) {\n\t        word = words[i];\n\t        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\t\n\t        offset += word.length;\n\t\n\t        lineWidth += infixWidth + wordWidth - additionalSpace;\n\t\n\t        if (lineWidth >= this.width && !lineJustStarted) {\n\t          lines.push(line);\n\t          line = '';\n\t          lineWidth = wordWidth;\n\t          lineJustStarted = true;\n\t        }\n\t        else {\n\t          lineWidth += additionalSpace;\n\t        }\n\t\n\t        if (!lineJustStarted) {\n\t          line += infix;\n\t        }\n\t        line += word;\n\t\n\t        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n\t        offset++;\n\t        lineJustStarted = false;\n\t        // keep track of largest word\n\t        if (wordWidth > largestWordWidth) {\n\t          largestWordWidth = wordWidth;\n\t        }\n\t      }\n\t\n\t      i && lines.push(line);\n\t\n\t      if (largestWordWidth > this.dynamicMinWidth) {\n\t        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n\t      }\n\t\n\t      return lines;\n\t    },\n\t    /**\n\t     * Gets lines of text to render in the Textbox. This function calculates\n\t     * text wrapping on the fly everytime it is called.\n\t     * @returns {Array} Array of lines in the Textbox.\n\t     * @override\n\t     */\n\t    _splitTextIntoLines: function(ctx) {\n\t      ctx = ctx || this.ctx;\n\t      var originalAlign = this.textAlign;\n\t      this._styleMap = null;\n\t      ctx.save();\n\t      this._setTextStyles(ctx);\n\t      this.textAlign = 'left';\n\t      var lines = this._wrapText(ctx, this.text);\n\t      this.textAlign = originalAlign;\n\t      ctx.restore();\n\t      this._textLines = lines;\n\t      this._styleMap = this._generateStyleMap();\n\t      return lines;\n\t    },\n\t\n\t    /**\n\t     * When part of a group, we don't want the Textbox's scale to increase if\n\t     * the group's increases. That's why we reduce the scale of the Textbox by\n\t     * the amount that the group's increases. This is to maintain the effective\n\t     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n\t     * the same font-size value would result in different actual size depending\n\t     * on the value of the scale.\n\t     * @param {String} key\n\t     * @param {*} value\n\t     */\n\t    setOnGroup: function(key, value) {\n\t      if (key === 'scaleX') {\n\t        this.set('scaleX', Math.abs(1 / value));\n\t        this.set('width', (this.get('width') * value) /\n\t          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n\t        this.__oldScaleX = value;\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n\t     * Overrides the superclass function to take into account text wrapping.\n\t     *\n\t     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    get2DCursorLocation: function(selectionStart) {\n\t      if (typeof selectionStart === 'undefined') {\n\t        selectionStart = this.selectionStart;\n\t      }\n\t\n\t      var numLines = this._textLines.length,\n\t          removed  = 0;\n\t\n\t      for (var i = 0; i < numLines; i++) {\n\t        var line    = this._textLines[i],\n\t            lineLen = line.length;\n\t\n\t        if (selectionStart <= removed + lineLen) {\n\t          return {\n\t            lineIndex: i,\n\t            charIndex: selectionStart - removed\n\t          };\n\t        }\n\t\n\t        removed += lineLen;\n\t\n\t        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n\t          removed++;\n\t        }\n\t      }\n\t\n\t      return {\n\t        lineIndex: numLines - 1,\n\t        charIndex: this._textLines[numLines - 1].length\n\t      };\n\t    },\n\t\n\t    /**\n\t     * Overrides superclass function and uses text wrapping data to get cursor\n\t     * boundary offsets instead of the array of chars.\n\t     * @param {Array} chars Unused\n\t     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n\t     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n\t     */\n\t    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n\t      var topOffset      = 0,\n\t          leftOffset     = 0,\n\t          cursorLocation = this.get2DCursorLocation(),\n\t          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n\t          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\t\n\t      for (var i = 0; i < cursorLocation.charIndex; i++) {\n\t        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n\t      }\n\t\n\t      for (i = 0; i < cursorLocation.lineIndex; i++) {\n\t        topOffset += this._getHeightOfLine(this.ctx, i);\n\t      }\n\t\n\t      if (typeOfBoundaries === 'cursor') {\n\t        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n\t          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n\t          * (1 - this._fontSizeFraction);\n\t      }\n\t\n\t      return {\n\t        top: topOffset,\n\t        left: leftOffset,\n\t        lineLeft: lineLeftOffset\n\t      };\n\t    },\n\t\n\t    getMinWidth: function() {\n\t      return Math.max(this.minWidth, this.dynamicMinWidth);\n\t    },\n\t\n\t    /**\n\t     * Returns object representation of an instance\n\t     * @method toObject\n\t     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n\t     * @return {Object} object representation of an instance\n\t     */\n\t    toObject: function(propertiesToInclude) {\n\t      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Returns fabric.Textbox instance from an object representation\n\t   * @static\n\t   * @memberOf fabric.Textbox\n\t   * @param {Object} object Object to create an instance from\n\t   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n\t   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n\t   * @return {fabric.Textbox} instance of fabric.Textbox\n\t   */\n\t  fabric.Textbox.fromObject = function(object, callback, forceAsync) {\n\t    return fabric.Object._fromObject('Textbox', object, callback, forceAsync, 'text');\n\t  };\n\t\n\t  /**\n\t   * Returns the default controls visibility required for Textboxes.\n\t   * @returns {Object}\n\t   */\n\t  fabric.Textbox.getTextboxControlVisibility = function() {\n\t    return {\n\t      tl: false,\n\t      tr: false,\n\t      br: false,\n\t      bl: false,\n\t      ml: true,\n\t      mt: false,\n\t      mr: true,\n\t      mb: false,\n\t      mtr: true\n\t    };\n\t  };\n\t\n\t})( true ? exports : this);\n\t\n\t\n\t(function() {\n\t\n\t  /**\n\t   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n\t   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n\t   */\n\t  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\t\n\t  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n\t                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\t\n\t    var t = transform.target;\n\t    if (t instanceof fabric.Textbox) {\n\t      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n\t      if (w >= t.getMinWidth()) {\n\t        t.set('width', w);\n\t        return true;\n\t      }\n\t    }\n\t    else {\n\t      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n\t        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Sets controls of this group to the Textbox's special configuration if\n\t   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n\t   * it gets initialized to default value at runtime.\n\t   */\n\t  fabric.Group.prototype._refreshControlsVisibility = function() {\n\t    if (typeof fabric.Textbox === 'undefined') {\n\t      return;\n\t    }\n\t    for (var i = this._objects.length; i--;) {\n\t      if (this._objects[i] instanceof fabric.Textbox) {\n\t        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n\t        return;\n\t      }\n\t    }\n\t  };\n\t\n\t  var clone = fabric.util.object.clone;\n\t\n\t  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n\t    /**\n\t     * @private\n\t     */\n\t    _removeExtraneousStyles: function() {\n\t      for (var prop in this._styleMap) {\n\t        if (!this._textLines[prop]) {\n\t          delete this.styles[this._styleMap[prop].line];\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Inserts style object for a given line/char index\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Object} [style] Style object to insert, if given\n\t     */\n\t    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n\t    },\n\t\n\t    /**\n\t     * Inserts new style object\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} charIndex Index of a char\n\t     * @param {Boolean} isEndOfLine True if it's end of line\n\t     */\n\t    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\t      // adjust lineIndex and charIndex\n\t      var map = this._styleMap[lineIndex];\n\t      lineIndex = map.line;\n\t      charIndex = map.offset + charIndex;\n\t\n\t      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n\t    },\n\t\n\t    /**\n\t     * Shifts line styles up or down. This function is slightly different than the one in\n\t     * itext_behaviour as it takes into account the styleMap.\n\t     *\n\t     * @param {Number} lineIndex Index of a line\n\t     * @param {Number} offset Can be -1 or +1\n\t     */\n\t    shiftLineStyles: function(lineIndex, offset) {\n\t      // shift all line styles by 1 upward\n\t      var clonedStyles = clone(this.styles),\n\t          map          = this._styleMap[lineIndex];\n\t\n\t      // adjust line index\n\t      lineIndex = map.line;\n\t\n\t      for (var line in this.styles) {\n\t        var numericLine = parseInt(line, 10);\n\t\n\t        if (numericLine > lineIndex) {\n\t          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\t\n\t          if (!clonedStyles[numericLine - offset]) {\n\t            delete this.styles[numericLine];\n\t          }\n\t        }\n\t      }\n\t      //TODO: evaluate if delete old style lines with offset -1\n\t    },\n\t\n\t    /**\n\t     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n\t     *\n\t     * @param {Number} lIndex\n\t     * @returns {String}\n\t     * @private\n\t     */\n\t    _getTextOnPreviousLine: function(lIndex) {\n\t      var textOnPreviousLine = this._textLines[lIndex - 1];\n\t\n\t      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n\t        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\t\n\t        lIndex--;\n\t      }\n\t\n\t      return textOnPreviousLine;\n\t    },\n\t\n\t    /**\n\t     * Removes style object\n\t     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n\t     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n\t     */\n\t    removeStyleObject: function(isBeginningOfLine, index) {\n\t\n\t      var cursorLocation = this.get2DCursorLocation(index),\n\t          map            = this._styleMap[cursorLocation.lineIndex],\n\t          lineIndex      = map.line,\n\t          charIndex      = map.offset + cursorLocation.charIndex;\n\t      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n\t    }\n\t  });\n\t})();\n\t\n\t\n\t(function() {\n\t  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n\t  /**\n\t   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n\t   *\n\t   * @param {Number} mouseOffset\n\t   * @param {Number} prevWidth\n\t   * @param {Number} width\n\t   * @param {Number} index\n\t   * @param {Number} jlen\n\t   * @returns {Number}\n\t   */\n\t  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n\t    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\t\n\t    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n\t    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n\t    var tmp     = 0,\n\t        removed = 0;\n\t\n\t    // account for removed characters\n\t    for (var i = 0; i < this._textLines.length; i++) {\n\t      tmp += this._textLines[i].length;\n\t\n\t      if (tmp + removed >= index) {\n\t        break;\n\t      }\n\t\n\t      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n\t        removed++;\n\t      }\n\t    }\n\t\n\t    return index - i + removed;\n\t  };\n\t})();\n\t\n\t\n\t(function() {\n\t\n\t  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n\t    return;\n\t  }\n\t\n\t  var DOMParser = __webpack_require__(51).DOMParser,\n\t      URL = __webpack_require__(18),\n\t      HTTP = __webpack_require__(13),\n\t      HTTPS = __webpack_require__(29),\n\t\n\t      Canvas = __webpack_require__(12),\n\t      Image = __webpack_require__(12).Image;\n\t\n\t  /** @private */\n\t  function request(url, encoding, callback) {\n\t    var oURL = URL.parse(url);\n\t\n\t    // detect if http or https is used\n\t    if ( !oURL.port ) {\n\t      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n\t    }\n\t\n\t    // assign request handler based on protocol\n\t    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n\t        req = reqHandler.request({\n\t          hostname: oURL.hostname,\n\t          port: oURL.port,\n\t          path: oURL.path,\n\t          method: 'GET'\n\t        }, function(response) {\n\t          var body = '';\n\t          if (encoding) {\n\t            response.setEncoding(encoding);\n\t          }\n\t          response.on('end', function () {\n\t            callback(body);\n\t          });\n\t          response.on('data', function (chunk) {\n\t            if (response.statusCode === 200) {\n\t              body += chunk;\n\t            }\n\t          });\n\t        });\n\t\n\t    req.on('error', function(err) {\n\t      if (err.errno === process.ECONNREFUSED) {\n\t        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n\t      }\n\t      else {\n\t        fabric.log(err.message);\n\t      }\n\t      callback(null);\n\t    });\n\t\n\t    req.end();\n\t  }\n\t\n\t  /** @private */\n\t  function requestFs(path, callback) {\n\t    var fs = __webpack_require__(49);\n\t    fs.readFile(path, function (err, data) {\n\t      if (err) {\n\t        fabric.log(err);\n\t        throw err;\n\t      }\n\t      else {\n\t        callback(data);\n\t      }\n\t    });\n\t  }\n\t\n\t  fabric.util.loadImage = function(url, callback, context) {\n\t    function createImageAndCallBack(data) {\n\t      if (data) {\n\t        img.src = new Buffer(data, 'binary');\n\t        // preserving original url, which seems to be lost in node-canvas\n\t        img._src = url;\n\t        callback && callback.call(context, img);\n\t      }\n\t      else {\n\t        img = null;\n\t        callback && callback.call(context, null, true);\n\t      }\n\t    }\n\t    var img = new Image();\n\t    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n\t      img.src = img._src = url;\n\t      callback && callback.call(context, img);\n\t    }\n\t    else if (url && url.indexOf('http') !== 0) {\n\t      requestFs(url, createImageAndCallBack);\n\t    }\n\t    else if (url) {\n\t      request(url, 'binary', createImageAndCallBack);\n\t    }\n\t    else {\n\t      callback && callback.call(context, url);\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromURL = function(url, callback, reviver) {\n\t    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n\t    if (url.indexOf('http') !== 0) {\n\t      requestFs(url, function(body) {\n\t        fabric.loadSVGFromString(body.toString(), callback, reviver);\n\t      });\n\t    }\n\t    else {\n\t      request(url, '', function(body) {\n\t        fabric.loadSVGFromString(body, callback, reviver);\n\t      });\n\t    }\n\t  };\n\t\n\t  fabric.loadSVGFromString = function(string, callback, reviver) {\n\t    var doc = new DOMParser().parseFromString(string);\n\t    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n\t      callback && callback(results, options);\n\t    }, reviver);\n\t  };\n\t\n\t  fabric.util.getScript = function(url, callback) {\n\t    request(url, '', function(body) {\n\t      // eslint-disable-next-line no-eval\n\t      eval(body);\n\t      callback && callback();\n\t    });\n\t  };\n\t\n\t  // fabric.util.createCanvasElement = function(_, width, height) {\n\t  //   return new Canvas(width, height);\n\t  // }\n\t\n\t  /**\n\t   * Only available when running fabric on node.js\n\t   * @param {Number} width Canvas width\n\t   * @param {Number} height Canvas height\n\t   * @param {Object} [options] Options to pass to FabricCanvas.\n\t   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n\t   * @return {Object} wrapped canvas instance\n\t   */\n\t  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n\t    nodeCanvasOptions = nodeCanvasOptions || options;\n\t\n\t    var canvasEl = fabric.document.createElement('canvas'),\n\t        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n\t        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\t\n\t    // jsdom doesn't create style on canvas element, so here be temp. workaround\n\t    canvasEl.style = { };\n\t\n\t    canvasEl.width = nodeCanvas.width;\n\t    canvasEl.height = nodeCanvas.height;\n\t    options = options || { };\n\t    options.nodeCanvas = nodeCanvas;\n\t    options.nodeCacheCanvas = nodeCacheCanvas;\n\t    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n\t        fabricCanvas = new FabricCanvas(canvasEl, options);\n\t    fabricCanvas.nodeCanvas = nodeCanvas;\n\t    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n\t    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n\t    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n\t    fabricCanvas.Font = Canvas.Font;\n\t    return fabricCanvas;\n\t  };\n\t\n\t  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n\t  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n\t    el = el || fabric.document.createElement('canvas');\n\t    this.nodeCanvas = new Canvas(el.width, el.height);\n\t    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n\t    originaInitStatic.call(this, el, options);\n\t    this.contextContainer = this.nodeCanvas.getContext('2d');\n\t    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n\t    this.Font = Canvas.Font;\n\t  };\n\t\n\t  /** @ignore */\n\t  fabric.StaticCanvas.prototype.createPNGStream = function() {\n\t    return this.nodeCanvas.createPNGStream();\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n\t    return this.nodeCanvas.createJPEGStream(opts);\n\t  };\n\t\n\t  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n\t    if (!this._isRetinaScaling()) {\n\t      return;\n\t    }\n\t\n\t    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n\t    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\t    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n\t    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n\t    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n\t  }\n\t\n\t  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n\t  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n\t    origSetBackstoreDimension.call(this, prop, value);\n\t    this.nodeCanvas[prop] = value;\n\t    return this;\n\t  };\n\t  if (fabric.Canvas) {\n\t    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n\t  }\n\t\n\t})();\n\t\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).Buffer, __webpack_require__(7), __webpack_require__(4)))\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(5);\n\tvar Response = __webpack_require__(28);\n\tvar Base64 = __webpack_require__(20);\n\tvar inherits = __webpack_require__(1);\n\t\n\tvar Request = module.exports = function (xhr, params) {\n\t    var self = this;\n\t    self.writable = true;\n\t    self.xhr = xhr;\n\t    self.body = [];\n\t    \n\t    self.uri = (params.protocol || 'http:') + '//'\n\t        + params.host\n\t        + (params.port ? ':' + params.port : '')\n\t        + (params.path || '/')\n\t    ;\n\t    \n\t    if (typeof params.withCredentials === 'undefined') {\n\t        params.withCredentials = true;\n\t    }\n\t\n\t    try { xhr.withCredentials = params.withCredentials }\n\t    catch (e) {}\n\t    \n\t    if (params.responseType) try { xhr.responseType = params.responseType }\n\t    catch (e) {}\n\t    \n\t    xhr.open(\n\t        params.method || 'GET',\n\t        self.uri,\n\t        true\n\t    );\n\t\n\t    xhr.onerror = function(event) {\n\t        self.emit('error', new Error('Network error'));\n\t    };\n\t\n\t    self._headers = {};\n\t    \n\t    if (params.headers) {\n\t        var keys = objectKeys(params.headers);\n\t        for (var i = 0; i < keys.length; i++) {\n\t            var key = keys[i];\n\t            if (!self.isSafeRequestHeader(key)) continue;\n\t            var value = params.headers[key];\n\t            self.setHeader(key, value);\n\t        }\n\t    }\n\t    \n\t    if (params.auth) {\n\t        //basic auth\n\t        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n\t    }\n\t\n\t    var res = new Response;\n\t    res.on('close', function () {\n\t        self.emit('close');\n\t    });\n\t    \n\t    res.on('ready', function () {\n\t        self.emit('response', res);\n\t    });\n\t\n\t    res.on('error', function (err) {\n\t        self.emit('error', err);\n\t    });\n\t    \n\t    xhr.onreadystatechange = function () {\n\t        // Fix for IE9 bug\n\t        // SCRIPT575: Could not complete the operation due to error c00c023f\n\t        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n\t        if (xhr.__aborted) return;\n\t        res.handle(xhr);\n\t    };\n\t};\n\t\n\tinherits(Request, Stream);\n\t\n\tRequest.prototype.setHeader = function (key, value) {\n\t    this._headers[key.toLowerCase()] = value\n\t};\n\t\n\tRequest.prototype.getHeader = function (key) {\n\t    return this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.removeHeader = function (key) {\n\t    delete this._headers[key.toLowerCase()]\n\t};\n\t\n\tRequest.prototype.write = function (s) {\n\t    this.body.push(s);\n\t};\n\t\n\tRequest.prototype.destroy = function (s) {\n\t    this.xhr.__aborted = true;\n\t    this.xhr.abort();\n\t    this.emit('close');\n\t};\n\t\n\tRequest.prototype.end = function (s) {\n\t    if (s !== undefined) this.body.push(s);\n\t\n\t    var keys = objectKeys(this._headers);\n\t    for (var i = 0; i < keys.length; i++) {\n\t        var key = keys[i];\n\t        var value = this._headers[key];\n\t        if (isArray(value)) {\n\t            for (var j = 0; j < value.length; j++) {\n\t                this.xhr.setRequestHeader(key, value[j]);\n\t            }\n\t        }\n\t        else this.xhr.setRequestHeader(key, value)\n\t    }\n\t\n\t    if (this.body.length === 0) {\n\t        this.xhr.send('');\n\t    }\n\t    else if (typeof this.body[0] === 'string') {\n\t        this.xhr.send(this.body.join(''));\n\t    }\n\t    else if (isArray(this.body[0])) {\n\t        var body = [];\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body.push.apply(body, this.body[i]);\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n\t        var len = 0;\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            len += this.body[i].length;\n\t        }\n\t        var body = new(this.body[0].constructor)(len);\n\t        var k = 0;\n\t        \n\t        for (var i = 0; i < this.body.length; i++) {\n\t            var b = this.body[i];\n\t            for (var j = 0; j < b.length; j++) {\n\t                body[k++] = b[j];\n\t            }\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t    else if (isXHR2Compatible(this.body[0])) {\n\t        this.xhr.send(this.body[0]);\n\t    }\n\t    else {\n\t        var body = '';\n\t        for (var i = 0; i < this.body.length; i++) {\n\t            body += this.body[i].toString();\n\t        }\n\t        this.xhr.send(body);\n\t    }\n\t};\n\t\n\t// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\n\tRequest.unsafeHeaders = [\n\t    \"accept-charset\",\n\t    \"accept-encoding\",\n\t    \"access-control-request-headers\",\n\t    \"access-control-request-method\",\n\t    \"connection\",\n\t    \"content-length\",\n\t    \"cookie\",\n\t    \"cookie2\",\n\t    \"content-transfer-encoding\",\n\t    \"date\",\n\t    \"expect\",\n\t    \"host\",\n\t    \"keep-alive\",\n\t    \"origin\",\n\t    \"referer\",\n\t    \"te\",\n\t    \"trailer\",\n\t    \"transfer-encoding\",\n\t    \"upgrade\",\n\t    \"user-agent\",\n\t    \"via\"\n\t];\n\t\n\tRequest.prototype.isSafeRequestHeader = function (headerName) {\n\t    if (!headerName) return false;\n\t    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n\t};\n\t\n\tvar objectKeys = Object.keys || function (obj) {\n\t    var keys = [];\n\t    for (var key in obj) keys.push(key);\n\t    return keys;\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\t\n\tvar indexOf = function (xs, x) {\n\t    if (xs.indexOf) return xs.indexOf(x);\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (xs[i] === x) return i;\n\t    }\n\t    return -1;\n\t};\n\t\n\tvar isXHR2Compatible = function (obj) {\n\t    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n\t    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n\t    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n\t};\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Stream = __webpack_require__(5);\n\tvar util = __webpack_require__(11);\n\t\n\tvar Response = module.exports = function (res) {\n\t    this.offset = 0;\n\t    this.readable = true;\n\t};\n\t\n\tutil.inherits(Response, Stream);\n\t\n\tvar capable = {\n\t    streaming : true,\n\t    status2 : true\n\t};\n\t\n\tfunction parseHeaders (res) {\n\t    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n\t    var headers = {};\n\t    for (var i = 0; i < lines.length; i++) {\n\t        var line = lines[i];\n\t        if (line === '') continue;\n\t        \n\t        var m = line.match(/^([^:]+):\\s*(.*)/);\n\t        if (m) {\n\t            var key = m[1].toLowerCase(), value = m[2];\n\t            \n\t            if (headers[key] !== undefined) {\n\t            \n\t                if (isArray(headers[key])) {\n\t                    headers[key].push(value);\n\t                }\n\t                else {\n\t                    headers[key] = [ headers[key], value ];\n\t                }\n\t            }\n\t            else {\n\t                headers[key] = value;\n\t            }\n\t        }\n\t        else {\n\t            headers[line] = true;\n\t        }\n\t    }\n\t    return headers;\n\t}\n\t\n\tResponse.prototype.getResponse = function (xhr) {\n\t    var respType = String(xhr.responseType).toLowerCase();\n\t    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n\t    if (respType === 'arraybuffer') return xhr.response;\n\t    return xhr.responseText;\n\t}\n\t\n\tResponse.prototype.getHeader = function (key) {\n\t    return this.headers[key.toLowerCase()];\n\t};\n\t\n\tResponse.prototype.handle = function (res) {\n\t    if (res.readyState === 2 && capable.status2) {\n\t        try {\n\t            this.statusCode = res.status;\n\t            this.headers = parseHeaders(res);\n\t        }\n\t        catch (err) {\n\t            capable.status2 = false;\n\t        }\n\t        \n\t        if (capable.status2) {\n\t            this.emit('ready');\n\t        }\n\t    }\n\t    else if (capable.streaming && res.readyState === 3) {\n\t        try {\n\t            if (!this.statusCode) {\n\t                this.statusCode = res.status;\n\t                this.headers = parseHeaders(res);\n\t                this.emit('ready');\n\t            }\n\t        }\n\t        catch (err) {}\n\t        \n\t        try {\n\t            this._emitData(res);\n\t        }\n\t        catch (err) {\n\t            capable.streaming = false;\n\t        }\n\t    }\n\t    else if (res.readyState === 4) {\n\t        if (!this.statusCode) {\n\t            this.statusCode = res.status;\n\t            this.emit('ready');\n\t        }\n\t        this._emitData(res);\n\t        \n\t        if (res.error) {\n\t            this.emit('error', this.getResponse(res));\n\t        }\n\t        else this.emit('end');\n\t        \n\t        this.emit('close');\n\t    }\n\t};\n\t\n\tResponse.prototype._emitData = function (res) {\n\t    var respBody = this.getResponse(res);\n\t    if (respBody.toString().match(/ArrayBuffer/)) {\n\t        this.emit('data', new Uint8Array(respBody, this.offset));\n\t        this.offset = respBody.byteLength;\n\t        return;\n\t    }\n\t    if (respBody.length > this.offset) {\n\t        this.emit('data', respBody.slice(this.offset));\n\t        this.offset = respBody.length;\n\t    }\n\t};\n\t\n\tvar isArray = Array.isArray || function (xs) {\n\t    return Object.prototype.toString.call(xs) === '[object Array]';\n\t};\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar http = __webpack_require__(13);\n\t\n\tvar https = module.exports;\n\t\n\tfor (var key in http) {\n\t    if (http.hasOwnProperty(key)) https[key] = http[key];\n\t};\n\t\n\thttps.request = function (params, cb) {\n\t    if (!params) params = {};\n\t    params.scheme = 'https';\n\t    return http.request.call(this, params, cb);\n\t}\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (Object.getOwnPropertySymbols) {\n\t\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(14);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(console) {'use strict';\n\t\n\tvar Promise = __webpack_require__(14);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\t\n\tmodule.exports = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\t\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\t\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\t\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\t\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\t\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\t\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\t\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\t\n\t  return obj;\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t'use strict';\n\t\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\t\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\t\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\t\n\t    default:\n\t      return '';\n\t  }\n\t};\n\t\n\tmodule.exports = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\t\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\t\n\t  }\n\t\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.decode = exports.parse = __webpack_require__(35);\n\texports.encode = exports.stringify = __webpack_require__(36);\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return Object.prototype.toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(2)\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(15)\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {exports = module.exports = __webpack_require__(16);\n\texports.Stream = __webpack_require__(5);\n\texports.Readable = exports;\n\texports.Writable = __webpack_require__(10);\n\texports.Duplex = __webpack_require__(2);\n\texports.Transform = __webpack_require__(9);\n\texports.PassThrough = __webpack_require__(15);\n\tif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n\t  module.exports = __webpack_require__(5);\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(9)\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(10)\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/punycode v1.3.2 by @mathias */\n\t;(function(root) {\n\t\n\t\t/** Detect free variables */\n\t\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t\t!exports.nodeType && exports;\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\t!module.nodeType && module;\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (\n\t\t\tfreeGlobal.global === freeGlobal ||\n\t\t\tfreeGlobal.window === freeGlobal ||\n\t\t\tfreeGlobal.self === freeGlobal\n\t\t) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/**\n\t\t * The `punycode` object.\n\t\t * @name punycode\n\t\t * @type Object\n\t\t */\n\t\tvar punycode,\n\t\n\t\t/** Highest positive signed 32-bit float value */\n\t\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\t\n\t\t/** Bootstring parameters */\n\t\tbase = 36,\n\t\ttMin = 1,\n\t\ttMax = 26,\n\t\tskew = 38,\n\t\tdamp = 700,\n\t\tinitialBias = 72,\n\t\tinitialN = 128, // 0x80\n\t\tdelimiter = '-', // '\\x2D'\n\t\n\t\t/** Regular expressions */\n\t\tregexPunycode = /^xn--/,\n\t\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\t\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\t\n\t\t/** Error messages */\n\t\terrors = {\n\t\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t\t'invalid-input': 'Invalid input'\n\t\t},\n\t\n\t\t/** Convenience shortcuts */\n\t\tbaseMinusTMin = base - tMin,\n\t\tfloor = Math.floor,\n\t\tstringFromCharCode = String.fromCharCode,\n\t\n\t\t/** Temporary variable */\n\t\tkey;\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/**\n\t\t * A generic error utility function.\n\t\t * @private\n\t\t * @param {String} type The error type.\n\t\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t\t */\n\t\tfunction error(type) {\n\t\t\tthrow RangeError(errors[type]);\n\t\t}\n\t\n\t\t/**\n\t\t * A generic `Array#map` utility function.\n\t\t * @private\n\t\t * @param {Array} array The array to iterate over.\n\t\t * @param {Function} callback The function that gets called for every array\n\t\t * item.\n\t\t * @returns {Array} A new array of values returned by the callback function.\n\t\t */\n\t\tfunction map(array, fn) {\n\t\t\tvar length = array.length;\n\t\t\tvar result = [];\n\t\t\twhile (length--) {\n\t\t\t\tresult[length] = fn(array[length]);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\t/**\n\t\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t\t * addresses.\n\t\t * @private\n\t\t * @param {String} domain The domain name or email address.\n\t\t * @param {Function} callback The function that gets called for every\n\t\t * character.\n\t\t * @returns {Array} A new string of characters returned by the callback\n\t\t * function.\n\t\t */\n\t\tfunction mapDomain(string, fn) {\n\t\t\tvar parts = string.split('@');\n\t\t\tvar result = '';\n\t\t\tif (parts.length > 1) {\n\t\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\t\tresult = parts[0] + '@';\n\t\t\t\tstring = parts[1];\n\t\t\t}\n\t\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\t\tvar labels = string.split('.');\n\t\t\tvar encoded = map(labels, fn).join('.');\n\t\t\treturn result + encoded;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates an array containing the numeric code points of each Unicode\n\t\t * character in the string. While JavaScript uses UCS-2 internally,\n\t\t * this function will convert a pair of surrogate halves (each of which\n\t\t * UCS-2 exposes as separate characters) into a single code point,\n\t\t * matching UTF-16.\n\t\t * @see `punycode.ucs2.encode`\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode.ucs2\n\t\t * @name decode\n\t\t * @param {String} string The Unicode input string (UCS-2).\n\t\t * @returns {Array} The new array of code points.\n\t\t */\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [],\n\t\t\t    counter = 0,\n\t\t\t    length = string.length,\n\t\t\t    value,\n\t\t\t    extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t/**\n\t\t * Creates a string based on an array of numeric code points.\n\t\t * @see `punycode.ucs2.decode`\n\t\t * @memberOf punycode.ucs2\n\t\t * @name encode\n\t\t * @param {Array} codePoints The array of numeric code points.\n\t\t * @returns {String} The new Unicode string (UCS-2).\n\t\t */\n\t\tfunction ucs2encode(array) {\n\t\t\treturn map(array, function(value) {\n\t\t\t\tvar output = '';\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t\treturn output;\n\t\t\t}).join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a basic code point into a digit/integer.\n\t\t * @see `digitToBasic()`\n\t\t * @private\n\t\t * @param {Number} codePoint The basic numeric code point value.\n\t\t * @returns {Number} The numeric value of a basic code point (for use in\n\t\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t\t * the code point does not represent a value.\n\t\t */\n\t\tfunction basicToDigit(codePoint) {\n\t\t\tif (codePoint - 48 < 10) {\n\t\t\t\treturn codePoint - 22;\n\t\t\t}\n\t\t\tif (codePoint - 65 < 26) {\n\t\t\t\treturn codePoint - 65;\n\t\t\t}\n\t\t\tif (codePoint - 97 < 26) {\n\t\t\t\treturn codePoint - 97;\n\t\t\t}\n\t\t\treturn base;\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a digit/integer into a basic code point.\n\t\t * @see `basicToDigit()`\n\t\t * @private\n\t\t * @param {Number} digit The numeric value of a basic code point.\n\t\t * @returns {Number} The basic code point whose value (when used for\n\t\t * representing integers) is `digit`, which needs to be in the range\n\t\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t\t * used; else, the lowercase form is used. The behavior is undefined\n\t\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t\t */\n\t\tfunction digitToBasic(digit, flag) {\n\t\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t\t// 26..35 map to ASCII 0..9\n\t\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t\t}\n\t\n\t\t/**\n\t\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t\t * @private\n\t\t */\n\t\tfunction adapt(delta, numPoints, firstTime) {\n\t\t\tvar k = 0;\n\t\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\t\tdelta += floor(delta / numPoints);\n\t\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t\t}\n\t\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t\t * symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t\t * @returns {String} The resulting string of Unicode symbols.\n\t\t */\n\t\tfunction decode(input) {\n\t\t\t// Don't use UCS-2\n\t\t\tvar output = [],\n\t\t\t    inputLength = input.length,\n\t\t\t    out,\n\t\t\t    i = 0,\n\t\t\t    n = initialN,\n\t\t\t    bias = initialBias,\n\t\t\t    basic,\n\t\t\t    j,\n\t\t\t    index,\n\t\t\t    oldi,\n\t\t\t    w,\n\t\t\t    k,\n\t\t\t    digit,\n\t\t\t    t,\n\t\t\t    /** Cached calculation results */\n\t\t\t    baseMinusT;\n\t\n\t\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t\t// the first basic code points to the output.\n\t\n\t\t\tbasic = input.lastIndexOf(delimiter);\n\t\t\tif (basic < 0) {\n\t\t\t\tbasic = 0;\n\t\t\t}\n\t\n\t\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t\t// if it's not a basic code point\n\t\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\t\terror('not-basic');\n\t\t\t\t}\n\t\t\t\toutput.push(input.charCodeAt(j));\n\t\t\t}\n\t\n\t\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t\t// points were copied; start at the beginning otherwise.\n\t\n\t\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\t\n\t\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t\t// value at the end to obtain `delta`.\n\t\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\t\n\t\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\t\terror('invalid-input');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\t\n\t\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\ti += digit * w;\n\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\n\t\t\t\t\tif (digit < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tw *= baseMinusT;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tout = output.length + 1;\n\t\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\t\n\t\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tn += floor(i / out);\n\t\t\t\ti %= out;\n\t\n\t\t\t\t// Insert `n` at position `i` of the output\n\t\t\t\toutput.splice(i++, 0, n);\n\t\n\t\t\t}\n\t\n\t\t\treturn ucs2encode(output);\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t\t * Punycode string of ASCII-only symbols.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The string of Unicode symbols.\n\t\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t\t */\n\t\tfunction encode(input) {\n\t\t\tvar n,\n\t\t\t    delta,\n\t\t\t    handledCPCount,\n\t\t\t    basicLength,\n\t\t\t    bias,\n\t\t\t    j,\n\t\t\t    m,\n\t\t\t    q,\n\t\t\t    k,\n\t\t\t    t,\n\t\t\t    currentValue,\n\t\t\t    output = [],\n\t\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t\t    inputLength,\n\t\t\t    /** Cached calculation results */\n\t\t\t    handledCPCountPlusOne,\n\t\t\t    baseMinusT,\n\t\t\t    qMinusT;\n\t\n\t\t\t// Convert the input in UCS-2 to Unicode\n\t\t\tinput = ucs2decode(input);\n\t\n\t\t\t// Cache the length\n\t\t\tinputLength = input.length;\n\t\n\t\t\t// Initialize the state\n\t\t\tn = initialN;\n\t\t\tdelta = 0;\n\t\t\tbias = initialBias;\n\t\n\t\t\t// Handle the basic code points\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue < 0x80) {\n\t\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\thandledCPCount = basicLength = output.length;\n\t\n\t\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t\t// `basicLength` is the number of basic code points.\n\t\n\t\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\t\tif (basicLength) {\n\t\t\t\toutput.push(delimiter);\n\t\t\t}\n\t\n\t\t\t// Main encoding loop:\n\t\t\twhile (handledCPCount < inputLength) {\n\t\n\t\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t\t// larger one:\n\t\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\t\tm = currentValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t\t// but guard against overflow\n\t\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\t\n\t\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\t\tn = m;\n\t\n\t\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\t\tcurrentValue = input[j];\n\t\n\t\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\t\terror('overflow');\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\t\tdelta = 0;\n\t\t\t\t\t\t++handledCPCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t++delta;\n\t\t\t\t++n;\n\t\n\t\t\t}\n\t\t\treturn output.join('');\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Punycode string representing a domain name or an email address\n\t\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t\t * it doesn't matter if you call it on a string that has already been\n\t\t * converted to Unicode.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The Punycoded domain name or email address to\n\t\t * convert to Unicode.\n\t\t * @returns {String} The Unicode representation of the given Punycode\n\t\t * string.\n\t\t */\n\t\tfunction toUnicode(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexPunycode.test(string)\n\t\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/**\n\t\t * Converts a Unicode string representing a domain name or an email address to\n\t\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t\t * ASCII.\n\t\t * @memberOf punycode\n\t\t * @param {String} input The domain name or email address to convert, as a\n\t\t * Unicode string.\n\t\t * @returns {String} The Punycode representation of the given domain name or\n\t\t * email address.\n\t\t */\n\t\tfunction toASCII(input) {\n\t\t\treturn mapDomain(input, function(string) {\n\t\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t\t: string;\n\t\t\t});\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\t/** Define the public API */\n\t\tpunycode = {\n\t\t\t/**\n\t\t\t * A string representing the current Punycode.js version number.\n\t\t\t * @memberOf punycode\n\t\t\t * @type String\n\t\t\t */\n\t\t\t'version': '1.3.2',\n\t\t\t/**\n\t\t\t * An object of methods to convert from JavaScript's internal character\n\t\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t\t * @memberOf punycode\n\t\t\t * @type Object\n\t\t\t */\n\t\t\t'ucs2': {\n\t\t\t\t'decode': ucs2decode,\n\t\t\t\t'encode': ucs2encode\n\t\t\t},\n\t\t\t'decode': decode,\n\t\t\t'encode': encode,\n\t\t\t'toASCII': toASCII,\n\t\t\t'toUnicode': toUnicode\n\t\t};\n\t\n\t\t/** Expose `punycode` */\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn punycode;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else if (freeExports && freeModule) {\n\t\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = punycode;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (key in punycode) {\n\t\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.punycode = punycode;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(47)(module), (function() { return this; }())))\n\n/***/ },\n/* 45 */\n1,\n/* 46 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function isBuffer(arg) {\n\t  return arg && typeof arg === 'object'\n\t    && typeof arg.copy === 'function'\n\t    && typeof arg.fill === 'function'\n\t    && typeof arg.readUInt8 === 'function';\n\t}\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 49 */\n12,\n/* 50 */\n12,\n/* 51 */\n12,\n/* 52 */\n12\n/******/ ])));\n\n\n/** WEBPACK FOOTER **\n ** index.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d70e183232fb4e4079be\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/inherits/inherits_browser.js\n ** module id = 1\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nforEach(objectKeys(Writable.prototype), function(method) {\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n});\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(this.end.bind(this));\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_duplex.js\n ** module id = 2\n ** module chunks = 0\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/buffer/index.js\n ** module id = 3\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 4\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/index.js\n ** module id = 5\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/core-util-is/lib/util.js\n ** module id = 6\n ** module chunks = 0\n **/","/*global window, global*/\nvar util = require(\"util\")\nvar assert = require(\"assert\")\nvar now = require(\"date-now\")\n\nvar slice = Array.prototype.slice\nvar console\nvar times = {}\n\nif (typeof global !== \"undefined\" && global.console) {\n    console = global.console\n} else if (typeof window !== \"undefined\" && window.console) {\n    console = window.console\n} else {\n    console = {}\n}\n\nvar functions = [\n    [log, \"log\"],\n    [info, \"info\"],\n    [warn, \"warn\"],\n    [error, \"error\"],\n    [time, \"time\"],\n    [timeEnd, \"timeEnd\"],\n    [trace, \"trace\"],\n    [dir, \"dir\"],\n    [consoleAssert, \"assert\"]\n]\n\nfor (var i = 0; i < functions.length; i++) {\n    var tuple = functions[i]\n    var f = tuple[0]\n    var name = tuple[1]\n\n    if (!console[name]) {\n        console[name] = f\n    }\n}\n\nmodule.exports = console\n\nfunction log() {}\n\nfunction info() {\n    console.log.apply(console, arguments)\n}\n\nfunction warn() {\n    console.log.apply(console, arguments)\n}\n\nfunction error() {\n    console.warn.apply(console, arguments)\n}\n\nfunction time(label) {\n    times[label] = now()\n}\n\nfunction timeEnd(label) {\n    var time = times[label]\n    if (!time) {\n        throw new Error(\"No such label: \" + label)\n    }\n\n    var duration = now() - time\n    console.log(label + \": \" + duration + \"ms\")\n}\n\nfunction trace() {\n    var err = new Error()\n    err.name = \"Trace\"\n    err.message = util.format.apply(null, arguments)\n    console.error(err.stack)\n}\n\nfunction dir(object) {\n    console.log(util.inspect(object) + \"\\n\")\n}\n\nfunction consoleAssert(expression) {\n    if (!expression) {\n        var arr = slice.call(arguments, 1)\n        assert.ok(false, util.format.apply(null, arr))\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/console-browserify/index.js\n ** module id = 7\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/events/events.js\n ** module id = 8\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(options, stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (!util.isNullOrUndefined(data))\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(options, this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this.once('prefinish', function() {\n    if (util.isFunction(this._flush))\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_transform.js\n ** module id = 9\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, cb), and it'll handle all\n// the drain event emission and buffering.\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Stream = require('stream');\n\nutil.inherits(Writable, Stream);\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n}\n\nfunction WritableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.buffer = [];\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nfunction Writable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, state, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  process.nextTick(function() {\n    cb(er);\n  });\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    process.nextTick(function() {\n      cb(er);\n    });\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (!util.isFunction(cb))\n    cb = function() {};\n\n  if (state.ended)\n    writeAfterEnd(this, state, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.buffer.length)\n      clearBuffer(this, state);\n  }\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      util.isString(chunk)) {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n  if (util.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked)\n    state.buffer.push(new WriteReq(chunk, encoding, cb));\n  else\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  if (sync)\n    process.nextTick(function() {\n      state.pendingcb--;\n      cb(er);\n    });\n  else {\n    state.pendingcb--;\n    cb(er);\n  }\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(stream, state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.buffer.length) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(function() {\n        afterWrite(stream, state, finished, cb);\n      });\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n\n  if (stream._writev && state.buffer.length > 1) {\n    // Fast case, write everything using _writev()\n    var cbs = [];\n    for (var c = 0; c < state.buffer.length; c++)\n      cbs.push(state.buffer[c].callback);\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n    state.buffer = [];\n  } else {\n    // Slow case, write chunks one-by-one\n    for (var c = 0; c < state.buffer.length; c++) {\n      var entry = state.buffer[c];\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        c++;\n        break;\n      }\n    }\n\n    if (c < state.buffer.length)\n      state.buffer = state.buffer.slice(c);\n    else\n      state.buffer.length = 0;\n  }\n\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (util.isFunction(chunk)) {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (util.isFunction(encoding)) {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (!util.isNullOrUndefined(chunk))\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(stream, state) {\n  return (state.ending &&\n          state.length === 0 &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(stream, state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else\n      prefinish(stream, state);\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      process.nextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_writable.js\n ** module id = 10\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/util/util.js\n ** module id = 11\n ** module chunks = 0\n **/","var http = module.exports;\nvar EventEmitter = require('events').EventEmitter;\nvar Request = require('./lib/request');\nvar url = require('url')\n\nhttp.request = function (params, cb) {\n    if (typeof params === 'string') {\n        params = url.parse(params)\n    }\n    if (!params) params = {};\n    if (!params.host && !params.port) {\n        params.port = parseInt(window.location.port, 10);\n    }\n    if (!params.host && params.hostname) {\n        params.host = params.hostname;\n    }\n\n    if (!params.protocol) {\n        if (params.scheme) {\n            params.protocol = params.scheme + ':';\n        } else {\n            params.protocol = window.location.protocol;\n        }\n    }\n\n    if (!params.host) {\n        params.host = window.location.hostname || window.location.host;\n    }\n    if (/:/.test(params.host)) {\n        if (!params.port) {\n            params.port = params.host.split(':')[1];\n        }\n        params.host = params.host.split(':')[0];\n    }\n    if (!params.port) params.port = params.protocol == 'https:' ? 443 : 80;\n    \n    var req = new Request(new xhrHttp, params);\n    if (cb) req.on('response', cb);\n    return req;\n};\n\nhttp.get = function (params, cb) {\n    params.method = 'GET';\n    var req = http.request(params, cb);\n    req.end();\n    return req;\n};\n\nhttp.Agent = function () {};\nhttp.Agent.defaultMaxSockets = 4;\n\nvar xhrHttp = (function () {\n    if (typeof window === 'undefined') {\n        throw new Error('no window object present');\n    }\n    else if (window.XMLHttpRequest) {\n        return window.XMLHttpRequest;\n    }\n    else if (window.ActiveXObject) {\n        var axs = [\n            'Msxml2.XMLHTTP.6.0',\n            'Msxml2.XMLHTTP.3.0',\n            'Microsoft.XMLHTTP'\n        ];\n        for (var i = 0; i < axs.length; i++) {\n            try {\n                var ax = new(window.ActiveXObject)(axs[i]);\n                return function () {\n                    if (ax) {\n                        var ax_ = ax;\n                        ax = null;\n                        return ax_;\n                    }\n                    else {\n                        return new(window.ActiveXObject)(axs[i]);\n                    }\n                };\n            }\n            catch (e) {}\n        }\n        throw new Error('ajax not supported in this browser')\n    }\n    else {\n        throw new Error('ajax not supported in this browser');\n    }\n})();\n\nhttp.STATUS_CODES = {\n    100 : 'Continue',\n    101 : 'Switching Protocols',\n    102 : 'Processing',                 // RFC 2518, obsoleted by RFC 4918\n    200 : 'OK',\n    201 : 'Created',\n    202 : 'Accepted',\n    203 : 'Non-Authoritative Information',\n    204 : 'No Content',\n    205 : 'Reset Content',\n    206 : 'Partial Content',\n    207 : 'Multi-Status',               // RFC 4918\n    300 : 'Multiple Choices',\n    301 : 'Moved Permanently',\n    302 : 'Moved Temporarily',\n    303 : 'See Other',\n    304 : 'Not Modified',\n    305 : 'Use Proxy',\n    307 : 'Temporary Redirect',\n    400 : 'Bad Request',\n    401 : 'Unauthorized',\n    402 : 'Payment Required',\n    403 : 'Forbidden',\n    404 : 'Not Found',\n    405 : 'Method Not Allowed',\n    406 : 'Not Acceptable',\n    407 : 'Proxy Authentication Required',\n    408 : 'Request Time-out',\n    409 : 'Conflict',\n    410 : 'Gone',\n    411 : 'Length Required',\n    412 : 'Precondition Failed',\n    413 : 'Request Entity Too Large',\n    414 : 'Request-URI Too Large',\n    415 : 'Unsupported Media Type',\n    416 : 'Requested Range Not Satisfiable',\n    417 : 'Expectation Failed',\n    418 : 'I\\'m a teapot',              // RFC 2324\n    422 : 'Unprocessable Entity',       // RFC 4918\n    423 : 'Locked',                     // RFC 4918\n    424 : 'Failed Dependency',          // RFC 4918\n    425 : 'Unordered Collection',       // RFC 4918\n    426 : 'Upgrade Required',           // RFC 2817\n    428 : 'Precondition Required',      // RFC 6585\n    429 : 'Too Many Requests',          // RFC 6585\n    431 : 'Request Header Fields Too Large',// RFC 6585\n    500 : 'Internal Server Error',\n    501 : 'Not Implemented',\n    502 : 'Bad Gateway',\n    503 : 'Service Unavailable',\n    504 : 'Gateway Time-out',\n    505 : 'HTTP Version Not Supported',\n    506 : 'Variant Also Negotiates',    // RFC 2295\n    507 : 'Insufficient Storage',       // RFC 4918\n    509 : 'Bandwidth Limit Exceeded',\n    510 : 'Not Extended',               // RFC 2774\n    511 : 'Network Authentication Required' // RFC 6585\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/index.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/lib/core.js\n ** module id = 14\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_passthrough.js\n ** module id = 15\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events').EventEmitter;\n\n/*<replacement>*/\nif (!EE.listenerCount) EE.listenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\nvar Stream = require('stream');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar StringDecoder;\n\n\n/*<replacement>*/\nvar debug = require('util');\nif (debug && debug.debuglog) {\n  debug = debug.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\n\nutil.inherits(Readable, Stream);\n\nfunction ReadableState(options, stream) {\n  var Duplex = require('./_stream_duplex');\n\n  options = options || {};\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = options.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  var Duplex = require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (util.isString(chunk) && !state.objectMode) {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (util.isNullOrUndefined(chunk)) {\n    state.reading = false;\n    if (!state.ended)\n      onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 128MB\nvar MAX_HWM = 0x800000;\nfunction roundUpToNextPowerOf2(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    for (var p = 1; p < 32; p <<= 1) n |= n >> p;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (isNaN(n) || util.isNull(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = roundUpToNextPowerOf2(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else\n      return state.length;\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (!util.isNumber(n) || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (util.isNull(ret)) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (!util.isNull(ret))\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!util.isBuffer(chunk) &&\n      !util.isString(chunk) &&\n      !util.isNullOrUndefined(chunk) &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.decoder && !state.ended) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      process.nextTick(function() {\n        emitReadable_(stream);\n      });\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(function() {\n      maybeReadMore_(stream, state);\n    });\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    process.nextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      debug('false write response, pause',\n            src._readableState.awaitDrain);\n      src._readableState.awaitDrain++;\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EE.listenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        var self = this;\n        process.nextTick(function() {\n          debug('readable nexttick read 0');\n          self.read(0);\n        });\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    if (!state.reading) {\n      debug('resume read 0');\n      this.read(0);\n    }\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(function() {\n      resume_(stream, state);\n    });\n  }\n}\n\nfunction resume_(stream, state) {\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n    if (!chunk || !state.objectMode && !chunk.length)\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }}(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(function() {\n      // Check that we didn't get one last unshift.\n      if (!state.endEmitted && state.length === 0) {\n        state.endEmitted = true;\n        stream.readable = false;\n        stream.emit('end');\n      }\n    });\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/lib/_stream_readable.js\n ** module id = 16\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/string_decoder/index.js\n ** module id = 17\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar punycode = require('punycode');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a puny coded representation of \"domain\".\n      // It only converts the part of the domain name that\n      // has non ASCII characters. I.e. it dosent matter if\n      // you call it with a domain that already is in ASCII.\n      var domainArray = this.hostname.split('.');\n      var newOut = [];\n      for (var i = 0; i < domainArray.length; ++i) {\n        var s = domainArray[i];\n        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?\n            'xn--' + punycode.encode(s) : s);\n      }\n      this.hostname = newOut.join('.');\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  Object.keys(this).forEach(function(k) {\n    result[k] = this[k];\n  }, this);\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    Object.keys(relative).forEach(function(k) {\n      if (k !== 'protocol')\n        result[k] = relative[k];\n    });\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      Object.keys(relative).forEach(function(k) {\n        result[k] = relative[k];\n      });\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especialy happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!isNull(result.pathname) || !isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host) && (last === '.' || last === '..') ||\n      last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last == '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especialy happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!isNull(result.pathname) || !isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\nfunction isString(arg) {\n  return typeof arg === \"string\";\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isNull(arg) {\n  return arg === null;\n}\nfunction isNullOrUndefined(arg) {\n  return  arg == null;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url/url.js\n ** module id = 18\n ** module chunks = 0\n **/","if(typeof window !== 'undefined') {\n  if (typeof Promise === 'undefined') {\n    require('promise/lib/rejection-tracking').enable();\n    window.Promise = require('promise/lib/es6-extensions.js');\n  }\n  require('whatwg-fetch');\n  Object.assign = require('object-assign');\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./config/polyfills.js\n ** module id = 19\n ** module chunks = 0\n **/",";(function () {\n\n  var object = typeof exports != 'undefined' ? exports : this; // #8: web workers\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function InvalidCharacterError(message) {\n    this.message = message;\n  }\n  InvalidCharacterError.prototype = new Error;\n  InvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n  // encoder\n  // [https://gist.github.com/999166] by [https://github.com/nignag]\n  object.btoa || (\n  object.btoa = function (input) {\n    for (\n      // initialize result and counter\n      var block, charCode, idx = 0, map = chars, output = '';\n      // if the next input index does not exist:\n      //   change the mapping table to \"=\"\n      //   check if d has no fractional digits\n      input.charAt(idx | 0) || (map = '=', idx % 1);\n      // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n      output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n    ) {\n      charCode = input.charCodeAt(idx += 3/4);\n      if (charCode > 0xFF) {\n        throw new InvalidCharacterError(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\");\n      }\n      block = block << 8 | charCode;\n    }\n    return output;\n  });\n\n  // decoder\n  // [https://gist.github.com/1020396] by [https://github.com/atk]\n  object.atob || (\n  object.atob = function (input) {\n    input = input.replace(/=+$/, '');\n    if (input.length % 4 == 1) {\n      throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n    }\n    for (\n      // initialize result and counters\n      var bc = 0, bs, buffer, idx = 0, output = '';\n      // get next character\n      buffer = input.charAt(idx++);\n      // character found in table? initialize bit storage and add its ascii value;\n      ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n        // and if not first of each 4 characters,\n        // convert the first 8 bits to one ascii character\n        bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n    ) {\n      // try to find character in table (0-63, not found => -1)\n      buffer = chars.indexOf(buffer);\n    }\n    return output;\n  });\n\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Base64/base64.js\n ** module id = 20\n ** module chunks = 0\n **/","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/asap/browser-raw.js\n ** module id = 21\n ** module chunks = 0\n **/","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/assert/assert.js\n ** module id = 22\n ** module chunks = 0\n **/","import { fabric } from 'fabric';\n//import bot_bar from 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/bottom_bar%402x.png';\n//import celeb_spiral from 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/celeberation-spiral%402x.png';\n//import non_moving_parts from 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/non-moving-parts%20copy.png';\n//import dat_wheel from 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/wheel%402x.png';\n\nfabric.Object.prototype.originX = fabric.Object.prototype.originY = 'center';\n\nlet wheel = null;\nlet bg = null;\nlet username = null;\nlet subscribed = null;\nlet winsTxt = null;\nlet winningsTxt = null;\nlet ray = null;\n\nclass Notify {\n\n  constructor(width, height, widget, canvas) {\n    this.width = width;\n    this.height = height;\n    this.widget = widget;\n    this.canvas = new fabric.StaticCanvas(canvas);\n    /*\n     ^^Only nessecary if you're using fabric. Otherwise, just do:\n     this.canvas = canvas;\n     */\n    this.onMessage = this.onMessage.bind(this);\n    this.enqueueAnimation = this.enqueueAnimation.bind(this);\n    this.render = this.render.bind(this);\n    this.finish  = this.finish.bind(this);\n    this.spin = this.spin.bind(this);\n    this.calculateFromEndPoint = this.calculateFromEndPoint.bind(this);\n    this.afterSpin = this.afterSpin.bind(this);\n    this.afterAnimation = this.afterAnimation.bind(this);\n\n    this.canvas.on('object:added', (e) => {\n      if (e.target && e.target._isWheel && !wheel) {\n        wheel = e.target;\n        this.spin(e.target._optionsPassThrough);\n      }\n      if (e.target && e.target._isBg && !bg) {\n        bg = e.target;\n      }\n      if(e.target && e.target._isRay && !ray){\n        ray = e.target;\n      }\n    });\n\n    //^^Set variables\n    this.queue = [];\n    this.isRunning = false;\n  }\n\n  render(options) {\n    this.canvas.setHeight(this.height);\n    this.canvas.setWidth(this.width);\n\n    fabric.Image.fromURL('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/celeberation-spiral%402x.png', (img0) => {\n      img0\n        .setLeft(this.width / 2)\n        .setTop(this.height / 1.095)\n        .scaleToWidth(this.width*1.4)\n        .setAngle(180)\n        .set('opacity', 0);\n      img0._isRay = true;\n      this.canvas.add(img0);\n\n      fabric.Image.fromURL('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/wheel%402x.png', (img1) => {\n        img1\n          .setLeft(this.width / 2)\n          .setTop(this.height / 1.095)\n          .setWidth(this.width - this.width * .045)\n          .setHeight(this.width - this.width * .045);\n        img1._isWheel = true;\n        img1._optionsPassThrough = options;\n        this.canvas.add(img1);\n        fabric.Image.fromURL('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/non-moving-parts%20copy.png', (img2) => {\n          img2._isBg = true;\n          img2\n            .setLeft(this.width / 2)\n            .setTop(this.height / 1.1)\n            .scaleToWidth(this.width);\n          this.canvas.add(img2);\n          fabric.Image.fromURL('https://s3-us-west-2.amazonaws.com/s.cdpn.io/1045838/bottom_bar%402x.png', (img3) => {\n            img3\n              .setLeft(this.width / 1.98)\n              .setTop(this.height / 1.095)\n              .scaleToWidth(this.width);\n            this.canvas.add(img3);\n\n            this.canvas.add(\n              username = new fabric.Text(`${options.username}`, {\n                width: this.width,\n                height: this.height,\n                left: this.width / 2,\n                top: this.height / 4,\n                fill: 'turquoise',\n                fontFamily: 'Titillium Web',\n                fontSize: (48/450) * this.height,\n                fontWeight: 600\n              })\n            );\n            this.canvas.add(\n              subscribed = new fabric.Text(options.isResub ? `${options.months} MONTH RESUB` : `NEW SUBSCRIBER`, {\n                width: this.width,\n                height: this.height,\n                left: this.width / 2,\n                top: this.height / 3,\n                fill: 'white',\n                fontFamily: 'Titillium Web',\n                fontSize: (28/450) * this.height,\n                fontWeight: 600\n              })\n            );\n            this.canvas.add(\n              winsTxt = new fabric.Text(`WINS`, {\n                width: this.width,\n                height: this.height,\n                left: this.width / 2,\n                top: this.height / 3,\n                fill: 'red',\n                fontFamily: 'Titillium Web',\n                fontSize: (36/450) * this.height,\n                fontWeight: 900,\n                opacity: 0\n              })\n            );\n            this.canvas.add(\n              winningsTxt = new fabric.Text(``, {\n                width: this.width,\n                height: this.height,\n                left: this.width / 2,\n                top: this.height / 2.3,\n                fill: 'white',\n                fontFamily: 'Titillium Web',\n                fontSize: (36/450) * this.height,\n                fontWeight: 700,\n                opacity: 0\n              })\n            );\n          });\n        });\n      });\n    });\n\n  }\n\n  calculateFromEndPoint(landOn){\n    let endAngle = 0;\n\n    switch (landOn) {\n      case 50:\n        endAngle = [20, 110, 201, 291][Math.floor(Math.random() * 4)]\n        break;\n      case 100:\n        endAngle = [43, 88, 133, 224, 269, 314][Math.floor(Math.random() * 6)];\n        break;\n      case 200:\n        endAngle = [64, 155, 246, 336][Math.floor(Math.random() * 4)];\n        break;\n      case 1500:\n        endAngle = 178;\n        break;\n      case 'jack':\n        endAngle = 359;\n        break;\n      default:\n        endAngle = 30;\n        break;\n    }\n    endAngle -= Math.floor(Math.random() * 18);\n    return endAngle;\n  }\n\n  spin(options){\n    const calculatedAngle = this.calculateFromEndPoint(options.win);\n    wheel.animate('angle', 7200 - calculatedAngle, {\n      onChange: this.canvas.renderAll.bind(this.canvas),\n      duration: 6000,\n      easing: fabric.util.ease.easeOutCirc\n    });\n    setTimeout(() => {\n      this.afterSpin(options);\n    }, 6000);\n  }\n\n  afterSpin(options){\n    //fade out & remove (re)sub text\n\n    if(options.win !== 'jack'){\n      if(options.months === 0){\n        winningsTxt.setText(`${options.win} coins`)\n      } else {\n        winningsTxt.setText(`${options.months} x ${options.win} coins`)\n      }\n    } else {\n      winningsTxt.setText(`THE JACKPOT`)\n    }\n\n\n    ray.animate('opacity', .8, {\n      duration: 300,\n      onChange: this.canvas.renderAll.bind(this.canvas),\n    });\n\n    ray.animate('angle', 720, {\n      onChange: this.canvas.renderAll.bind(this.canvas),\n      duration: 10000,\n    });\n\n    subscribed.animate('opacity', '0', {\n      duration: 500,\n      onChange: this.canvas.renderAll.bind(this.canvas),\n      onComplete: () => {\n        this.canvas.remove(subscribed);\n      }\n    });\n\n    winsTxt.animate('opacity', '1', {\n      duration: 500,\n      onChange: this.canvas.renderAll.bind(this.canvas),\n    });\n\n    winsTxt.animate('top', this.height / 3.5, {\n      duration: 500,\n      onChange: this.canvas.renderAll.bind(this.canvas),\n    });\n\n    winningsTxt.animate('opacity', '1', {\n      duration: 500,\n      onChange: this.canvas.renderAll.bind(this.canvas),\n    });\n\n    winningsTxt.animate('top', this.height / 2.8, {\n      duration: 500,\n      onChange: this.canvas.renderAll.bind(this.canvas),\n    });\n\n    username.animate('top', this.height / 5, {\n      duration: 500,\n      onChange: this.canvas.renderAll.bind(this.canvas),\n    });\n\n    setTimeout(this.afterAnimation, 3000);\n  }\n\n  afterAnimation(){\n    this.canvas.getObjects().map((o) => {\n      o.animate('top', this.height, {\n        duration: 300,\n        onChange: this.canvas.renderAll.bind(this.canvas)\n      });\n      o.animate('opacity', 0, {\n        duration: 300,\n        onChange: this.canvas.renderAll.bind(this.canvas),\n        onComplete: () => {\n          this.canvas.remove(o);\n          wheel = null;\n          bg = null;\n          username = null;\n          subscribed = null;\n          winsTxt = null;\n          winningsTxt = null;\n          ray = null;\n        }\n      });\n    });\n    setTimeout(this.finish, 400);\n  }\n\n  finish(){\n    this.isRunning = false;\n    if(this.queue && this.queue.length){\n      const nextInQueue = this.queue.shift();\n      this.enqueueAnimation(nextInQueue);\n    }\n  }\n\n  enqueueAnimation(options){\n    if(this.isRunning){\n      this.queue.push(options);\n    } else {\n      this.isRunning = true;\n      this.render(options);\n    }\n  }\n\n  onMessage(streamAction) {\n    //Called when someone in Twitch calls your command\n\n    this.enqueueAnimation(streamAction.data);\n\n  }\n}\n\nexport default Notify;\n\n//^^Nessecary for Webpack to compile\n\nif(window !== undefined){\n  window.notify = Notify;\n}\n\n//^^Nessecary for Bebo to require in NOTE: make the property lowercase (i.e example !== Example)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base64-js/index.js\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = now\n\nfunction now() {\n    return new Date().getTime()\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/date-now/index.js\n ** module id = 25\n ** module chunks = 0\n **/","/* build: `node build.js modules=ALL exclude=json,gestures minifier=uglifyjs` */\n /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: \"1.7.3\" };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require(\"jsdom\")\n    .jsdom(\n      decodeURIComponent(\"%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E\")\n    );\n\n  if (fabric.document.createWindow) {\n    fabric.window = fabric.document.createWindow();\n  } else {\n    fabric.window = fabric.document.parentWindow;\n  }\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = \"ontouchstart\" in fabric.document.documentElement;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.renderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = Math.sin(radians),\n          cos = Math.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = Math.abs(minX - maxX),\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = Math.abs(minY - maxY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      img.onload = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length,\n          forceAsync = true;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        }, forceAsync);\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.PathGroup}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n\n      object = new fabric.PathGroup(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.setSourcePath(path);\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Propertie names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element and initializes it via excanvas if necessary\n     * @static\n     * @memberOf fabric.util\n     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;\n     * when not given, element is created implicitly\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function(canvasEl) {\n      canvasEl || (canvasEl = fabric.document.createElement('canvas'));\n      /* eslint-disable camelcase */\n      if (!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined') {\n        G_vmlCanvasManager.initElement(canvasEl);\n      }\n      /* eslint-enable camelcase */\n      return canvasEl;\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.isLikelyNode\n        ? new (require('canvas').Image)()\n        : fabric.document.createElement('img');\n    },\n\n    /**\n     * Creates accessors (getXXX, setXXX) for a \"class\", based on \"stateProperties\" array\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} klass \"Class\" to create accessors for\n     */\n    createAccessors: function(klass) {\n      var proto = klass.prototype, i, propName,\n          capitalizedPropName, setterName, getterName;\n\n      for (i = proto.stateProperties.length; i--; ) {\n\n        propName = proto.stateProperties[i];\n        capitalizedPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\n        setterName = 'set' + capitalizedPropName;\n        getterName = 'get' + capitalizedPropName;\n\n        // using `new Function` for better introspection\n        if (!proto[getterName]) {\n          proto[getterName] = (function(property) {\n            return new Function('return this.get(\"' + property + '\")');\n          })(propName);\n        }\n        if (!proto[setterName]) {\n          proto[setterName] = (function(property) {\n            return new Function('value', 'return this.set(\"' + property + '\", value)');\n          })(propName);\n        }\n      }\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.setAngle(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for a font family.\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = Math.sin(th),\n        cosTh = Math.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = Math.cos(th2),\n        sinth2 = Math.sin(th2),\n        costh3 = Math.cos(th3),\n        sinth3 = Math.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /* _ES5_COMPAT_START_ */\n\n  if (!Array.prototype.indexOf) {\n    /**\n     * Finds index of an element in an array\n     * @param {*} searchElement\n     * @return {Number}\n     */\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      if (this === void 0 || this === null) {\n        throw new TypeError();\n      }\n      var t = Object(this), len = t.length >>> 0;\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 0) {\n        n = Number(arguments[1]);\n        if (n !== n) { // shortcut for verifying if it's NaN\n          n = 0;\n        }\n        else if (n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n        return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    };\n  }\n\n  if (!Array.prototype.forEach) {\n    /**\n     * Iterates an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.forEach = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          fn.call(context, this[i], i, this);\n        }\n      }\n    };\n  }\n\n  if (!Array.prototype.map) {\n    /**\n     * Returns a result of iterating over an array, invoking callback for each element\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.map = function(fn, context) {\n      var result = [];\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          result[i] = fn.call(context, this[i], i, this);\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.every) {\n    /**\n     * Returns true if a callback returns truthy value for all elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.every = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && !fn.call(context, this[i], i, this)) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  if (!Array.prototype.some) {\n    /**\n     * Returns true if a callback returns truthy value for at least one element in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Boolean}\n     */\n    Array.prototype.some = function(fn, context) {\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this && fn.call(context, this[i], i, this)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n\n  if (!Array.prototype.filter) {\n    /**\n     * Returns the result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @param {Object} [context] Context to invoke callback in\n     * @return {Array}\n     */\n    Array.prototype.filter = function(fn, context) {\n      var result = [], val;\n      for (var i = 0, len = this.length >>> 0; i < len; i++) {\n        if (i in this) {\n          val = this[i]; // in case fn mutates this\n          if (fn.call(context, val, i, this)) {\n            result.push(val);\n          }\n        }\n      }\n      return result;\n    };\n  }\n\n  if (!Array.prototype.reduce) {\n    /**\n     * Returns \"folded\" (reduced) result of iterating over elements in an array\n     * @param {Function} fn Callback to invoke for each element\n     * @return {*}\n     */\n    Array.prototype.reduce = function(fn /*, initial*/) {\n      var len = this.length >>> 0,\n          i = 0,\n          rv;\n\n      if (arguments.length > 1) {\n        rv = arguments[1];\n      }\n      else {\n        do {\n          if (i in this) {\n            rv = this[i++];\n            break;\n          }\n          // if array contains no values, no initial value to return\n          if (++i >= len) {\n            throw new TypeError();\n          }\n        }\n        while (true);\n      }\n      for (; i < len; i++) {\n        if (i in this) {\n          rv = fn.call(null, rv, this[i], i, this);\n        }\n      }\n      return rv;\n    };\n  }\n\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n\n})();\n\n\n(function() {\n\n  /* _ES5_COMPAT_START_ */\n  if (!String.prototype.trim) {\n    /**\n     * Trims a string (removing whitespace from the beginning and the end)\n     * @function external:String#trim\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim\">String#trim on MDN</a>\n     */\n    String.prototype.trim = function () {\n      // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now\n      return this.replace(/^[\\s\\xA0]+/, '').replace(/[\\s\\xA0]+$/, '');\n    };\n  }\n  /* _ES5_COMPAT_END_ */\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n       .replace(/\"/g, '&quot;')\n       .replace(/'/g, '&apos;')\n       .replace(/</g, '&lt;')\n       .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml\n  };\n})();\n\n\n/* _ES5_COMPAT_START_ */\n(function() {\n\n  var slice = Array.prototype.slice,\n      apply = Function.prototype.apply,\n      Dummy = function() { };\n\n  if (!Function.prototype.bind) {\n    /**\n     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)\n     * @see <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">Function#bind on MDN</a>\n     * @param {Object} thisArg Object to bind function to\n     * @param {Any[]} Values to pass to a bound function\n     * @return {Function}\n     */\n    Function.prototype.bind = function(thisArg) {\n      var _this = this, args = slice.call(arguments, 1), bound;\n      if (args.length) {\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, args.concat(slice.call(arguments)));\n        };\n      }\n      else {\n        /** @ignore */\n        bound = function() {\n          return apply.call(_this, this instanceof Dummy ? this : thisArg, arguments);\n        };\n      }\n      Dummy.prototype = this.prototype;\n      bound.prototype = new Dummy();\n\n      return bound;\n    };\n  }\n\n})();\n/* _ES5_COMPAT_END_ */\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var fn = this.constructor.superclass.prototype[methodName];\n    return (arguments.length > 1)\n      ? fn.apply(this, slice.call(arguments, 1))\n      : fn.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      element.addEventListener(eventName, handler, false);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      element.removeEventListener(eventName, handler, false);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n    // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)\n    // is represented as COM object, with all the consequences, like \"unknown\" type and error on [[Get]]\n    // need to investigate later\n        return (typeof event.clientX !== unknown ? event.clientX : 0);\n      },\n\n      pointerY = function(event) {\n        return (typeof event.clientY !== unknown ? event.clientY : 0);\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n\n    return (event[touchProp] && event[touchProp][0]\n      ? (event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]))\n        || event[clientProp]\n      : event[clientProp]);\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 &&\n          fabric.util.getElementStyle(element, 'position') === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || function() { },\n          abort = options.abort || function() { return false; },\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start);\n        if (abort()) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        onChange(easing(currentTime, startValue, byValue, duration));\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n              ? options.colorEasing(currentTime, duration)\n              : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      reAllowedSVGTagNames = /^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/i,\n      reViewBoxTagNames = /^(symbol|image|marker|pattern|view|svg)$/i,\n      reNotAllowedAncestors = /^(?:pattern|defs|symbol|metadata|clipPath|mask)$/i,\n      reAllowedParents = /^(symbol|g|a|svg)$/i,\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'originX'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = (value === 'none' || value === 'hidden') ? false : true;\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'originX' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList;\n    for (var i = 0; i < nodeNames.length; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = Math.cos(args[0]), sin = Math.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = normalizeAttr(pair[0].trim().toLowerCase());\n      value = normalizeValue(attr, pair[1].trim());\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = normalizeAttr(prop.toLowerCase());\n      value = normalizeValue(attr, style[prop]);\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (var i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, nodelist = doc.getElementsByTagName('*');\n    for (i = 0; i < nodelist.length; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, l;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, l = attrs.length; j < l; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, l = attrs.length; j < l; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !reViewBoxTagNames.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '';\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX) + ' ' +\n                  (minY * scaleY) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (var i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return reAllowedSVGTagNames.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, reNotAllowedAncestors); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances) {\n      if (callback) {\n        callback(instances, options);\n      }\n    }, clone(options), reviver);\n  };\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && reAllowedParents.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) {\n          attr = normalizeAttr(attr);\n          value = normalizeValue(attr, value, parentAttributes, fontSize);\n\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n      if (ownAttributes.font) {\n        fabric.parseFontDeclaration(ownAttributes.font, ownAttributes);\n      }\n      return _setStrokeFillOpacity(extend(parentAttributes, ownAttributes));\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver) {\n      new fabric.ElementsParser(elements, callback, options, reviver).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      i = 0;\n      len = points.length;\n      for (; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (var i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (var i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = normalizeAttr(pair[0]),\n                value = normalizeValue(property, pair[1], pair[0]);\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    loadSVGFromURL: function(url, callback, reviver) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, options) {\n          callback && callback(results, options);\n        }, reviver);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    loadSVGFromString: function(string, callback, reviver) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, options) {\n        callback(results, options);\n      }, reviver);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  if (klass.async) {\n    klass.fromElement(el, this.createCallback(index, el), this.options);\n  }\n  else {\n    var obj = klass.fromElement(el, this.options);\n    this.resolveGradient(obj, 'fill');\n    this.resolveGradient(obj, 'stroke');\n    this.reviver && this.reviver(el, obj);\n    this.instances[index] = obj;\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj.get(property);\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = instanceFillValue.slice(5, instanceFillValue.length - 1);\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Miltiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Miltiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter;\n\n    for (var i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length;\n\n    for (var i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color represenation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color represenation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color represenation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color represenation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color represenation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource();\n\n      for (var i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n   // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 17 basic color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units\n   */\n  fabric.Color.colorNameMap = {\n    aqua:    '#00FFFF',\n    black:   '#000000',\n    blue:    '#0000FF',\n    fuchsia: '#FF00FF',\n    gray:    '#808080',\n    grey:    '#808080',\n    green:   '#008000',\n    lime:    '#00FF00',\n    maroon:  '#800000',\n    navy:    '#000080',\n    olive:   '#808000',\n    orange:  '#FFA500',\n    purple:  '#800080',\n    red:     '#FF0000',\n    silver:  '#C0C0C0',\n    teal:    '#008080',\n    white:   '#FFFFFF',\n    yellow:  '#FFFF00'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (var i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: position,\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = fabric.util.object.clone(this.coords),\n          markup, commonAttributes;\n\n      // colorStops must be sorted ascending\n      this.colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (!(object.group && object.group.type === 'path-group')) {\n        for (var prop in coords) {\n          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n            coords[prop] += this.offsetX - object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += this.offsetY - object.height / 2;\n          }\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', coords.x2,\n          '\" cy=\"', coords.y2,\n          '\" r=\"', coords.r2,\n          '\" fx=\"', coords.x1,\n          '\" fy=\"', coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      for (var i = 0; i < this.colorStops.length; i++) {\n        markup.push(\n          '<stop ',\n            'offset=\"', (this.colorStops[i].offset * 100) + '%',\n            '\" style=\"stop-color:', this.colorStops[i].color,\n            (this.colorStops[i].opacity !== null ? ';stop-opacity: ' + this.colorStops[i].opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} object\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx, object) {\n      var gradient, prop, coords = fabric.util.object.clone(this.coords);\n\n      if (!this.type) {\n        return;\n      }\n\n      if (object.group && object.group.type === 'path-group') {\n        for (prop in coords) {\n          if (prop === 'x1' || prop === 'x2') {\n            coords[prop] += -this.offsetX + object.width / 2;\n          }\n          else if (prop === 'y1' || prop === 'y2') {\n            coords[prop] += -this.offsetY + object.height / 2;\n          }\n        }\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (var i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(parseFloat(offset), color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (var i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^\\d+%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        });\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px, \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20;\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + this.color + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.\n     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once\n     * (followed by a manual rendering after addition/deletion)\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: [1, 0, 0, 1, 0, 0],\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = fabric.StaticCanvas.prototype.renderAll.bind(this);\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function(canvasEl) {\n      var element = fabric.util.createCanvasElement(canvasEl);\n      if (!element.style) {\n        element.style = { };\n      }\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement(canvasEl);\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.renderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeGroup = this._activeGroup, object, ingoreVpt = false, skipAbsolute = true;\n      this.viewportTransform = vpt;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ingoreVpt, skipAbsolute);\n      }\n      if (activeGroup) {\n        activeGroup.setCoords(ingoreVpt, skipAbsolute);\n      }\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = fabric.util.transformPoint(point, fabric.util.invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = fabric.util.transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('selection:cleared', this._canvasITextSelectionClearedHanlder);\n        this.off('object:selected', this._canvasITextSelectionClearedHanlder);\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Renders both the canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform.apply(ctx, this.viewportTransform);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      for (var i = 0, length = objects.length; i < length; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'];\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          ctx.save();\n          ctx.transform.apply(ctx, this.viewportTransform);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.getHeight() / 2,\n        left: this.getWidth() / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = fabric.util.invertTransform(this.viewportTransform);\n      return fabric.util.transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      this.renderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { };\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (this.backgroundImage) {\n        data.backgroundImage = this._toObject(this.backgroundImage, methodName, propertiesToInclude);\n      }\n      if (this.overlayImage) {\n        data.overlayImage = this._toObject(this.overlayImage, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n          '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n            '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n          'xmlns=\"http://www.w3.org/2000/svg\" ',\n          'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n          'version=\"1.1\" ',\n          'width=\"', width, '\" ',\n          'height=\"', height, '\" ',\n          viewBox,\n          'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n          this.createSVGFontFacesMarkup(),\n          this.createSVGRefElementsMarkup(),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex,\n          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance;\n      for (var i = 0, objects = this.getObjects(), len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * push single object svg representation in the markup\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', this.width / 2, ',', this.height / 2, ')\"',\n            ' x=\"', filler.offsetX - this.width / 2, '\" y=\"', filler.offsetY - this.height / 2, '\" ',\n            'width=\"',\n              (repeat === 'repeat-y' || repeat === 'no-repeat'\n                ? filler.source.width\n                : this.width),\n            '\" height=\"',\n              (repeat === 'repeat-x' || repeat === 'no-repeat'\n                ? filler.source.height\n                : this.height),\n            '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" ',\n            'width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, objs;\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx !== 0) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (var i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeGroup = this._activeGroup,\n          i, obj, idx, newIdx, objs;\n\n      if (object === activeGroup) {\n        objs = activeGroup._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx !== this._objects.length - 1) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderAll && this.renderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (var i = idx + 1; i < this._objects.length; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderAll && this.renderAll();\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.clear();\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevil\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray);\n    }\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      this._captureDrawingPath(pointer);\n      // redraw curve\n      // clear top canvas\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._render();\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      this._points.push(point);\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop,\n          v = this.canvas.viewportTransform,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      ctx.beginPath();\n\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        p1.x -= 0.5;\n        p2.x += 0.5;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (var i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        var midPoint = p1.midPointFrom(p2);\n        ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [],\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y);\n\n      path.push('M ', points[0].x, ' ', points[0].y, ' ');\n      for (var i = 1, len = points.length; i < len; i++) {\n        var midPoint = p1.midPointFrom(p2);\n        // p1 is our bezier control point\n        // midpoint is our endpoint\n        // start point is p(i-1) value.\n        path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        p1 = new fabric.Point(points[i].x, points[i].y);\n        if ((i + 1) < points.length) {\n          p2 = new fabric.Point(points[i + 1].x, points[i + 1].y);\n        }\n      }\n      path.push('L ', p1.x, ' ', p1.y, ' ');\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n        originX: 'center',\n        originY: 'center'\n      });\n\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.renderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n\n      this.canvas.add(path);\n      path.setCoords();\n\n      this.canvas.clearContext(this.canvas.contextTop);\n      this._resetShadow();\n      this.canvas.renderAll();\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop,\n        v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (var i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n                        Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n                        .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n                        .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render();\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n\n        this.shadow && rect.setShadow(this.shadow);\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.renderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key;\n\n    for (var i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Renders brush\n   */\n  render: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n    for (var i = 0, len = this.sprayChunkPoints.length; i < len; i++) {\n      var point = this.sprayChunkPoints[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2;\n\n    for (var i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:added\n   * @fires object:modified\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:selected\n   *\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:over\n   * @fires mouse:out\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transfrom\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key enable multiple click selection\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          object, objsToRender = [], activeGroupObjects = [];\n\n      if ((activeGroup || activeObject) && !this.preserveObjectStacking) {\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if ((!activeGroup || !activeGroup.contains(object)) && object !== activeObject) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeGroup) {\n          activeGroup._set('_objects', activeGroupObjects);\n          objsToRender.push(activeGroup);\n        }\n        activeObject && objsToRender.push(activeObject);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.action === 'rotate') {\n          this._setOriginToCenter(t.target);\n        }\n        else {\n          if (t.originX !== 'center') {\n            if (t.originX === 'right') {\n              t.mouseXSign = -1;\n            }\n            else {\n              t.mouseXSign = 1;\n            }\n          }\n          if (t.originY !== 'center') {\n            if (t.originY === 'bottom') {\n              t.mouseYSign = -1;\n            }\n            else {\n              t.mouseYSign = 1;\n            }\n          }\n\n          t.originX = 'center';\n          t.originY = 'center';\n        }\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this.getActiveGroup()) {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      var hasBorders = target.hasBorders,\n          transparentCorners = target.transparentCorners,\n          ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor;\n\n      target.hasBorders = target.transparentCorners = false;\n      target.selectionBackgroundColor = '';\n\n      ctx.save();\n      ctx.transform.apply(ctx, this.viewportTransform);\n      target.render(ctx);\n      ctx.restore();\n\n      target.active && target._renderControls(ctx);\n\n      target.hasBorders = hasBorders;\n      target.transparentCorners = transparentCorners;\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      this.clearContext(ctx);\n\n      return isTransparent;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n\n      return (\n        !target\n        ||\n        (target &&\n          activeGroup &&\n          !activeGroup.contains(target) &&\n          activeGroup !== target &&\n          !e[this.selectionKey])\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        left: target.left,\n        top: target.top,\n        theta: degreesToRadians(target.angle),\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.get('lockScalingX'),\n          lockScalingY = target.get('lockScalingY'),\n          lockScalingFlip = target.get('lockScalingFlip');\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        forbidScalingX || forbidScalingY || (scaled = this._scaleObjectEqually(localMouse, target, transform, _dim));\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = transform.original.scaleX * dist / lastDist;\n      transform.newScaleY = transform.original.scaleY * dist / lastDist;\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > target.padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += target.padding;\n        }\n        else {\n          localMouse.x -= target.padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > target.padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += target.padding;\n        }\n        else {\n          localMouse.y -= target.padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform;\n\n      if (t.target.get('lockRotation')) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - t.top, t.ex - t.left),\n          curAngle = atan2(y - t.top, x - t.left),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRoated = true;\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n\n      angle %= 360;\n\n      if (t.target.snapAngle > 0) {\n        var snapAngle  = t.target.snapAngle,\n            snapThreshold  = t.target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n\n        if (t.target.angle === angle) {\n          hasRoated = false;\n        }\n      }\n\n      t.target.angle = angle;\n      return hasRoated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.setAngle(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject(),\n          activeTarget;\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      if (activeGroup && !skipGroup && this._checkTarget(pointer, activeGroup)) {\n        this._fireOverOutEvents(activeGroup, e);\n        return activeGroup;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (activeObject && activeObject._findTargetCorner(pointer)) {\n        this._fireOverOutEvents(activeObject, e);\n        return activeObject;\n      }\n      if (activeObject && this._checkTarget(pointer, activeObject)) {\n        if (!this.preserveObjectStacking) {\n          this._fireOverOutEvents(activeObject, e);\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n        }\n      }\n\n      this.targets = [];\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n      }\n      this._fireOverOutEvents(target, e);\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      if (target) {\n        if (this._hoveredTarget !== target) {\n          if (this._hoveredTarget) {\n            this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n            this._hoveredTarget.fire('mouseout');\n          }\n          this.fire('mouse:over', { target: target, e: e });\n          target.fire('mouseover');\n          this._hoveredTarget = target;\n        }\n      }\n      else if (this._hoveredTarget) {\n        this.fire('mouse:out', { target: this._hoveredTarget, e: e });\n        this._hoveredTarget.fire('mouseout');\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // untill we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.type === 'group' && target.subTargetCheck) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom, upperCanvasEl) {\n      if (!upperCanvasEl) {\n        upperCanvasEl = this.upperCanvasEl;\n      }\n      var pointer = getPointer(e),\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      this.upperCanvasEl = this._createCanvasElement();\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.getWidth() + 'px',\n        height: this.getHeight() + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.getWidth() || element.width,\n          height = this.getHeight() || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copys the the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _setActiveObject: function(object) {\n      if (this._activeObject) {\n        this._activeObject.set('active', false);\n      }\n      this._activeObject = object;\n      object.set('active', true);\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      this._setActiveObject(object);\n      this.renderAll();\n      this.fire('object:selected', { target: object, e: e });\n      object.fire('selected', { e: e });\n      return this;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (this.getActiveObject() === obj) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function() {\n      if (this._activeObject) {\n        this._activeObject.set('active', false);\n      }\n      this._activeObject = null;\n    },\n\n    /**\n     * Discards currently active object and fire events\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var activeObject = this._activeObject;\n      this.fire('before:selection:cleared', { target: activeObject, e: e });\n      this._discardActiveObject();\n      this.fire('selection:cleared', { e: e });\n      activeObject && activeObject.fire('deselected', { e: e });\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Group} group\n     */\n    _setActiveGroup: function(group) {\n      this._activeGroup = group;\n      if (group) {\n        group.set('active', true);\n      }\n    },\n\n    /**\n     * Sets active group to a specified one\n     * @param {fabric.Group} group Group to set as a current one\n     * @param {Event} e Event object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveGroup: function (group, e) {\n      this._setActiveGroup(group);\n      if (group) {\n        this.fire('object:selected', { target: group, e: e });\n        group.fire('selected', { e: e });\n      }\n      return this;\n    },\n\n    /**\n     * Returns currently active group\n     * @return {fabric.Group} Current group\n     */\n    getActiveGroup: function () {\n      return this._activeGroup;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveGroup: function() {\n      var g = this.getActiveGroup();\n      if (g) {\n        g.destroy();\n      }\n      this.setActiveGroup(null);\n    },\n\n    /**\n     * Discards currently active group and fire events\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveGroup: function (e) {\n      var g = this.getActiveGroup();\n      this.fire('before:selection:cleared', { e: e, target: g });\n      this._discardActiveGroup();\n      this.fire('selection:cleared', { e: e });\n      return this;\n    },\n\n    /**\n     * Deactivates all objects on canvas, removing any active group or object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAll: function () {\n      var allObjects = this.getObjects(),\n          i = 0,\n          len = allObjects.length,\n          obj;\n      for ( ; i < len; i++) {\n        obj = allObjects[i];\n        obj && obj.set('active', false);\n      }\n      this._discardActiveGroup();\n      this._discardActiveObject();\n      return this;\n    },\n\n    /**\n     * Deactivates all objects and dispatches appropriate events\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    deactivateAllWithDispatch: function (e) {\n      var activeGroup = this.getActiveGroup(),\n          activeObject = this.getActiveObject();\n      if (activeObject || activeGroup) {\n        this.fire('before:selection:cleared', { target: activeObject || activeGroup, e: e });\n      }\n      this.deactivateAll();\n      if (activeObject || activeGroup) {\n        this.fire('selection:cleared', { e: e, target: activeObject });\n        activeObject && activeObject.fire('deselected');\n      }\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      this.callSuper('dispose');\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      delete this.upperCanvasEl;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup) {\n        activeGroup._renderControls(ctx);\n      }\n      else {\n        this._drawObjectsControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _drawObjectsControls: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; ++i) {\n        if (!this._objects[i] || !this._objects[i].active) {\n          continue;\n        }\n        this._objects[i]._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      var layoutProps = ['angle', 'flipX', 'flipY', 'height', 'left', 'scaleX', 'scaleY', 'top', 'width'];\n      if (instance.group && instance.group === this.getActiveGroup()) {\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this.getActiveGroup().realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      var originalProperties;\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n\n  /**\n   * @ignore\n   * @class fabric.Element\n   * @alias fabric.Canvas\n   * @deprecated Use {@link fabric.Canvas} instead.\n   * @constructor\n   */\n  fabric.Element = fabric.Canvas;\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n\n      this._bindEvents();\n\n      addListener(fabric.window, 'resize', this._onResize);\n\n      // mouse events\n      addListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      addListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      addListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      addListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      // touch events\n      addListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'add' in eventjs) {\n        eventjs.add(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.add(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.add(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.add(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.add(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      removeListener(fabric.window, 'resize', this._onResize);\n\n      removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      removeListener(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      removeListener(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      removeListener(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n\n      removeListener(this.upperCanvasEl, 'touchstart', this._onMouseDown);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (typeof eventjs !== 'undefined' && 'remove' in eventjs) {\n        eventjs.remove(this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs.remove(this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs.remove(this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs.remove(this.upperCanvasEl, 'shake', this._onShake);\n        eventjs.remove(this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n\n      addListener(fabric.document, 'touchend', this._onMouseUp);\n      addListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this.getActiveGroup() || this.getActiveObject();\n\n      if (activeObject && activeObject.isEditing && target === activeObject) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n          pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, searchTarget = true, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform();\n        searchTarget = !transform.actionPerformed;\n      }\n\n      target = searchTarget ? this.findTarget(e, true) : transform.target;\n\n      var shouldRender = this._shouldRender(target, this.getPointer(e));\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      else {\n        // those are done by default on mouse up\n        // by _maybeGroupObjects, we are skipping it in case of no target find\n        this._groupSelector = null;\n        this._currentTransform = null;\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n\n      this._handleCursorAndEvent(e, target, 'up');\n      target && (target.__corner = 0);\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * set cursor for mouse up and handle mouseUp event\n     * @param {Event} e event from mouse\n     * @param {fabric.Object} target receiving event\n     * @param {String} eventType event to fire (up, down or move)\n     */\n    _handleCursorAndEvent: function(e, target, eventType) {\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, eventType, target ? target : null);\n    },\n\n    /**\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     */\n    _handleEvent: function(e, eventType, targetObj) {\n      var target = typeof targetObj === 'undefined' ? this.findTarget(e) : targetObj,\n          targets = this.targets || [],\n          options = { e: e, target: target, subTargets: targets };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _finalizeCurrentTransform: function() {\n\n      var transform = this._currentTransform,\n          target = transform.target;\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n      this._restoreOriginXY(target);\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        this.fire('object:modified', { target: target });\n        target.fire('modified');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object to restore\n     */\n    _restoreOriginXY: function(target) {\n      if (this._previousOriginX && this._previousOriginY) {\n\n        var originPoint = target.translateToOriginPoint(\n          target.getCenterPoint(),\n          this._previousOriginX,\n          this._previousOriginY);\n\n        target.originX = this._previousOriginX;\n        target.originY = this._previousOriginY;\n\n        target.left = originPoint.x;\n        target.top = originPoint.y;\n\n        this._previousOriginX = null;\n        this._previousOriginY = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      this.discardActiveObject(e).renderAll();\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n\n      var target = this.findTarget(e);\n\n      // if right click just fire events\n      var isRightClick  = 'which' in e ? e.which === 3 : e.button === 2;\n      if (isRightClick) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', target ? target : null);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      // save pointer for check in __onMouseUp event\n      var pointer = this.getPointer(e, true);\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this._clearSelection(e, target, pointer);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this.getActiveGroup();\n      }\n\n      if (target) {\n        if (target.selectable && (target.__corner || !shouldGroup)) {\n          this._beforeTransform(e, target);\n          this._setupCurrentTransform(e, target);\n        }\n\n        if (target !== this.getActiveGroup() && target !== this.getActiveObject()) {\n          this.deactivateAll();\n          target.selectable && this.setActiveObject(target, e);\n        }\n      }\n      this._handleEvent(e, 'down', target ? target : null);\n      // we must renderAll so that we update the visuals\n      shouldRender && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e, target) {\n      this.stateful && target.saveState();\n\n      // determine if it's a drag or rotate case\n      if (target._findTargetCorner(this.getPointer(e))) {\n        this.onBeforeScaleRotate(target);\n      }\n\n    },\n\n    /**\n     * @private\n     */\n    _clearSelection: function(e, target, pointer) {\n      this.deactivateAllWithDispatch(e);\n\n      if (target && target.selectable) {\n        this.setActiveObject(target, e);\n      }\n      else if (this.selection) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that origin is set to center\n     */\n    _setOriginToCenter: function(target) {\n      this._previousOriginX = this._currentTransform.target.originX;\n      this._previousOriginY = this._currentTransform.target.originY;\n\n      var center = target.getCenterPoint();\n\n      target.originX = 'center';\n      target.originY = 'center';\n\n      target.left = center.x;\n      target.top = center.y;\n\n      this._currentTransform.left = target.left;\n      this._currentTransform.top = target.top;\n    },\n\n    /**\n     * @private\n     * @param {Object} target Object for that center is set to origin\n     */\n    _setCenterToOrigin: function(target) {\n      var originPoint = target.translateToOriginPoint(\n        target.getCenterPoint(),\n        this._previousOriginX,\n        this._previousOriginY);\n\n      target.originX = this._previousOriginX;\n      target.originY = this._previousOriginY;\n\n      target.left = originPoint.x;\n      target.top = originPoint.y;\n\n      this._previousOriginX = null;\n      this._previousOriginY = null;\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this.getPointer(e, true);\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e);\n        this._setCursorFromEvent(e, target);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move', target ? target : null);\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._handleEvent(e, 'wheel');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.renderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          target = transform.target,\n          action = transform.action,\n          actionPerformed = false;\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', target, e);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', target, e);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', target, e);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', target, e);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', target, e);\n          this.setCursor(target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, target, e) {\n      this.fire('object:' + eventName, { target: target, e: e });\n      target.fire(eventName, { e: e });\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if ((e[this.uniScaleKey] || this.uniScaleTransform) && !transform.target.get('lockUniScaling')) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor;\n      if (!target.selectable) {\n        //let's skip _findTargetCorner if object is not selectable\n        this.setCursor(hoverCursor);\n      }\n      else {\n        var activeGroup = this.getActiveGroup(),\n            // only show proper corner when group selection is not active\n            corner = target._findTargetCorner\n                      && (!activeGroup || !activeGroup.contains(target))\n                      && target._findTargetCorner(this.getPointer(e, true));\n\n        if (!corner) {\n          this.setCursor(hoverCursor);\n        }\n        else {\n          this._setCornerCursor(corner, target, e);\n        }\n      }\n      //actually unclear why it should return something\n      //is never evaluated\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _setCornerCursor: function(corner, target, e) {\n      if (corner in cursorOffset) {\n        this.setCursor(this._getRotatedCornerCursor(corner, target, e));\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        this.setCursor(this.rotationCursor);\n      }\n      else {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.getAngle() % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this.getActiveObject();\n      return e[this.selectionKey] && target && target.selectable &&\n            (this.getActiveGroup() || (activeObject && activeObject !== target))\n            && this.selection;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeGroup = this.getActiveGroup();\n\n      if (target === activeGroup) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeGroup) {\n        this._updateActiveGroup(target, e);\n      }\n      else {\n        this._createActiveGroup(target, e);\n      }\n\n      if (this._activeGroup) {\n        this._activeGroup.saveCoords();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveGroup: function(target, e) {\n      var activeGroup = this.getActiveGroup();\n\n      if (activeGroup.contains(target)) {\n\n        activeGroup.removeWithUpdate(target);\n        target.set('active', false);\n\n        if (activeGroup.size() === 1) {\n          // remove group alltogether if after removal it only contains 1 object\n          this.discardActiveGroup(e);\n          // activate last remaining object\n          this.setActiveObject(activeGroup.item(0));\n          return;\n        }\n      }\n      else {\n        activeGroup.addWithUpdate(target);\n      }\n      this.fire('selection:created', { target: activeGroup, e: e });\n      activeGroup.set('active', true);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveGroup: function(target, e) {\n\n      if (this._activeObject && target !== this._activeObject) {\n\n        var group = this._createGroup(target);\n        group.addWithUpdate();\n\n        this.setActiveGroup(group);\n        this._activeObject = null;\n\n        this.fire('selection:created', { target: group, e: e });\n      }\n\n      target.set('active', true);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.Group(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects();\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        group = new fabric.Group(group.reverse(), {\n          canvas: this\n        });\n        group.addWithUpdate();\n        this.setActiveGroup(group, e);\n        group.saveCoords();\n        this.fire('selection:created', { target: group });\n        this.renderAll();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          isClick = x1 === x2 && y1 === y2;\n\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            currentObject.containsPoint(selectionX1Y1) ||\n            currentObject.containsPoint(selectionX2Y2)\n        ) {\n          currentObject.set('active', true);\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      var activeGroup = this.getActiveGroup();\n      if (activeGroup) {\n        activeGroup.setObjectsCoords().setCoords();\n        activeGroup.isMoving = false;\n        this.setCursor(this.defaultCursor);\n      }\n\n      // clear selection and current transformation\n      this._groupSelector = null;\n      this._currentTransform = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = options.multiplier || 1,\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.getWidth(),\n          origHeight = this.getHeight(),\n          scaledWidth = (cropping.width || this.getWidth()) * multiplier,\n          scaledHeight = (cropping.height || this.getHeight()) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive;\n\n      this.viewportTransform = newVp;\n      // setting interactive to false avoid exporting controls\n      this.interactive && (this.interactive = false);\n      if (origWidth !== scaledWidth || origHeight !== scaledHeight) {\n        // this.setDimensions is going to renderAll also;\n        this.setDimensions({ width: scaledWidth, height: scaledHeight });\n      }\n      else {\n        this.renderAll();\n      }\n      var data = this.__toDataURL(format, quality, cropping);\n      originalInteractive && (this.interactive = originalInteractive);\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.renderAll()\n      this.setDimensions({ width: origWidth, height: origHeight });\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n                ? canvasEl.toDataURL('image/' + format, quality)\n                : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n\n    /**\n     * Exports canvas element to a dataurl image (allowing to change image size via multiplier).\n     * @deprecated since 1.0.13\n     * @param {String} format (png|jpeg)\n     * @param {Number} multiplier\n     * @param {Number} quality (0..1)\n     * @return {String}\n     */\n    toDataURLWithMultiplier: function (format, multiplier, quality) {\n      return this.toDataURL({\n        format: format,\n        multiplier: multiplier,\n        quality: quality\n      });\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    this.clear();\n\n    var _this = this;\n    this._enlivenObjects(serialized.objects, function () {\n      _this._setBgOverlay(serialized, function () {\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var _this = this,\n        loaded = {\n          backgroundColor: false,\n          overlayColor: false,\n          backgroundImage: false,\n          overlayImage: false\n        };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        _this.renderAll();\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    var _this = this;\n\n    if (!objects || objects.length === 0) {\n      callback && callback();\n      return;\n    }\n\n    var renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      enlivenedObjects.forEach(function(obj, index) {\n        // we splice the array just in case some custom classes restored from JSON\n        // will add more object to canvas at canvas init.\n        _this.insertAt(obj, index);\n      });\n\n      _this.renderOnAddRemove = renderOnAddRemove;\n      callback && callback();\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.getWidth();\n    el.height = this.getHeight();\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Retrieves object's {@link fabric.Object#clipTo|clipping function}\n     * @method getClipTo\n     * @memberOf fabric.Object.prototype\n     * @return {Function}\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#clipTo|clipping function}\n     * @method setClipTo\n     * @memberOf fabric.Object.prototype\n     * @param {Function} clipTo Clipping function\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method getTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @return {Array} transformMatrix\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}\n     * @method setTransformMatrix\n     * @memberOf fabric.Object.prototype\n     * @param {Array} transformMatrix\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#visible|visible} state\n     * @method getVisible\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} True if visible\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#visible|visible} state\n     * @method setVisible\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value visible value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#shadow|shadow}\n     * @method getShadow\n     * @memberOf fabric.Object.prototype\n     * @return {Object} Shadow instance\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#stroke|stroke}\n     * @method getStroke\n     * @memberOf fabric.Object.prototype\n     * @return {String} stroke value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#stroke|stroke}\n     * @method setStroke\n     * @memberOf fabric.Object.prototype\n     * @param {String} value stroke value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method getStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @return {Number} strokeWidth value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}\n     * @method setStrokeWidth\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value strokeWidth value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originX|originX}\n     * @method getOriginX\n     * @memberOf fabric.Object.prototype\n     * @return {String} originX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originX|originX}\n     * @method setOriginX\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#originY|originY}\n     * @method getOriginY\n     * @memberOf fabric.Object.prototype\n     * @return {String} originY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#originY|originY}\n     * @method setOriginY\n     * @memberOf fabric.Object.prototype\n     * @param {String} value originY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#fill|fill}\n     * @method getFill\n     * @memberOf fabric.Object.prototype\n     * @return {String} Fill value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#fill|fill}\n     * @method setFill\n     * @memberOf fabric.Object.prototype\n     * @param {String} value Fill value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#opacity|opacity}\n     * @method getOpacity\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Opacity value (0-1)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#opacity|opacity}\n     * @method setOpacity\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Opacity value (0-1)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)\n     * @method getAngle\n     * @memberOf fabric.Object.prototype\n     * @return {Number}\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#top|top position}\n     * @method getTop\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Top value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#top|top position}\n     * @method setTop\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Top value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#left|left position}\n     * @method getLeft\n     * @memberOf fabric.Object.prototype\n     * @return {Number} Left value (in pixels)\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#left|left position}\n     * @method setLeft\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value Left value (in pixels)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value\n     * @method getScaleX\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleX|scaleX} value\n     * @method setScaleX\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value\n     * @method getScaleY\n     * @memberOf fabric.Object.prototype\n     * @return {Number} scaleY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#scaleY|scaleY} value\n     * @method setScaleY\n     * @memberOf fabric.Object.prototype\n     * @param {Number} value scaleY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipX|flipX} value\n     * @method getFlipX\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipX value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipX|flipX} value\n     * @method setFlipX\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipX value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's {@link fabric.Object#flipY|flipY} value\n     * @method getFlipY\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value\n     */\n\n    /**\n     * Sets object's {@link fabric.Object#flipY|flipY} value\n     * @method setFlipY\n     * @memberOf fabric.Object.prototype\n     * @param {Boolean} value flipY value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         10,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0.01,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in SVG or OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big pathgroups, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    dirty:                false,\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height stroke strokeWidth strokeDashArray' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit fillRule backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      options = options || { };\n      if (options) {\n        this.setOptions(options);\n      }\n      if (this.objectCaching) {\n        this._createCacheCanvas();\n        this.setupState({ propertySet: 'cacheProperties' });\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var zoom = this.canvas && this.canvas.getZoom() || 1,\n          objectScale = this.getObjectScaling(),\n          dim = this._getNonTransformedDimensions(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        width: Math.ceil(width) + 2,\n        height: Math.ceil(height) + 2,\n        zoomX: zoomX,\n        zoomY: zoomY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var action = this.canvas._currentTransform.action;\n        if (action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var dims = this._getCacheCanvasDimensions(),\n          width = dims.width, height = dims.height,\n          zoomX = dims.zoomX, zoomY = dims.zoomY;\n\n      if (width !== this.cacheWidth || height !== this.cacheHeight) {\n        this._cacheCanvas.width = width;\n        this._cacheCanvas.height = height;\n        this._cacheContext.translate(width / 2, height / 2);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node\n     */\n    transform: function(ctx, fromLeft) {\n      if (this.group && !this.group._transformDone && this.group === this.canvas._activeGroup) {\n        this.group.transform(ctx);\n      }\n      var center = fromLeft ? this._getLeftTopCoords() : this.getCenterPoint();\n      ctx.translate(center.x, center.y);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.scale(\n        this.scaleX * (this.flipX ? -1 : 1),\n        this.scaleY * (this.flipY ? -1 : 1)\n      );\n      ctx.transform(1, 0, Math.tan(degreesToRadians(this.skewX)), 1, 0, 0);\n      ctx.transform(1, Math.tan(degreesToRadians(this.skewY)), 0, 1, 0, 0);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.getAngle(), NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY');\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (this.cacheProperties.indexOf(key) > -1) {\n        if (this.group) {\n          this.group.set('dirty', true);\n        }\n        this.dirty = true;\n      }\n\n      if (key === 'width' || key === 'height') {\n        this.minScaleLimit = Math.min(0.1, 1 / Math.max(this.width, this.height));\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Sets sourcePath of an object\n     * @param {String} value Value to set sourcePath to\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setSourcePath: function(value) {\n      this.sourcePath = value;\n      return this;\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean} flipY value // TODO\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return [1, 0, 0, 1, 0, 0];\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    render: function(ctx, noTransform) {\n      // do not render if width/height are zeros or object is not visible\n      if ((this.width === 0 && this.height === 0) || !this.visible) {\n        return;\n      }\n      ctx.save();\n      //setup fill rule for current object\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      if (!noTransform) {\n        this.transform(ctx);\n      }\n      this._setOpacity(ctx);\n      this._setShadow(ctx);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.objectCaching && !this.group) {\n        if (this.isCacheDirty(noTransform)) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext, noTransform);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this.drawObject(ctx, noTransform);\n        if (noTransform && this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx, noTransform) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx);\n      this._setFillStyles(ctx);\n      this._render(ctx, noTransform);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheWidth / 2, -this.cacheHeight / 2);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (!skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (!skipCanvas) {\n            var dim = this._getNonTransformedDimensions();\n            this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      ctx.globalAlpha *= this.opacity;\n    },\n\n    _setStrokeStyles: function(ctx) {\n      if (this.stroke) {\n        ctx.lineWidth = this.strokeWidth;\n        ctx.lineCap = this.strokeLineCap;\n        ctx.lineJoin = this.strokeLineJoin;\n        ctx.miterLimit = this.strokeMiterLimit;\n        ctx.strokeStyle = this.stroke.toLive\n          ? this.stroke.toLive(ctx, this)\n          : this.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx) {\n      if (this.fill) {\n        ctx.fillStyle = this.fill.toLive\n          ? this.fill.toLive(ctx, this)\n          : this.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      if (!this.active || noTransform\n          || (this.group && this.group !== this.canvas.getActiveGroup())) {\n        return;\n      }\n\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (this.group && this.group === this.canvas.getActiveGroup()) {\n        ctx.rotate(degreesToRadians(options.angle));\n        this.drawBordersInGroup(ctx, options);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        this.drawBorders(ctx);\n      }\n      this.drawControls(ctx);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler.toLive) {\n        return;\n      }\n      var transform = filler.gradientTransform || filler.patternTransform;\n      if (transform) {\n        ctx.transform.apply(ctx, transform);\n      }\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Clones an instance, some objects are async, so using callback method will work for every object.\n     * Using the direct return does not work for images and groups.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {fabric.Object} clone of an instance\n     */\n    clone: function(callback, propertiesToInclude) {\n      if (this.constructor.fromObject) {\n        return this.constructor.fromObject(this.toObject(propertiesToInclude), callback);\n      }\n      return new fabric.Object(this.toObject(propertiesToInclude));\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetina] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, { enableRetinaScaling: options.enableRetinaScaling });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        active: this.get('active'),\n        left: this.getLeft(),\n        top: this.getTop()\n      };\n\n      this.set('active', false);\n      this.setPositionByOrigin(new fabric.Point(canvas.getWidth() / 2, canvas.getHeight() / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 0;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setAngle: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Removes object from canvas to which it was added last\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    remove: function() {\n      this.canvas && this.canvas.remove(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors(fabric.Object);\n\n  /**\n   * Alias for {@link fabric.Object.prototype.setAngle}\n   * @alias rotate -> setAngle\n   * @memberOf fabric.Object\n   */\n  fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, forceAsync, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    if (forceAsync) {\n      fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n        object.fill = patterns[0];\n        object.stroke = patterns[1];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    }\n    else {\n      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n      callback && callback(instance);\n      return instance;\n    }\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getWidth(),\n          xFull = Math.cos(angle) * hypotFull,\n          yFull = Math.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    }\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(oCoords) {\n    return [\n      new fabric.Point(oCoords.tl.x, oCoords.tl.y),\n      new fabric.Point(oCoords.tr.x, oCoords.tr.y),\n      new fabric.Point(oCoords.br.x, oCoords.br.y),\n      new fabric.Point(oCoords.bl.x, oCoords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Object containing coordinates of object's controls\n     * @type Object\n     * @default\n     */\n    oCoords: null,\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR) {\n      var oCoords = getCoords(this.oCoords),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            oCoords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n            getCoords(this.oCoords),\n            getCoords(other.oCoords)\n          );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this)\n        || this.isContainedWithinObject(other);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other) {\n      var points = getCoords(this.oCoords),\n          i = 0;\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i])) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR) {\n      var boundingRect = this.getBoundingRect();\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var lines = this._getImageLines(this.oCoords),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} oCoords Coordinates of the object being evaluated\n     */\n     // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, oCoords) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in oCoords) {\n        iLine = oCoords[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns width of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} width value\n     */\n    getBoundingRectWidth: function() {\n      return this.getBoundingRect().width;\n    },\n\n    /**\n     * Returns height of an object's bounding rectangle\n     * @deprecated since 1.0.4\n     * @return {Number} height value\n     */\n    getBoundingRectHeight: function() {\n      return this.getBoundingRect().height;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} ignoreVpt bounding box will not be affected by viewportTransform\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(ignoreVpt) {\n      var coords = this.calcCoords(ignoreVpt);\n      return fabric.util.makeBoundingBoxFromPoints([\n        coords.tl,\n        coords.tr,\n        coords.br,\n        coords.bl\n      ]);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * @return {Number} width value\n     */\n    getWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * to be renamed in 2.0\n     * @return {Number} height value\n     */\n    getHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      value = this._constrainScale(value);\n\n      if (value < 0) {\n        this.flipX = !this.flipX;\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n\n      this.scaleX = value;\n      this.scaleY = value;\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().width / this.getWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect().height / this.getHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(ignoreVpt) {\n      var theta = degreesToRadians(this.angle),\n          vpt = this.getViewportTransform(),\n          dim = ignoreVpt ? this._getTransformedDimensions() : this._calculateCurrentDimensions(),\n          currentWidth = dim.x, currentHeight = dim.y,\n          sinTh = Math.sin(theta),\n          cosTh = Math.cos(theta),\n          _angle = currentWidth > 0 ? Math.atan(currentHeight / currentWidth) : 0,\n          _hypotenuse = (currentWidth / Math.cos(_angle)) / 2,\n          offsetX = Math.cos(_angle + theta) * _hypotenuse,\n          offsetY = Math.sin(_angle + theta) * _hypotenuse,\n          center = this.getCenterPoint(),\n          // offset added for rotate and scale actions\n          coords = ignoreVpt ? center : fabric.util.transformPoint(center, vpt),\n          tl  = new fabric.Point(coords.x - offsetX, coords.y - offsetY),\n          tr  = new fabric.Point(tl.x + (currentWidth * cosTh), tl.y + (currentWidth * sinTh)),\n          bl  = new fabric.Point(tl.x - (currentHeight * sinTh), tl.y + (currentHeight * cosTh)),\n          br  = new fabric.Point(coords.x + offsetX, coords.y + offsetY);\n      if (!ignoreVpt) {\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sinTh * this.rotatingPointOffset, mt.y - cosTh * this.rotatingPointOffset);\n      }\n\n      // debugging\n\n      /* setTimeout(function() {\n         canvas.contextTop.fillStyle = 'green';\n         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n         canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n       }, 50); */\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!ignoreVpt) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute && !ignoreZoom) {\n        this.absoluteCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || this._setCornerCoords && this._setCornerCoords();\n\n      return this;\n    },\n\n    /*\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = Math.cos(theta), sin = Math.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return [1, 0, 0, 1, 0, 0];\n    },\n\n    /*\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function() {\n      var center = this.getCenterPoint(),\n          translateMatrix = [1, 0, 0, 1, center.x, center.y],\n          rotateMatrix = this._calcRotateMatrix(),\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true),\n          matrix = this.group ? this.group.calcTransformMatrix() : [1, 0, 0, 1, 0, 0];\n      matrix = multiplyMatrices(matrix, translateMatrix);\n      matrix = multiplyMatrices(matrix, rotateMatrix);\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrixX = [1, 0, Math.tan(degreesToRadians(skewX)), 1],\n          skewMatrixY = [1, Math.tan(degreesToRadians(skewY)), 0, 1],\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY],\n          m = multiplyMatrices(scaleMatrix, skewMatrixX, true);\n      return multiplyMatrices(m, skewMatrixY, true);\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      if (this.group && this.group.type === 'path-group') {\n        return '';\n      }\n      var toFixed = fabric.util.toFixed,\n          angle = this.getAngle(),\n          skewX = (this.getSkewX() % 360),\n          skewY = (this.getSkewY() % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = this.type === 'path-group' ? '' : 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          addTranslateX = this.type === 'path-group' ? this.width : 0,\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ' : '',\n\n          addTranslateY = this.type === 'path-group' ? this.height : 0,\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 ' + addTranslateY + ')' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (!fabric.isLikelyNode && origValue instanceof Element) {\n      // avoid checking deep html elements\n      return origValue === currentValue;\n    }\n    else if (origValue instanceof Array) {\n      if (origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (origValue[i] !== currentValue[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      if (!firstPass && Object.keys(origValue).length !== Object.keys(currentValue).length) {\n        return false;\n      }\n      for (var key in origValue) {\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else {\n      return origValue === currentValue;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      propertySet = '_' + propertySet;\n      return !_isEqual(this[propertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      /* eslint-disable camelcase */\n      isVML = function() { return typeof G_vmlCanvasManager !== 'undefined'; };\n      /* eslint-enable camelcase */\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      if (!this.hasControls || !this.active) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * Math.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * Math.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * @private\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor || this.group || !this.active) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      ctx.strokeStyle = this.borderColor;\n      this._setLineDash(ctx, this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - this.rotatingPointOffset);\n        ctx.closePath();\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options) {\n      if (!this.hasBorders) {\n        return this;\n      }\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, this.borderDashArray, null);\n      ctx.strokeStyle = this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx) {\n      if (!this.hasControls) {\n        return this;\n      }\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          methodName = this.transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2);\n      }\n\n      // middle-top-rotate\n      if (this.hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top) {\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          isVML() || this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('left'),\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('top'),\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.get('opacity'),\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onStart: function() {\n        object.set('active', false);\n      },\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.renderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange();\n      },\n      onComplete: function() {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete();\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'x1',\n    'x2',\n    'y1',\n    'y2'\n  );\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n\n      if (noTransform) {\n        //  Line coords are distances from left-top of canvas to origin of line.\n        //  To render line in a path-group, we need to translate them to\n        //  distances from center of path-group to center of line.\n        var cp = this.getCenterPoint();\n        ctx.translate(\n          cp.x - this.strokeWidth / 2,\n          cp.y - this.strokeWidth / 2\n        );\n      }\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (dim.x === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (dim.y === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = { x1: this.x1, x2: this.x2, y1: this.y1, y2: this.y2 };\n\n      if (!(this.group && this.group.type === 'path-group')) {\n        p = this.calcLinePoints();\n      }\n      markup.push(\n        '<line ', this.getSvgId(),\n          'x1=\"', p.x1,\n          '\" y1=\"', p.y1,\n          '\" x2=\"', p.x2,\n          '\" y2=\"', p.y2,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromElement = function(element, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    options.originX = 'left';\n    options.originY = 'top';\n    return new fabric.Line(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Line} instance of fabric.Line\n   */\n  fabric.Line.fromObject = function(object, callback, forceAsync) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    var line = fabric.Object._fromObject('Line', options, _callback, forceAsync, 'points');\n    if (line) {\n      delete line.points;\n    }\n    return line;\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'radius'\n  );\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Circle} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('radius', options && options.radius || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        if (this.group && this.group.type === 'path-group') {\n          x = this.left + this.radius;\n          y = this.top + this.radius;\n        }\n        markup.push(\n          '<circle ', this.getSvgId(),\n            'cx=\"' + x + '\" cy=\"' + y + '\" ',\n            'r=\"', this.radius,\n            '\" style=\"', this.getSvgStyles(),\n            '\" transform=\"', this.getSvgTransform(),\n            ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n      else {\n        var startX = Math.cos(this.startAngle) * this.radius,\n            startY = Math.sin(this.startAngle) * this.radius,\n            endX = Math.cos(this.endAngle) * this.radius,\n            endY = Math.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.arc(noTransform ? this.left + this.radius : 0,\n              noTransform ? this.top + this.radius : 0,\n              this.radius,\n              this.startAngle,\n              this.endAngle, false);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   * @return {fabric.Circle} Instance of fabric.Circle\n   */\n  fabric.Circle.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var obj = new fabric.Circle(extend(parsedAttributes, options));\n\n    obj.left -= obj.radius;\n    obj.top -= obj.radius;\n    return obj;\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Circle', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('width', options && options.width || 100)\n          .set('height', options && options.height || 100);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n          .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n          'points=\"', points,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n        '\"/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Triangle}\n   */\n  fabric.Triangle.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Triangle', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2,\n      extend = fabric.util.object.extend;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'rx',\n    'ry'\n  );\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left + this.rx;\n        y = this.top + this.ry;\n      }\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n          'cx=\"', x, '\" cy=\"', y, '\" ',\n          'rx=\"', this.rx,\n          '\" ry=\"', this.ry,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _render: function(ctx, noTransform) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        noTransform ? this.left + this.rx : 0,\n        noTransform ? (this.top + this.ry) * this.rx / this.ry : 0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, options) {\n    options || (options = { });\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n\n    var ellipse = new fabric.Ellipse(extend(parsedAttributes, options));\n\n    ellipse.top -= ellipse.ry;\n    ellipse.left -= ellipse.rx;\n    return ellipse;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Ellipse', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push('rx', 'ry');\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    /**\n     * Used to specify dash pattern for stroke on this object\n     * @type Array\n     */\n    strokeDashArray: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = noTransform ? this.left : -this.width / 2,\n          y = noTransform ? this.top : -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = this.left, y = this.top;\n      if (!(this.group && this.group.type === 'path-group')) {\n        x = -this.width / 2;\n        y = -this.height / 2;\n      }\n      markup.push(\n        '<rect ', this.getSvgId(),\n          'x=\"', x, '\" y=\"', y,\n          '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          this.getSvgTransformMatrix(),\n        '\"/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Rect} Instance of fabric.Rect\n   */\n  fabric.Rect.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    return rect;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {Object} instance of fabric.Rect\n   */\n  fabric.Rect.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Rect', object, callback, forceAsync);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('points');\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      return fabric.Polygon.prototype.initialize.call(this, points, options);\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n      return fabric.Polygon.prototype._calcDimensions.call(this);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.Polygon.prototype.toObject.call(this, propertiesToInclude);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      return fabric.Polygon.prototype.toSVG.call(this, reviver);\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!fabric.Polygon.prototype.commonRender.call(this, ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    return new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Polyline} Instance of fabric.Polyline\n   */\n  fabric.Polyline.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Polyline', object, callback, forceAsync, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('points');\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Object\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Polygon} thisArg\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      this._calcDimensions();\n      if (!('top' in options)) {\n        this.top = this.minY;\n      }\n      if (!('left' in options)) {\n        this.left = this.minX;\n      }\n      this.pathOffset = {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x'),\n          minY = min(points, 'y'),\n          maxX = max(points, 'x'),\n          maxY = max(points, 'y');\n\n      this.width = (maxX - minX) || 0;\n      this.height = (maxY - minY) || 0;\n      this.minX = minX || 0;\n      this.minY = minY || 0;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [], addTransform,\n          markup = this._createBaseSVGMarkup();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(toFixed(this.points[i].x, 2), ',', toFixed(this.points[i].y, 2), ' ');\n      }\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n          'points=\"', points.join(''),\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          ' ', this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      if (!this.commonRender(ctx, noTransform)) {\n        return;\n      }\n      this._renderFill(ctx);\n      if (this.stroke || this.strokeDashArray) {\n        ctx.closePath();\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    commonRender: function(ctx, noTransform) {\n      var point, len = this.points.length,\n          x = noTransform ? 0 : this.pathOffset.x,\n          y = noTransform ? 0 : this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      fabric.Polyline.prototype._renderDashedStroke.call(this, ctx);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.points.length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    return new fabric.Polygon(points, extend(parsedAttributes, options));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Polygon} Instance of fabric.Polygon\n   */\n  fabric.Polygon.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Polygon', object, callback, forceAsync, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push('path');\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    /**\n     * Minimum X from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minX: 0,\n\n    /**\n     * Minimum Y from points values, necessary to offset points\n     * @type Number\n     * @default\n     */\n    minY: 0,\n\n    cacheProperties: cacheProperties,\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n\n      if (options) {\n        this.setOptions(options);\n      }\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n\n      if (options.sourcePath) {\n        this.setSourcePath(options.sourcePath);\n      }\n      if (this.objectCaching) {\n        this._createCacheCanvas();\n        this.setupState({ propertySet: 'cacheProperties' });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.minX = calcDim.left;\n      this.minY = calcDim.top;\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left + (this.originX === 'center'\n          ? this.width / 2\n          : this.originX === 'right'\n            ? this.width\n            : 0);\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top + (this.originY === 'center'\n          ? this.height / 2\n          : this.originY === 'bottom'\n            ? this.height\n            : 0);\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: this.minX + this.width / 2,\n        y: this.minY + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      if (this.group && this.group.type === 'path-group') {\n        l = 0;\n        t = 0;\n      }\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', ['sourcePath', 'pathOffset'].concat(propertiesToInclude)), {\n        path: this.path.map(function(item) { return item.slice(); })\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.path = this.sourcePath;\n      }\n      delete o.sourcePath;\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      if (!(this.group && this.group.type === 'path-group')) {\n        addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      }\n      markup.push(\n        '<path ', this.getSvgId(),\n          'd=\"', path,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(), addTransform,\n          this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              x,\n              y\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   */\n  fabric.Path.fromObject = function(object, callback, forceAsync) {\n    // remove this pattern rom 2.0, accept just object.\n    var path;\n    if (typeof object.path === 'string') {\n      fabric.loadSVGFromURL(object.path, function (elements) {\n        var pathUrl = object.path;\n        path = elements[0];\n        delete object.path;\n\n        fabric.util.object.extend(path, object);\n        path.setSourcePath(pathUrl);\n\n        callback && callback(path);\n      });\n    }\n    else {\n      return fabric.Object._fromObject('Path', object, callback, forceAsync, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback && callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Path\n   * @type Boolean\n   * @default\n   */\n  fabric.Path.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.PathGroup) {\n    fabric.warn('fabric.PathGroup is already defined');\n    return;\n  }\n\n  /**\n   * Path group class\n   * @class fabric.PathGroup\n   * @extends fabric.Path\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.PathGroup#initialize} for constructor definition\n   */\n  fabric.PathGroup = fabric.util.createClass(fabric.Object, /** @lends fabric.PathGroup.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path-group',\n\n    /**\n     * Fill value\n     * @type String\n     * @default\n     */\n    fill: '',\n\n    /**\n     * Constructor\n     * @param {Array} paths\n     * @param {Object} [options] Options object\n     * @return {fabric.PathGroup} thisArg\n     */\n    initialize: function(paths, options) {\n\n      options = options || { };\n      this.paths = paths || [];\n\n      for (var i = this.paths.length; i--;) {\n        this.paths[i].group = this;\n      }\n\n      if (options.toBeParsed) {\n        this.parseDimensionsFromPaths(options);\n        delete options.toBeParsed;\n      }\n      this.setOptions(options);\n      this.setCoords();\n      if (options.sourcePath) {\n        this.setSourcePath(options.sourcePath);\n      }\n      if (this.objectCaching) {\n        this._createCacheCanvas();\n        this.setupState({ propertySet: 'cacheProperties' });\n      }\n    },\n\n    /**\n     * Calculate width and height based on paths contained\n     */\n    parseDimensionsFromPaths: function(options) {\n      var points, p, xC = [], yC = [], path, height, width,\n          m;\n      for (var j = this.paths.length; j--;) {\n        path = this.paths[j];\n        height = path.height + path.strokeWidth;\n        width = path.width + path.strokeWidth;\n        points = [\n          { x: path.left, y: path.top },\n          { x: path.left + width, y: path.top },\n          { x: path.left, y: path.top + height },\n          { x: path.left + width, y: path.top + height }\n        ];\n        m = this.paths[j].transformMatrix;\n        for (var i = 0; i < points.length; i++) {\n          p = points[i];\n          if (m) {\n            p = fabric.util.transformPoint(p, m, false);\n          }\n          xC.push(p.x);\n          yC.push(p.y);\n        }\n      }\n      options.width = Math.max.apply(null, xC);\n      options.height = Math.max.apply(null, yC);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      ctx.save();\n      ctx.translate(-this.width / 2, -this.height / 2);\n      for (var i = 0, l = this.paths.length; i < l; ++i) {\n        this.paths[i].render(ctx, true);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this.paths.length; i < len; i++) {\n        if (this.paths[i].isCacheDirty(true)) {\n          var dim = this._getNonTransformedDimensions();\n          this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets certain property to a certain value\n     * @param {String} prop\n     * @param {*} value\n     * @return {fabric.PathGroup} thisArg\n     */\n    _set: function(prop, value) {\n\n      if (prop === 'fill' && value && this.isSameColor()) {\n        var i = this.paths.length;\n        while (i--) {\n          this.paths[i]._set(prop, value);\n        }\n      }\n\n      return this.callSuper('_set', prop, value);\n    },\n\n    /**\n     * Returns object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var pathsToObject = this.paths.map(function(path) {\n        var originalDefaults = path.includeDefaultValues;\n        path.includeDefaultValues = path.group.includeDefaultValues;\n        var obj = path.toObject(propertiesToInclude);\n        path.includeDefaultValues = originalDefaults;\n        return obj;\n      });\n      var o = extend(this.callSuper('toObject', ['sourcePath'].concat(propertiesToInclude)), {\n        paths: pathsToObject\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of this path group\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} dataless object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(propertiesToInclude);\n      if (this.sourcePath) {\n        o.paths = this.sourcePath;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var objects = this.getObjects(),\n          p = this.getPointByOrigin('left', 'top'),\n          translatePart = 'translate(' + p.x + ' ' + p.y + ')',\n          markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(),\n        'style=\"', this.getSvgStyles(), '\" ',\n        'transform=\"', this.getSvgTransformMatrix(), translatePart, this.getSvgTransform(), '\" ',\n        '>\\n'\n      );\n\n      for (var i = 0, len = objects.length; i < len; i++) {\n        markup.push('\\t', objects[i].toSVG(reviver));\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns a string representation of this path group\n     * @return {String} string representation of an object\n     */\n    toString: function() {\n      return '#<fabric.PathGroup (' + this.complexity() +\n        '): { top: ' + this.top + ', left: ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns true if all paths in this group are of same color\n     * @return {Boolean} true if all paths are of the same color (`fill`)\n     */\n    isSameColor: function() {\n      var firstPathFill = this.getObjects()[0].get('fill') || '';\n      if (typeof firstPathFill !== 'string') {\n        return false;\n      }\n      firstPathFill = firstPathFill.toLowerCase();\n      return this.getObjects().every(function(path) {\n        var pathFill = path.get('fill') || '';\n        return typeof pathFill === 'string' && (pathFill).toLowerCase() === firstPathFill;\n      });\n    },\n\n    /**\n     * Returns number representation of object's complexity\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return this.paths.reduce(function(total, path) {\n        return total + ((path && path.complexity) ? path.complexity() : 0);\n      }, 0);\n    },\n\n    /**\n     * Returns all paths in this path group\n     * @return {Array} array of path objects included in this path group\n     */\n    getObjects: function() {\n      return this.paths;\n    }\n  });\n\n  /**\n   * Creates fabric.PathGroup instance from an object representation\n   * @static\n   * @memberOf fabric.PathGroup\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.PathGroup instance is created\n   */\n  fabric.PathGroup.fromObject = function(object, callback) {\n    // remove this pattern from 2.0 accepts only object\n    if (typeof object.paths === 'string') {\n      fabric.loadSVGFromURL(object.paths, function (elements) {\n\n        var pathUrl = object.paths;\n        delete object.paths;\n\n        var pathGroup = fabric.util.groupSVGElements(elements, object, pathUrl);\n\n        callback(pathGroup);\n      });\n    }\n    else {\n      fabric.util.enlivenObjects(object.paths, function(enlivenedObjects) {\n        delete object.paths;\n        callback(new fabric.PathGroup(enlivenedObjects, object));\n      });\n    }\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.PathGroup\n   * @type Boolean\n   * @default\n   */\n  fabric.PathGroup.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  // lock-related properties, for use in fabric.Group#get\n  // to enable locking behavior on group\n  // when one of its objects has lock-related properties set\n  var _lockProperties = {\n    lockMovementX:  true,\n    lockMovementY:  true,\n    lockRotation:   true,\n    lockScalingX:   true,\n    lockScalingY:   true,\n    lockUniScaling: true\n  };\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || { };\n\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      // because delegatedProperties propagate to objects.\n      isAlreadyGrouped && this.callSuper('initialize', options);\n\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      this.originalState = { };\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (isAlreadyGrouped) {\n        // do not change coordinate of objects enclosed in a group,\n        // because objects coordinate system have been group coodinate system already.\n        this._updateObjectsCoords(true);\n      }\n      else {\n        this._calcBounds();\n        this._updateObjectsCoords();\n        this.callSuper('initialize', options);\n      }\n\n      this.setCoords();\n      this.saveCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(skipCoordsChange) {\n      var center = this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center, skipCoordsChange);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of object dose not change\n     */\n    _updateObjectCoords: function(object, center, skipCoordsChange) {\n      // do not display corners of objects enclosed in a group\n      object.__origHasControls = object.hasControls;\n      object.hasControls = false;\n\n      if (skipCoordsChange) {\n        return;\n      }\n\n      var objectLeft = object.getLeft(),\n          objectTop = object.getTop(),\n          ignoreZoom = true;\n\n      object.set({\n        originalLeft: objectLeft,\n        originalTop: objectTop,\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.setCoords(ignoreZoom);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _setObjectActive: function(object) {\n      object.set('active', true);\n      object.group = this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      // since _restoreObjectsState set objects inactive\n      this.forEachObject(this._setObjectActive, this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n      object.set('active', false);\n    },\n\n    /**\n     * Properties that are delegated to group objects when reading/writing\n     * @param {Object} delegatedProperties\n     */\n    delegatedProperties: {\n      fill:             true,\n      stroke:           true,\n      strokeWidth:      true,\n      fontFamily:       true,\n      fontWeight:       true,\n      fontSize:         true,\n      fontStyle:        true,\n      lineHeight:       true,\n      textDecoration:   true,\n      textAlign:        true,\n      backgroundColor:  true\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n\n      if (this.delegatedProperties[key] || key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      else {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._renderObject(this._objects[i], ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          var dim = this._getNonTransformedDimensions();\n          this._cacheContext.clearRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} [noTransform] When true, context is not transformed\n     */\n    _renderControls: function(ctx, noTransform) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, noTransform);\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx);\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _renderObject: function(object, ctx) {\n      // do not render if object is not visible\n      if (!object.visible) {\n        return;\n      }\n\n      var originalHasRotatingPoint = object.hasRotatingPoint;\n      object.hasRotatingPoint = false;\n      object.render(ctx);\n      object.hasRotatingPoint = originalHasRotatingPoint;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      object.hasControls = object.__origHasControls;\n      delete object.__origHasControls;\n      object.set('active', false);\n      delete object.group;\n\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Saves coordinates of this instance (to be used together with `hasMoved`)\n     * @saveCoords\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    saveCoords: function() {\n      this._originalLeft = this.get('left');\n      this._originalTop = this.get('top');\n      return this;\n    },\n\n    /**\n     * Checks whether this group was moved (since `saveCoords` was called last)\n     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)\n     */\n    hasMoved: function() {\n      return this._originalLeft !== this.get('left') ||\n             this._originalTop !== this.get('top');\n    },\n\n    /**\n     * Sets coordinates of all group objects\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns requested property\n     * @param {String} prop Property to get\n     * @return {*}\n     */\n    get: function(prop) {\n      if (prop in _lockProperties) {\n        if (this[prop]) {\n          return this[prop];\n        }\n        else {\n          for (var i = 0, len = this._objects.length; i < len; i++) {\n            if (this._objects[i][prop]) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n      else {\n        if (prop in this.delegatedProperties) {\n          return this._objects[0] && this._objects[0].get(prop);\n        }\n        return this[prop];\n      }\n    }\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, object, true));\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @memberOf fabric.Group\n   * @type Boolean\n   * @default\n   */\n  fabric.Group.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'alignX',\n    'alignY',\n    'meetOrSlice'\n  );\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * AlignX value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.\n     * @type String\n     * @default\n     */\n    alignX: 'none',\n\n    /**\n     * AlignY value, part of preserveAspectRatio (one of \"none\", \"mid\", \"min\", \"max\")\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.\n     * @type String\n     * @default\n     */\n    alignY: 'none',\n\n    /**\n     * meetOrSlice value, part of preserveAspectRatio  (one of \"meet\", \"slice\").\n     * if meet the image is always fully visibile, if slice the viewport is always filled with image.\n     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute\n     * @type String\n     * @default\n     */\n    meetOrSlice: 'meet',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 can be used in case we want to scale with some filter above\n     * the natural image dimensions\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: stateProperties,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options, callback) {\n      options || (options = { });\n      this.filters = [];\n      this.resizeFilters = [];\n      this.callSuper('initialize', options);\n      this._initElement(element, options, callback);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, callback, options) {\n\n      var _callback, _this;\n\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n\n      if (this.resizeFilters.length === 0) {\n        _callback = callback;\n      }\n      else {\n        _this = this;\n        _callback = function() {\n          _this.applyFilters(callback, _this.resizeFilters, _this._filteredEl || _this._originalElement, true);\n        };\n      }\n\n      if (this.filters.length !== 0) {\n        this.applyFilters(_callback);\n      }\n      else if (_callback) {\n        _callback(this);\n      }\n\n      return this;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [], resizeFilters = [],\n          scaleX = 1, scaleY = 1;\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          if (filterObj.type === 'Resize') {\n            scaleX *= filterObj.scaleX;\n            scaleY *= filterObj.scaleY;\n          }\n          filters.push(filterObj.toObject());\n        }\n      });\n\n      this.resizeFilters.forEach(function(filterObj) {\n        filterObj && resizeFilters.push(filterObj.toObject());\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'alignX', 'alignY', 'meetOrSlice'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n          resizeFilters: resizeFilters,\n        });\n\n      object.width /= scaleX;\n      object.height /= scaleY;\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2,\n          preserveAspectRatio = 'none', filtered = true;\n      if (this.group && this.group.type === 'path-group') {\n        x = this.left;\n        y = this.top;\n      }\n      if (this.alignX !== 'none' && this.alignY !== 'none') {\n        preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;\n      }\n      markup.push(\n        '<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n',\n          '<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(filtered),\n            '\" x=\"', x, '\" y=\"', y,\n            '\" style=\"', this.getSvgStyles(),\n            // we're essentially moving origin of transformation from top/left corner to the center of the shape\n            // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n            // so that object's center aligns with container's left/top\n            '\" width=\"', this.width,\n            '\" height=\"', this.height,\n            '\" preserveAspectRatio=\"', preserveAspectRatio, '\"',\n          '></image>\\n'\n      );\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '<rect ',\n            'x=\"', x, '\" y=\"', y,\n            '\" width=\"', this.width, '\" height=\"', this.height,\n            '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        return fabric.isLikelyNode ? element._src : element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        return this.setElement(img, callback, options);\n      }, this, options && options.crossOrigin);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array)\n     * @method applyFilters\n     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated\n     * @param {Array} filters to be applied\n     * @param {fabric.Image} imgElement image to filter ( default to this._element )\n     * @param {Boolean} forResizing\n     * @return {CanvasElement} canvasEl to be drawn immediately\n     * @chainable\n     */\n    applyFilters: function(callback, filters, imgElement, forResizing) {\n\n      filters = filters || this.filters;\n      imgElement = imgElement || this._originalElement;\n\n      if (!imgElement) {\n        return;\n      }\n\n      var replacement = fabric.util.createImage(),\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : fabric.devicePixelRatio,\n          minimumScale = this.minimumScaleTrigger / retinaScaling,\n          _this = this, scaleX, scaleY;\n\n      if (filters.length === 0) {\n        this._element = imgElement;\n        callback && callback(this);\n        return imgElement;\n      }\n\n      var canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = imgElement.width;\n      canvasEl.height = imgElement.height;\n      canvasEl.getContext('2d').drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);\n\n      filters.forEach(function(filter) {\n        if (!filter) {\n          return;\n        }\n        if (forResizing) {\n          scaleX = _this.scaleX < minimumScale ? _this.scaleX : 1;\n          scaleY = _this.scaleY < minimumScale ? _this.scaleY : 1;\n          if (scaleX * retinaScaling < 1) {\n            scaleX *= retinaScaling;\n          }\n          if (scaleY * retinaScaling < 1) {\n            scaleY *= retinaScaling;\n          }\n        }\n        else {\n          scaleX = filter.scaleX;\n          scaleY = filter.scaleY;\n        }\n        filter.applyTo(canvasEl, scaleX, scaleY);\n        if (!forResizing && filter.type === 'Resize') {\n          _this.width *= filter.scaleX;\n          _this.height *= filter.scaleY;\n        }\n      });\n\n      /** @ignore */\n      replacement.width = canvasEl.width;\n      replacement.height = canvasEl.height;\n      if (fabric.isLikelyNode) {\n        replacement.src = canvasEl.toBuffer(undefined, fabric.Image.pngCompression);\n        // onload doesn't fire in some node versions, so we invoke callback manually\n        _this._element = replacement;\n        !forResizing && (_this._filteredEl = replacement);\n        callback && callback(_this);\n      }\n      else {\n        replacement.onload = function() {\n          _this._element = replacement;\n          !forResizing && (_this._filteredEl = replacement);\n          callback && callback(_this);\n          replacement.onload = canvasEl = null;\n        };\n        replacement.src = canvasEl.toDataURL('image/png');\n      }\n      return canvasEl;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    _render: function(ctx, noTransform) {\n      var x, y, imageMargins = this._findMargins(), elementToDraw;\n\n      x = (noTransform ? this.left : -this.width / 2);\n      y = (noTransform ? this.top : -this.height / 2);\n\n      if (this.meetOrSlice === 'slice') {\n        ctx.beginPath();\n        ctx.rect(x, y, this.width, this.height);\n        ctx.clip();\n      }\n\n      if (this.isMoving === false && this.resizeFilters.length && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        elementToDraw = this.applyFilters(null, this.resizeFilters, this._filteredEl || this._originalElement, true);\n      }\n      else {\n        elementToDraw = this._element;\n      }\n      elementToDraw && ctx.drawImage(elementToDraw,\n                                     x + imageMargins.marginX,\n                                     y + imageMargins.marginY,\n                                     imageMargins.width,\n                                     imageMargins.height\n                                    );\n\n      this._stroke(ctx);\n      this._renderStroke(ctx);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _findMargins: function() {\n      var width = this.width, height = this.height, scales,\n          scale, marginX = 0, marginY = 0;\n\n      if (this.alignX !== 'none' || this.alignY !== 'none') {\n        scales = [this.width / this._element.width, this.height / this._element.height];\n        scale = this.meetOrSlice === 'meet'\n                ? Math.min.apply(null, scales) : Math.max.apply(null, scales);\n        width = this._element.width * scale;\n        height = this._element.height * scale;\n        if (this.alignX === 'Mid') {\n          marginX = (this.width - width) / 2;\n        }\n        if (this.alignX === 'Max') {\n          marginX = this.width - width;\n        }\n        if (this.alignY === 'Mid') {\n          marginY = (this.height - height) / 2;\n        }\n        if (this.alignY === 'Max') {\n          marginY = this.height - height;\n        }\n      }\n      return {\n        width:  width,\n        height: height,\n        marginX: marginX,\n        marginY: marginY\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options, callback) {\n      this.setElement(fabric.util.getById(element), callback, options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = 'width' in options\n        ? options.width\n        : (this.getElement()\n            ? this.getElement().width || 0\n            : 0);\n\n      this.height = 'height' in options\n        ? options.height\n        : (this.getElement()\n            ? this.getElement().height || 0\n            : 0);\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, object.resizeFilters, function(resizeFilters) {\n          object.resizeFilters = resizeFilters || [];\n          return new fabric.Image(img, object, callback);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @param {Object} [options] Options object\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES),\n        preserveAR;\n\n    if (parsedAttributes.preserveAspectRatio) {\n      preserveAR = fabric.util.parsePreserveAspectRatioAttribute(parsedAttributes.preserveAspectRatio);\n      extend(parsedAttributes, preserveAR);\n    }\n\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.async = true;\n\n  /**\n   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9\n   * @static\n   * @type Number\n   * @default\n   */\n  fabric.Image.pngCompression = 1;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.getAngle() % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.setAngle(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.setAngle(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n      onStart: function() {\n        _this.set('active', false);\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.renderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.renderAll.bind(this)\n    });\n    return this;\n  }\n});\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    return { type: this.type };\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Brightness.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.brightness=0] Value to brighten the image up (-255..255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.brightness = options.brightness || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          brightness = this.brightness;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] += brightness;\n        data[i + 1] += brightness;\n        data[i + 2] += brightness;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        brightness: this.brightness\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.opaque = options.opaque;\n      this.matrix = options.matrix || [\n        0, 0, 0,\n        0, 1, 0,\n        0, 0, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n\n      var weights = this.matrix,\n          context = canvasEl.getContext('2d'),\n          pixels = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          src = pixels.data,\n          sw = pixels.width,\n          sh = pixels.height,\n          output = context.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt;\n\n      for (var y = 0; y < sh; y++) {\n        for (var x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (var cy = 0; cy < side; cy++) {\n            for (var cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += src[srcOff] * wt;\n              g += src[srcOff + 1] * wt;\n              b += src[srcOff + 2] * wt;\n              a += src[srcOff + 3] * wt;\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n      }\n\n      context.putImageData(output, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * GradientTransparency filter class\n   * @class fabric.Image.filters.GradientTransparency\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.GradientTransparency({\n   *   threshold: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n   // eslint-disable-next-line max-len\n  filters.GradientTransparency = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'GradientTransparency',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.GradientTransparency.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=100] Threshold value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 100;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          total = data.length;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i + 3] = threshold + 255 * (total - i) / total;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency\n   */\n  fabric.Image.filters.GradientTransparency.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Grayscale.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          len = imageData.width * imageData.height * 4,\n          index = 0,\n          average;\n\n      while (index < len) {\n        average = (data[index] + data[index + 1] + data[index + 2]) / 3;\n        data[index]     = average;\n        data[index + 1] = average;\n        data[index + 2] = average;\n        index += 4;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Grayscale';\n    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Invert.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Invert';\n    return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Mask filter class\n   * See http://resources.aleph-1.com/mask/\n   * @class fabric.Image.filters.Mask\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition\n   */\n  filters.Mask = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Mask',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Mask.prototype\n     * @param {Object} [options] Options object\n     * @param {fabric.Image} [options.mask] Mask image object\n     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.mask = options.mask;\n      this.channel = [0, 1, 2, 3].indexOf(options.channel) > -1 ? options.channel : 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      if (!this.mask) {\n        return;\n      }\n\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          maskEl = this.mask.getElement(),\n          maskCanvasEl = fabric.util.createCanvasElement(),\n          channel = this.channel,\n          i,\n          iLen = imageData.width * imageData.height * 4;\n\n      maskCanvasEl.width = canvasEl.width;\n      maskCanvasEl.height = canvasEl.height;\n\n      maskCanvasEl.getContext('2d').drawImage(maskEl, 0, 0, canvasEl.width, canvasEl.height);\n\n      var maskImageData = maskCanvasEl.getContext('2d').getImageData(0, 0, canvasEl.width, canvasEl.height),\n          maskData = maskImageData.data;\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i + 3] = maskData[i + channel];\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        mask: this.mask.toObject(),\n        channel: this.channel\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when a mask filter instance is created\n   */\n  fabric.Image.filters.Mask.fromObject = function(object, callback) {\n    fabric.util.loadImage(object.mask.src, function(img) {\n      object.mask = new fabric.Image(img, object.mask);\n      return fabric.Image.filters.BaseFilter.fromObject(object, callback);\n    });\n  };\n\n  /**\n   * Indicates that instances of this type are async\n   * @static\n   * @type Boolean\n   * @default\n   */\n  fabric.Image.filters.Mask.async = true;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Noise.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.noise=0] Noise value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.noise = options.noise || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          noise = this.noise, rand;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Pixelate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.blocksize=4] Blocksize for pixelate\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.blocksize = options.blocksize || 4;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          /*\n           blocksize: 4\n\n           [1,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [x,x,x,x,1]\n           [1,1,1,1,1]\n           */\n\n          for (var _i = i, _ilen = i + this.blocksize; _i < _ilen; _i++) {\n            for (var _j = j, _jlen = j + this.blocksize; _j < _jlen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        blocksize: this.blocksize\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveWhite\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveWhite({\n   *   threshold: 40,\n   *   distance: 140\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.RemoveWhite = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveWhite',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.threshold=30] Threshold value\n     * @param {Number} [options.distance=20] Distance value\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.threshold = options.threshold || 30;\n      this.distance = options.distance || 20;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          threshold = this.threshold,\n          distance = this.distance,\n          limit = 255 - threshold,\n          abs = Math.abs,\n          r, g, b;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > limit &&\n            g > limit &&\n            b > limit &&\n            abs(r - g) < distance &&\n            abs(r - b) < distance &&\n            abs(g - b) < distance\n        ) {\n          data[i + 3] = 0;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        threshold: this.threshold,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveWhite.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia filter class\n   * @class fabric.Image.filters.Sepia\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, avg;\n\n      for (i = 0; i < iLen; i += 4) {\n        avg = 0.3  * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];\n        data[i] = avg + 100;\n        data[i + 1] = avg + 50;\n        data[i + 2] = avg + 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia\n   */\n  fabric.Image.filters.Sepia.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Sepia';\n    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Sepia2 filter class\n   * @class fabric.Image.filters.Sepia2\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Sepia2();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Sepia2 = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Sepia2',\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Sepia.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i, r, g, b;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        data[i] = (r * 0.393 + g * 0.769 + b * 0.189 ) / 1.351;\n        data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168 ) / 1.203;\n        data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131 ) / 2.140;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2\n   */\n  fabric.Image.filters.Sepia2.fromObject = function(object, callback) {\n    object = object || { };\n    object.type = 'Sepia2';\n    return new fabric.Image.filters.BaseFilter.fromObject(object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Tint filter class\n   * Adapted from <a href=\"https://github.com/mezzoblue/PaintbrushJS\">https://github.com/mezzoblue/PaintbrushJS</a>\n   * @class fabric.Image.filters.Tint\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Tint filter with hex color and opacity</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: '#3513B0',\n   *   opacity: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Tint filter with rgba color</caption>\n   * var filter = new fabric.Image.filters.Tint({\n   *   color: 'rgba(53, 21, 176, 0.5)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Tint = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Tint',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Tint.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to tint the image with\n     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n      this.opacity = typeof options.opacity !== 'undefined'\n                      ? options.opacity\n                      : new fabric.Color(this.color).getAlpha();\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          tintR, tintG, tintB,\n          r, g, b, alpha1,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      tintR = source[0] * this.opacity;\n      tintG = source[1] * this.opacity;\n      tintB = source[2] * this.opacity;\n\n      alpha1 = 1 - this.opacity;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        // alpha compositing\n        data[i] = tintR + r * alpha1;\n        data[i + 1] = tintG + g * alpha1;\n        data[i + 2] = tintB + b * alpha1;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        opacity: this.opacity\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint\n   */\n  fabric.Image.filters.Tint.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Multiply filter class\n   * Adapted from <a href=\"http://www.laurenscorijn.com/articles/colormath-basics\">http://www.laurenscorijn.com/articles/colormath-basics</a>\n   * @class fabric.Image.filters.Multiply\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example <caption>Multiply filter with hex color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: '#F0F'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   * @example <caption>Multiply filter with rgb color</caption>\n   * var filter = new fabric.Image.filters.Multiply({\n   *   color: 'rgb(53, 21, 176)'\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Multiply = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Multiply',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Multiply.prototype\n     * @param {Object} [options] Options object\n     * @param {String} [options.color=#000000] Color to multiply the image pixels with\n     */\n    initialize: function(options) {\n      options = options || { };\n\n      this.color = options.color || '#000000';\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          iLen = data.length, i,\n          source;\n\n      source = new fabric.Color(this.color).getSource();\n\n      for (i = 0; i < iLen; i += 4) {\n        data[i] *= source[0] / 255;\n        data[i + 1] *= source[1] / 255;\n        data[i + 2] *= source[2] / 255;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply\n   */\n  fabric.Image.filters.Multiply.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.Blend\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.Blend({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.Blend({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Blend = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'Blend',\n\n    initialize: function(options) {\n      options = options || {};\n      this.color = options.color || '#000';\n      this.image = options.image || false;\n      this.mode = options.mode || 'multiply';\n      this.alpha = options.alpha || 1;\n    },\n\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          tr, tg, tb,\n          r, g, b,\n          _r, _g, _b,\n          source,\n          isImage = false;\n\n      if (this.image) {\n        // Blend images\n        isImage = true;\n\n        var _el = fabric.util.createCanvasElement();\n        _el.width = this.image.width;\n        _el.height = this.image.height;\n\n        var tmpCanvas = new fabric.StaticCanvas(_el);\n        tmpCanvas.add(this.image);\n        var context2 =  tmpCanvas.getContext('2d');\n        source = context2.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height).data;\n      }\n      else {\n        // Blend color\n        source = new fabric.Color(this.color).getSource();\n\n        tr = source[0] * this.alpha;\n        tg = source[1] * this.alpha;\n        tb = source[2] * this.alpha;\n      }\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (isImage) {\n          tr = source[i] * this.alpha;\n          tg = source[i + 1] * this.alpha;\n          tb = source[i + 2] * this.alpha;\n        }\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 1 - (1 - r) * (1 - tr);\n            data[i + 1] = 1 - (1 - g) * (1 - tg);\n            data[i + 2] = 1 - (1 - b) * (1 - tb);\n            break;\n          case 'add':\n            data[i] = Math.min(255, r + tr);\n            data[i + 1] = Math.min(255, g + tg);\n            data[i + 2] = Math.min(255, b + tb);\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            _r = r - tr;\n            _g = g - tg;\n            _b = b - tb;\n\n            data[i] = (_r < 0) ? 0 : _r;\n            data[i + 1] = (_g < 0) ? 0 : _g;\n            data[i + 2] = (_b < 0) ? 0 : _b;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n        }\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        color: this.color,\n        image: this.image,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Blend} Instance of fabric.Image.filters.Blend\n   */\n  fabric.Image.filters.Blend.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, max = Math.max, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo: function(canvasEl, scaleX, scaleY) {\n      if (scaleX === 1 && scaleY === 1) {\n        return;\n      }\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = canvasEl.width, oH = canvasEl.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          imageData;\n\n      if (this.resizeType === 'sliceHack') {\n        imageData = this.sliceByTwo(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'hermite') {\n        imageData = this.hermiteFastResize(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'bilinear') {\n        imageData = this.bilinearFiltering(canvasEl, oW, oH, dW, dH);\n      }\n      if (this.resizeType === 'lanczos') {\n        imageData = this.lanczosResize(canvasEl, oW, oH, dW, dH);\n      }\n      canvasEl.width = dW;\n      canvasEl.height = dH;\n      canvasEl.getContext('2d').putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(canvasEl, oW, oH, dW, dH) {\n      var context = canvasEl.getContext('2d'), imageData,\n          multW = 0.5, multH = 0.5, signW = 1, signH = 1,\n          doneW = false, doneH = false, stepW = oW, stepH = oH,\n          tmpCanvas = fabric.util.createCanvasElement(),\n          tmpCtx = tmpCanvas.getContext('2d');\n      dW = floor(dW);\n      dH = floor(dH);\n      tmpCanvas.width = max(dW, oW);\n      tmpCanvas.height = max(dH, oH);\n\n      if (dW > oW) {\n        multW = 2;\n        signW = -1;\n      }\n      if (dH > oH) {\n        multH = 2;\n        signH = -1;\n      }\n      imageData = context.getImageData(0, 0, oW, oH);\n      canvasEl.width = max(dW, oW);\n      canvasEl.height = max(dH, oH);\n      context.putImageData(imageData, 0, 0);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW * signW < floor(stepW * multW * signW)) {\n          stepW = floor(stepW * multW);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH * signH < floor(stepH * multH * signH)) {\n          stepH = floor(stepH * multH);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        imageData = context.getImageData(0, 0, oW, oH);\n        tmpCtx.putImageData(imageData, 0, 0);\n        context.clearRect(0, 0, stepW, stepH);\n        context.drawImage(tmpCanvas, 0, 0, oW, oH, 0, 0, stepW, stepH);\n      }\n      return context.getImageData(0, 0, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(canvasEl, oW, oH, dW, dH) {\n\n      function lanczosCreate(lobes) {\n        return function(x) {\n          if (x > lobes) {\n            return 0;\n          }\n          x *= Math.PI;\n          if (abs(x) < 1e-16) {\n            return 1;\n          }\n          var xx = x / lobes;\n          return sin(x) * sin(xx) / x / xx;\n        };\n      }\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var context = canvasEl.getContext('2d'),\n          srcImg = context.getImageData(0, 0, oW, oH),\n          destImg = context.getImageData(0, 0, dW, dH),\n          srcData = srcImg.data, destData = destImg.data,\n          lanczos = lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(canvasEl, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY, context = canvasEl.getContext('2d'),\n          w4 = 4 * (oW - 1), img = context.getImageData(0, 0, oW, oH),\n          pixels = img.data, destImage = context.getImageData(0, 0, dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(canvasEl, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          context = canvasEl.getContext('2d'),\n          img = context.getImageData(0, 0, oW, oH), data = img.data,\n          img2 = context.getImageData(0, 0, dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.ColorMatrix.prototype\n     * @param {Object} [options] Options object\n     * @param {Array} [options.matrix] Color Matrix to modify the image data with\n     */\n    initialize: function( options ) {\n      options || ( options = {} );\n      this.matrix = options.matrix || [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function( canvasEl ) {\n      var context = canvasEl.getContext( '2d' ),\n          imageData = context.getImageData( 0, 0, canvasEl.width, canvasEl.height ),\n          data = imageData.data,\n          iLen = data.length,\n          i,\n          r,\n          g,\n          b,\n          a,\n          m = this.matrix;\n\n      for ( i = 0; i < iLen; i += 4 ) {\n        r = data[ i ];\n        g = data[ i + 1 ];\n        b = data[ i + 2 ];\n        a = data[ i + 3 ];\n\n        data[ i ] = r * m[ 0 ] + g * m[ 1 ] + b * m[ 2 ] + a * m[ 3 ] + m[ 4 ];\n        data[ i + 1 ] = r * m[ 5 ] + g * m[ 6 ] + b * m[ 7 ] + a * m[ 8 ] + m[ 9 ];\n        data[ i + 2 ] = r * m[ 10 ] + g * m[ 11 ] + b * m[ 12 ] + a * m[ 13 ] + m[ 14 ];\n        data[ i + 3 ] = r * m[ 15 ] + g * m[ 16 ] + b * m[ 17 ] + a * m[ 18 ] + m[ 19 ];\n      }\n\n      context.putImageData( imageData, 0, 0 );\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        type: this.type,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-255...255)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.contrast = options.contrast || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          contrastF = 259 * (this.contrast + 255) / (255 * (259 - this.contrast));\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        contrast: this.contrast\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturate({\n   *   saturate: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Saturate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturate',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-100...100)\n     */\n    initialize: function(options) {\n      options = options || { };\n      this.saturate = options.saturate || 0;\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo: function(canvasEl) {\n      var context = canvasEl.getContext('2d'),\n          imageData = context.getImageData(0, 0, canvasEl.width, canvasEl.height),\n          data = imageData.data,\n          max, adjust = -this.saturate * 0.01;\n\n      for (var i = 0, len = data.length; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n\n      context.putImageData(imageData, 0, 0);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        saturate: this.saturate\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturate} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n      MIN_TEXT_WIDTH = 2;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  var stateProperties = fabric.Object.prototype.stateProperties.concat();\n  stateProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor',\n    'charSpacing'\n  );\n\n  var cacheProperties = fabric.Object.prototype.cacheProperties.concat();\n  cacheProperties.push(\n    'fontFamily',\n    'fontWeight',\n    'fontSize',\n    'text',\n    'textDecoration',\n    'textAlign',\n    'fontStyle',\n    'lineHeight',\n    'textBackgroundColor',\n    'charSpacing',\n    'styles'\n  );\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign'\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]+/g,\n\n    /**\n     * Retrieves object's fontSize\n     * @method getFontSize\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font size (in pixels)\n     */\n\n    /**\n     * Sets object's fontSize\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontSize\n     * @memberOf fabric.Text.prototype\n     * @param {Number} fontSize Font size (in pixels)\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontWeight\n     * @method getFontWeight\n     * @memberOf fabric.Text.prototype\n     * @return {(String|Number)} Font weight\n     */\n\n    /**\n     * Sets object's fontWeight\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontWeight\n     * @memberOf fabric.Text.prototype\n     * @param {(Number|String)} fontWeight Font weight\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontFamily\n     * @method getFontFamily\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font family\n     */\n\n    /**\n     * Sets object's fontFamily\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontFamily\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontFamily Font family\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's text\n     * @method getText\n     * @memberOf fabric.Text.prototype\n     * @return {String} text\n     */\n\n    /**\n     * Sets object's text\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setText\n     * @memberOf fabric.Text.prototype\n     * @param {String} text Text\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textDecoration\n     * @method getTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text decoration\n     */\n\n    /**\n     * Sets object's textDecoration\n     * @method setTextDecoration\n     * @memberOf fabric.Text.prototype\n     * @param {String} textDecoration Text decoration\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's fontStyle\n     * @method getFontStyle\n     * @memberOf fabric.Text.prototype\n     * @return {String} Font style\n     */\n\n    /**\n     * Sets object's fontStyle\n     * Does not update the object .width and .height,\n     * call ._initDimensions() to update the values.\n     * @method setFontStyle\n     * @memberOf fabric.Text.prototype\n     * @param {String} fontStyle Font style\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's lineHeight\n     * @method getLineHeight\n     * @memberOf fabric.Text.prototype\n     * @return {Number} Line height\n     */\n\n    /**\n     * Sets object's lineHeight\n     * @method setLineHeight\n     * @memberOf fabric.Text.prototype\n     * @param {Number} lineHeight Line height\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textAlign\n     * @method getTextAlign\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text alignment\n     */\n\n    /**\n     * Sets object's textAlign\n     * @method setTextAlign\n     * @memberOf fabric.Text.prototype\n     * @param {String} textAlign Text alignment\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Retrieves object's textBackgroundColor\n     * @method getTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @return {String} Text background color\n     */\n\n    /**\n     * Sets object's textBackgroundColor\n     * @method setTextBackgroundColor\n     * @memberOf fabric.Text.prototype\n     * @param {String} textBackgroundColor Text background color\n     * @return {fabric.Text}\n     * @chainable\n     */\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration Possible values: \"\", \"underline\", \"overline\" or \"line-through\".\n     * @type String\n     * @default\n     */\n    textDecoration:       '',\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\" or \"justify\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            '',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties:      stateProperties,\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties:      cacheProperties,\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.25,\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      options = options || { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this._initDimensions();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n      }\n      this._textLines = this._splitTextIntoLines();\n      this._clearCache();\n      this.width = this._getTextWidth(ctx) || this.cursorWidth || MIN_TEXT_WIDTH;\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dim = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = Math.ceil(this.fontSize) * 2;\n      dim.width += fontSize;\n      dim.height += fontSize;\n      return dim;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      if (this.group && this.group.type === 'path-group') {\n        ctx.translate(this.left, this.top);\n      }\n      this._renderTextLinesBackground(ctx);\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setTextStyles: function(ctx) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration();\n    },\n\n    /**\n     * @private\n     * @return {Number} Height of fabric.Text object\n     */\n    _getTextHeight: function() {\n      return this._getHeightOfSingleLine() + (this._textLines.length - 1) * this._getHeightOfLine();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    _getTextWidth: function(ctx) {\n      var maxWidth = this._getLineWidth(ctx, 0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this._getLineWidth(ctx, i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} chars Chars to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     */\n    _renderChars: function(method, ctx, chars, left, top) {\n      // remove Text word from method var\n      var shortM = method.slice(0, -4), char, width;\n      if (this[shortM].toLive) {\n        var offsetX = -this.width / 2 + this[shortM].offsetX || 0,\n            offsetY = -this.height / 2 + this[shortM].offsetY || 0;\n        ctx.save();\n        ctx.translate(offsetX, offsetY);\n        left -= offsetX;\n        top -= offsetY;\n      }\n      if (this.charSpacing !== 0) {\n        var additionalSpace = this._getWidthOfCharSpacing();\n        chars = chars.split('');\n        for (var i = 0, len = chars.length; i < len; i++) {\n          char = chars[i];\n          width = ctx.measureText(char).width + additionalSpace;\n          ctx[method](char, left, top);\n          left += width > 0 ? width : 0;\n        }\n      }\n      else {\n        ctx[method](chars, left, top);\n      }\n      this[shortM].toLive && ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // lift the line by quarter of fontSize\n      top -= this.fontSize * this._fontSizeFraction;\n\n      // short-circuit\n      var lineWidth = this._getLineWidth(ctx, lineIndex);\n      if (this.textAlign !== 'justify' || this.width < lineWidth) {\n        this._renderChars(method, ctx, line, left, top, lineIndex);\n        return;\n      }\n\n      // stretch the line\n      var words = line.split(/\\s+/),\n          charOffset = 0,\n          wordsWidth = this._getWidthOfWords(ctx, words.join(' '), lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          leftOffset = 0, word;\n\n      for (var i = 0, len = words.length; i < len; i++) {\n        while (line[charOffset] === ' ' && charOffset < line.length) {\n          charOffset++;\n        }\n        word = words[i];\n        this._renderChars(method, ctx, word, left + leftOffset, top, lineIndex, charOffset);\n        leftOffset += this._getWidthOfWords(ctx, word, lineIndex, charOffset) + spaceWidth;\n        charOffset += word.length;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} word\n     */\n    _getWidthOfWords: function (ctx, word) {\n      var width = ctx.measureText(word).width, charCount, additionalSpace;\n      if (this.charSpacing !== 0) {\n        charCount = word.split('').length;\n        additionalSpace = charCount * this._getWidthOfCharSpacing();\n        width += additionalSpace;\n      }\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * Returns true because text has no style\n     */\n    isEmptyStyles: function() {\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this._getHeightOfLine(ctx, i),\n            maxHeight = heightOfLine / this.lineHeight,\n            lineWidth = this._getLineWidth(ctx, i),\n            leftOffset = this._getLineLeftOffset(lineWidth);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset,\n          top + lineHeights + maxHeight,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && this.isEmptyStyles()) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line\n     */\n    _getHeightOfLine: function() {\n      return this._getHeightOfSingleLine() * this.lineHeight;\n    },\n\n    /**\n     * @private\n     * @return {Number} height of line without lineHeight\n     */\n    _getHeightOfSingleLine: function() {\n      return this.fontSize * this._fontSizeMult;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset, originalFill = ctx.fillStyle;\n\n      ctx.fillStyle = this.textBackgroundColor;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        lineWidth = this._getLineWidth(ctx, i);\n        if (lineWidth > 0) {\n          lineLeftOffset = this._getLineLeftOffset(lineWidth);\n          ctx.fillRect(\n            this._getLeftOffset() + lineLeftOffset,\n            this._getTopOffset() + lineTopOffset,\n            lineWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Number} lineWidth Width of text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineWidth) {\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.saveState({ propertySet: '_dimensionAffectingProps' });\n        this.dirty = true;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _getLineWidth: function(ctx, lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex] === -1 ? this.width : this.__lineWidths[lineIndex];\n      }\n\n      var width, wordCount, line = this._textLines[lineIndex];\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        width = this._measureLine(ctx, lineIndex);\n      }\n      this.__lineWidths[lineIndex] = width;\n\n      if (width && this.textAlign === 'justify') {\n        wordCount = line.split(/\\s+/);\n        if (wordCount.length > 1) {\n          this.__lineWidths[lineIndex] = -1;\n        }\n      }\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      var line = this._textLines[lineIndex],\n          width = ctx.measureText(line).width,\n          additionalSpace = 0, charCount, finalWidth;\n      if (this.charSpacing !== 0) {\n        charCount = line.split('').length;\n        additionalSpace = (charCount - 1) * this._getWidthOfCharSpacing();\n      }\n      finalWidth = width + additionalSpace;\n      return finalWidth > 0 ? finalWidth : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (!this.textDecoration) {\n        return;\n      }\n      var halfOfVerticalBox = this.height / 2,\n          _this = this, offsets = [];\n\n      /** @ignore */\n      function renderLinesAtOffset(offsets) {\n        var i, lineHeight = 0, len, j, oLen, lineWidth,\n            lineLeftOffset, heightOfLine;\n\n        for (i = 0, len = _this._textLines.length; i < len; i++) {\n\n          lineWidth = _this._getLineWidth(ctx, i);\n          lineLeftOffset = _this._getLineLeftOffset(lineWidth);\n          heightOfLine = _this._getHeightOfLine(ctx, i);\n\n          for (j = 0, oLen = offsets.length; j < oLen; j++) {\n            ctx.fillRect(\n              _this._getLeftOffset() + lineLeftOffset,\n              lineHeight + (_this._fontSizeMult - 1 + offsets[j] ) * _this.fontSize - halfOfVerticalBox,\n              lineWidth,\n              _this.fontSize / 15);\n          }\n          lineHeight += heightOfLine;\n        }\n      }\n\n      if (this.textDecoration.indexOf('underline') > -1) {\n        offsets.push(0.85); // 1 - 3/16\n      }\n      if (this.textDecoration.indexOf('line-through') > -1) {\n        offsets.push(0.43);\n      }\n      if (this.textDecoration.indexOf('overline') > -1) {\n        offsets.push(-0.12);\n      }\n      if (offsets.length > 0) {\n        renderLinesAtOffset(offsets);\n      }\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function() {\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? this.fontWeight : this.fontStyle),\n        (fabric.isLikelyNode ? this.fontStyle : this.fontWeight),\n        this.fontSize + 'px',\n        (fabric.isLikelyNode ? ('\"' + this.fontFamily + '\"') : this.fontFamily)\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this._setTextStyles(ctx);\n        this._initDimensions(ctx);\n      }\n      this.callSuper('render', ctx, noTransform);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function() {\n      return this.text.split(this._reNewline);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'textDecoration',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing'\n      ].concat(propertiesToInclude);\n      return this.callSuper('toObject', additionalProperties);\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      if (!this.ctx) {\n        this.ctx = fabric.util.createCanvasElement().getContext('2d');\n      }\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(this.ctx),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function(ctx) {\n      var lineTop = this._getHeightOfLine(ctx, 0),\n          textLeft = -this.width / 2,\n          textTop = 0;\n\n      return {\n        textLeft: textLeft + (this.group && this.group.type === 'path-group' ? this.left : 0),\n        textTop: textTop + (this.group && this.group.type === 'path-group' ? -this.top : 0),\n        lineTop: lineTop\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"';\n\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n          style, '>\\n',\n          textAndBg.textBgRects.join(''),\n          '\\t\\t<text ',\n            (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n            (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n            (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n            (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n            (this.textDecoration ? 'text-decoration=\"' + this.textDecoration + '\" ' : ''),\n            'style=\"', this.getSvgStyles(noShadow), '\" >\\n',\n            textAndBg.textSpans.join(''),\n          '\\t\\t</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = 0;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textBackgroundColor) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset, textTopOffset, height);\n        }\n        this._setSVGTextLineText(i, textSpans, height, textLeftOffset, textTopOffset, textBgRects);\n        height += this._getHeightOfLine(this.ctx, i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    _setSVGTextLineText: function(i, textSpans, height, textLeftOffset, textTopOffset) {\n      var yPos = this.fontSize * (this._fontSizeMult - this._fontSizeFraction)\n        - textTopOffset + height - this.height / 2;\n      if (this.textAlign === 'justify') {\n        // i call from here to do not intefere with IText\n        this._setSVGTextLineJustifed(i, textSpans, yPos, textLeftOffset);\n        return;\n      }\n      textSpans.push(\n        '\\t\\t\\t<tspan x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS), '\" ',\n          'y=\"',\n          toFixed(yPos, NUM_FRACTION_DIGITS),\n          '\" ',\n          // doing this on <tspan> elements since setting opacity\n          // on containing <text> one doesn't work in Illustrator\n          this._getFillAttributes(this.fill), '>',\n          fabric.util.string.escapeXml(this._textLines[i]),\n        '</tspan>\\n'\n      );\n    },\n\n    _setSVGTextLineJustifed: function(i, textSpans, yPos, textLeftOffset) {\n      var ctx = fabric.util.createCanvasElement().getContext('2d');\n\n      this._setTextStyles(ctx);\n\n      var line = this._textLines[i],\n          words = line.split(/\\s+/),\n          wordsWidth = this._getWidthOfWords(ctx, words.join('')),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = words.length - 1,\n          spaceWidth = numSpaces > 0 ? widthDiff / numSpaces : 0,\n          word, attributes = this._getFillAttributes(this.fill),\n          len;\n\n      textLeftOffset += this._getLineLeftOffset(this._getLineWidth(ctx, i));\n\n      for (i = 0, len = words.length; i < len; i++) {\n        word = words[i];\n        textSpans.push(\n          '\\t\\t\\t<tspan x=\"',\n            toFixed(textLeftOffset, NUM_FRACTION_DIGITS), '\" ',\n            'y=\"',\n            toFixed(yPos, NUM_FRACTION_DIGITS),\n            '\" ',\n            // doing this on <tspan> elements since setting opacity\n            // on containing <text> one doesn't work in Illustrator\n            attributes, '>',\n            fabric.util.string.escapeXml(word),\n          '</tspan>\\n'\n        );\n        textLeftOffset += this._getWidthOfWords(ctx, word) + spaceWidth;\n      }\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, textLeftOffset, textTopOffset, height) {\n      textBgRects.push(\n        '\\t\\t<rect ',\n          this._getFillAttributes(this.textBackgroundColor),\n          ' x=\"',\n          toFixed(textLeftOffset + this._getLineLeftOffset(this._getLineWidth(this.ctx, i)), NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(height - this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this._getLineWidth(this.ctx, i), NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this._getHeightOfLine(this.ctx, i) / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        textBgRects.push(\n          '\\t\\t<rect ',\n            this._getFillAttributes(this.backgroundColor),\n            ' x=\"',\n            toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n            '\" y=\"',\n            toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n            '\" width=\"',\n            toFixed(this.width, NUM_FRACTION_DIGITS),\n            '\" height=\"',\n            toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Sets specified property to a specified value\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Text} thisArg\n     * @chainable\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (this._dimensionAffectingProps.indexOf(key) > -1) {\n        this._initDimensions();\n        this.setCoords();\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromElement = function(element, options) {\n    if (!element) {\n      return null;\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES);\n    options = fabric.util.object.extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    if (!options.originX) {\n      options.originX = 'left';\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        top/left properties in Fabric correspond to center point of text bounding box\n    */\n    if (text.originX === 'left') {\n      offX = text.getWidth() / 2;\n    }\n    if (text.originX === 'right') {\n      offX = -text.getWidth() / 2;\n    }\n    text.set({\n      left: text.getLeft() + offX,\n      top: text.getTop() - textHeight / 2 + text.fontSize * (0.18 + text._fontSizeFraction) / text.lineHeight /* 0.3 is the old lineHeight */\n    });\n\n    return text;\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Text} Instance of fabric.Text\n   */\n  fabric.Text.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Text', object, callback, forceAsync, 'text');\n  };\n\n  fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Object containing character styles\n     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.callSuper('_clearCache');\n      this.__widthOfSpace = [];\n    },\n\n    /**\n     * Returns true if object has no styling\n     */\n    isEmptyStyles: function() {\n      if (!this.styles) {\n        return true;\n      }\n      var obj = this.styles;\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at\n     * @return {Object} styles Style object at a specified (or current) index\n     */\n    getSelectionStyles: function(startIndex, endIndex) {\n\n      if (arguments.length === 2) {\n        var styles = [];\n        for (var i = startIndex; i < endIndex; i++) {\n          styles.push(this.getSelectionStyles(i));\n        }\n        return styles;\n      }\n\n      var loc = this.get2DCursorLocation(startIndex),\n          style = this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection\n     * @param {Object} [styles] Styles object\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles) {\n      if (this.selectionStart === this.selectionEnd) {\n        this._extendStyles(this.selectionStart, styles);\n      }\n      else {\n        for (var i = this.selectionStart; i < this.selectionEnd; i++) {\n          this._extendStyles(i, styles);\n        }\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @param {CanvasRenderingContext2D} [ctx] Context to render on\n     * @private\n     */\n    _initDimensions: function(ctx) {\n      if (!ctx) {\n        this.clearContextTop();\n      }\n      this.callSuper('_initDimensions', ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Boolean} noTransform\n     */\n    render: function(ctx, noTransform) {\n      this.clearContextTop();\n      this.callSuper('render', ctx, noTransform);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n      this.ctx = ctx;\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.active || !this.isEditing) {\n        return;\n      }\n      var chars = this.text.split(''),\n          boundaries, ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        ctx.save();\n        ctx.transform.apply(ctx, this.canvas.viewportTransform);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n      }\n      else {\n        ctx = this.ctx;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        boundaries = this._getCursorBoundaries(chars, 'cursor');\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        boundaries = this._getCursorBoundaries(chars, 'selection');\n        this.renderSelection(chars, boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var len = this._textLines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= this._textLines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= this._textLines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: this._textLines[i - 1].length < selectionStart ? this._textLines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Returns complete style of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Object} Character style\n     */\n    getCurrentCharStyle: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n\n      return {\n        fontSize: style && style.fontSize || this.fontSize,\n        fill: style && style.fill || this.fill,\n        textBackgroundColor: style && style.textBackgroundColor || this.textBackgroundColor,\n        textDecoration: style && style.textDecoration || this.textDecoration,\n        fontFamily: style && style.fontFamily || this.fontFamily,\n        fontWeight: style && style.fontWeight || this.fontWeight,\n        fontStyle: style && style.fontStyle || this.fontStyle,\n        stroke: style && style.stroke || this.stroke,\n        strokeWidth: style && style.strokeWidth || this.strokeWidth\n      };\n    },\n\n    /**\n     * Returns fontSize of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * Returns color (fill) of char at the current cursor\n     * @param {Number} lineIndex Line index\n     * @param {Number} charIndex Char index\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex === 0 ? 0 : charIndex - 1);\n      return style && style.fill ? style.fill : this.cursorColor;\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(chars, typeOfBoundaries) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      var left = Math.round(this._getLeftOffset()),\n          top = this._getTopOffset(),\n\n          offsets = this._getCursorBoundariesOffsets(\n                      chars, typeOfBoundaries);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left + offsets.lineLeft,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset = 0,\n          lineIndex = 0,\n          charIndex = 0,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries;\n\n      for (var i = 0; i < this.selectionStart; i++) {\n        if (chars[i] === '\\n') {\n          leftOffset = 0;\n          topOffset += this._getHeightOfLine(this.ctx, lineIndex);\n\n          lineIndex++;\n          charIndex = 0;\n        }\n        else {\n          leftOffset += this._getWidthOfChar(this.ctx, chars[i], lineIndex, charIndex);\n          charIndex++;\n        }\n\n        lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex));\n      }\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, lineIndex) / this.lineHeight\n          - this.getCurrentCharFontSize(lineIndex, charIndex) * (1 - this._fontSizeFraction);\n      }\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: leftOffset > 0 ? leftOffset : 0,\n        lineLeft: lineLeftOffset\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = (lineIndex === 0 && charIndex === 0)\n                    ? this._getLineLeftOffset(this._getLineWidth(ctx, lineIndex))\n                    : boundaries.leftOffset,\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier;\n\n      ctx.fillStyle = this.getCurrentCharColor(lineIndex, charIndex);\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n\n      ctx.fillRect(\n        boundaries.left + leftOffset - cursorWidth / 2,\n        boundaries.top + boundaries.topOffset,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Array} chars Array of characters\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(chars, boundaries, ctx) {\n\n      ctx.fillStyle = this.selectionColor;\n\n      var start = this.get2DCursorLocation(this.selectionStart),\n          end = this.get2DCursorLocation(this.selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex;\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(this._getLineWidth(ctx, i)) || 0,\n            lineHeight = this._getHeightOfLine(this.ctx, i),\n            realLineHeight = 0, boxWidth = 0, line = this._textLines[i];\n\n        if (i === startLine) {\n          for (var j = 0, len = line.length; j < len; j++) {\n            if (j >= start.charIndex && (i !== endLine || j < end.charIndex)) {\n              boxWidth += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n            if (j < start.charIndex) {\n              lineOffset += this._getWidthOfChar(ctx, line[j], i, j);\n            }\n          }\n          if (j === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        else if (i > startLine && i < endLine) {\n          boxWidth += this._getLineWidth(ctx, i) || 5;\n        }\n        else if (i === endLine) {\n          for (var j2 = 0, j2len = end.charIndex; j2 < j2len; j2++) {\n            boxWidth += this._getWidthOfChar(ctx, line[j2], i, j2);\n          }\n          if (end.charIndex === line.length) {\n            boxWidth -= this._getWidthOfCharSpacing();\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        ctx.fillRect(\n          boundaries.left + lineOffset,\n          boundaries.top + boundaries.topOffset,\n          boxWidth > 0 ? boxWidth : 0,\n          lineHeight);\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex, charOffset) {\n\n      if (this.isEmptyStyles()) {\n        return this._renderCharsFast(method, ctx, line, left, top);\n      }\n\n      charOffset = charOffset || 0;\n\n      // set proper line offset\n      var lineHeight = this._getHeightOfLine(ctx, lineIndex),\n          prevStyle,\n          thisStyle,\n          charsToRender = '';\n\n      ctx.save();\n      top -= lineHeight / this.lineHeight * this._fontSizeFraction;\n      for (var i = charOffset, len = line.length + charOffset; i <= len; i++) {\n        prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex, i);\n        thisStyle = this.getCurrentCharStyle(lineIndex, i + 1);\n\n        if (this._hasStyleChanged(prevStyle, thisStyle) || i === len) {\n          this._renderChar(method, ctx, lineIndex, i - 1, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          prevStyle = thisStyle;\n        }\n        charsToRender += line[i - charOffset];\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     */\n    _renderCharsFast: function(method, ctx, line, left, top) {\n\n      if (method === 'fillText' && this.fill) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n      if (method === 'strokeText' && ((this.stroke && this.strokeWidth > 0) || this.skipFillStrokeCheck)) {\n        this.callSuper('_renderChars', method, ctx, line, left, top);\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} i\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, i, _char, left, top, lineHeight) {\n      var charWidth, charHeight, shouldFill, shouldStroke,\n          decl = this._getStyleDeclaration(lineIndex, i),\n          offset, textDecoration, chars, additionalSpace, _charWidth;\n\n      if (decl) {\n        charHeight = this._getHeightOfChar(ctx, _char, lineIndex, i);\n        shouldStroke = decl.stroke;\n        shouldFill = decl.fill;\n        textDecoration = decl.textDecoration;\n      }\n      else {\n        charHeight = this.fontSize;\n      }\n\n      shouldStroke = (shouldStroke || this.stroke) && method === 'strokeText';\n      shouldFill = (shouldFill || this.fill) && method === 'fillText';\n\n      decl && ctx.save();\n\n      charWidth = this._applyCharStylesGetWidth(ctx, _char, lineIndex, i, decl || null);\n      textDecoration = textDecoration || this.textDecoration;\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (this.charSpacing !== 0) {\n        additionalSpace = this._getWidthOfCharSpacing();\n        chars = _char.split('');\n        charWidth = 0;\n        for (var j = 0, len = chars.length, char; j < len; j++) {\n          char = chars[j];\n          shouldFill && ctx.fillText(char, left + charWidth, top);\n          shouldStroke && ctx.strokeText(char, left + charWidth, top);\n          _charWidth = ctx.measureText(char).width + additionalSpace;\n          charWidth += _charWidth > 0 ? _charWidth : 0;\n        }\n      }\n      else {\n        shouldFill && ctx.fillText(_char, left, top);\n        shouldStroke && ctx.strokeText(_char, left, top);\n      }\n\n      if (textDecoration || textDecoration !== '') {\n        offset = this._fontSizeFraction * lineHeight / this.lineHeight;\n        this._renderCharDecoration(ctx, textDecoration, left, top, offset, charWidth, charHeight);\n      }\n\n      decl && ctx.restore();\n      ctx.translate(charWidth, 0);\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return (prevStyle.fill !== thisStyle.fill ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n              prevStyle.textDecoration !== thisStyle.textDecoration ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth\n      );\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderCharDecoration: function(ctx, textDecoration, left, top, offset, charWidth, charHeight) {\n\n      if (!textDecoration) {\n        return;\n      }\n\n      var decorationWeight = charHeight / 15,\n          positions = {\n            underline: top + charHeight / 10,\n            'line-through': top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + decorationWeight,\n            overline: top - (this._fontSizeMult - this._fontSizeFraction) * charHeight\n          },\n          decorations = ['underline', 'line-through', 'overline'], i, decoration;\n\n      for (i = 0; i < decorations.length; i++) {\n        decoration = decorations[i];\n        if (textDecoration.indexOf(decoration) > -1) {\n          ctx.fillRect(left, positions[decoration], charWidth , decorationWeight);\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      // to \"cancel\" this.fontSize subtraction in fabric.Text#_renderTextLine\n      // the adding 0.03 is just to align text with itext by overlap test\n      if (!this.isEmptyStyles()) {\n        top += this.fontSize * (this._fontSizeFraction + 0.03);\n      }\n      this.callSuper('_renderTextLine', method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx) {\n      if (this.isEmptyStyles()) {\n        return this.callSuper('_renderTextDecoration', ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      this.callSuper('_renderTextLinesBackground', ctx);\n\n      var lineTopOffset = 0, heightOfLine,\n          lineWidth, lineLeftOffset,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          line, _char, style;\n      ctx.save();\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this._getHeightOfLine(ctx, i);\n        line = this._textLines[i];\n\n        if (line === '' || !this.styles || !this._getLineStyle(i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        lineWidth = this._getLineWidth(ctx, i);\n        lineLeftOffset = this._getLineLeftOffset(lineWidth);\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          style = this._getStyleDeclaration(i, j);\n          if (!style || !style.textBackgroundColor) {\n            continue;\n          }\n          _char = line[j];\n\n          ctx.fillStyle = style.textBackgroundColor;\n\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + this._getWidthOfCharsAt(ctx, i, j),\n            topOffset + lineTopOffset,\n            this._getWidthOfChar(ctx, _char, i, j),\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     */\n    _getCacheProp: function(_char, styleDeclaration) {\n      return _char +\n             styleDeclaration.fontSize +\n             styleDeclaration.fontWeight +\n             styleDeclaration.fontStyle;\n    },\n\n    /**\n     * @private\n     * @param {String} fontFamily name\n     * @return {Object} reference to cache\n     */\n    _getFontCache: function(fontFamily) {\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      return fabric.charWidthsCache[fontFamily];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStylesGetWidth: function(ctx, _char, lineIndex, charIndex, decl) {\n      var charDecl = decl || this._getStyleDeclaration(lineIndex, charIndex),\n          styleDeclaration = clone(charDecl),\n          width, cacheProp, charWidthsCache;\n\n      this._applyFontStyles(styleDeclaration);\n      charWidthsCache = this._getFontCache(styleDeclaration.fontFamily);\n      cacheProp = this._getCacheProp(_char, styleDeclaration);\n\n      // short-circuit if no styles for this char\n      // global style from object is always applyed and handled by save and restore\n      if (!charDecl && charWidthsCache[cacheProp] && this.caching) {\n        return charWidthsCache[cacheProp];\n      }\n\n      if (typeof styleDeclaration.shadow === 'string') {\n        styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);\n      }\n\n      var fill = styleDeclaration.fill || this.fill;\n      ctx.fillStyle = fill.toLive\n        ? fill.toLive(ctx, this)\n        : fill;\n\n      if (styleDeclaration.stroke) {\n        ctx.strokeStyle = (styleDeclaration.stroke && styleDeclaration.stroke.toLive)\n          ? styleDeclaration.stroke.toLive(ctx, this)\n          : styleDeclaration.stroke;\n      }\n\n      ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;\n      ctx.font = this._getFontDeclaration.call(styleDeclaration);\n\n      //if we want this._setShadow.call to work with styleDeclarion\n      //we have to add those references\n      if (styleDeclaration.shadow) {\n        styleDeclaration.scaleX = this.scaleX;\n        styleDeclaration.scaleY = this.scaleY;\n        styleDeclaration.canvas = this.canvas;\n        styleDeclaration.getObjectScaling = this.getObjectScaling;\n        this._setShadow.call(styleDeclaration, ctx);\n      }\n\n      if (!this.caching || !charWidthsCache[cacheProp]) {\n        width = ctx.measureText(_char).width;\n        this.caching && (charWidthsCache[cacheProp] = width);\n        return width;\n      }\n\n      return charWidthsCache[cacheProp];\n    },\n\n    /**\n     * @private\n     * @param {Object} styleDeclaration\n     */\n    _applyFontStyles: function(styleDeclaration) {\n      if (!styleDeclaration.fontFamily) {\n        styleDeclaration.fontFamily = this.fontFamily;\n      }\n      if (!styleDeclaration.fontSize) {\n        styleDeclaration.fontSize = this.fontSize;\n      }\n      if (!styleDeclaration.fontWeight) {\n        styleDeclaration.fontWeight = this.fontWeight;\n      }\n      if (!styleDeclaration.fontStyle) {\n        styleDeclaration.fontStyle = this.fontStyle;\n      }\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (returnCloneOrEmpty) {\n        return (this.styles[lineIndex] && this.styles[lineIndex][charIndex])\n          ? clone(this.styles[lineIndex][charIndex])\n          : { };\n      }\n\n      return this.styles[lineIndex] && this.styles[lineIndex][charIndex] ? this.styles[lineIndex][charIndex] : null;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getWidthOfChar: function(ctx, _char, lineIndex, charIndex) {\n      if (!this._isMeasuring && this.textAlign === 'justify' && this._reSpacesAndTabs.test(_char)) {\n        return this._getWidthOfSpace(ctx, lineIndex);\n      }\n      ctx.save();\n      var width = this._applyCharStylesGetWidth(ctx, _char, lineIndex, charIndex);\n      if (this.charSpacing !== 0) {\n        width += this._getWidthOfCharSpacing();\n      }\n      ctx.restore();\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getHeightOfChar: function(ctx, lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex);\n      return style && style.fontSize ? style.fontSize : this.fontSize;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     */\n    _getWidthOfCharsAt: function(ctx, lineIndex, charIndex) {\n      var width = 0, i, _char;\n      for (i = 0; i < charIndex; i++) {\n        _char = this._textLines[lineIndex][i];\n        width += this._getWidthOfChar(ctx, _char, lineIndex, i);\n      }\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    _measureLine: function(ctx, lineIndex) {\n      this._isMeasuring = true;\n      var width = this._getWidthOfCharsAt(ctx, lineIndex, this._textLines[lineIndex].length);\n      if (this.charSpacing !== 0) {\n        width -= this._getWidthOfCharSpacing();\n      }\n      this._isMeasuring = false;\n      return width > 0 ? width : 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     */\n    _getWidthOfSpace: function (ctx, lineIndex) {\n      if (this.__widthOfSpace[lineIndex]) {\n        return this.__widthOfSpace[lineIndex];\n      }\n      var line = this._textLines[lineIndex],\n          wordsWidth = this._getWidthOfWords(ctx, line, lineIndex, 0),\n          widthDiff = this.width - wordsWidth,\n          numSpaces = line.length - line.replace(this._reSpacesAndTabs, '').length,\n          width = Math.max(widthDiff / numSpaces, ctx.measureText(' ').width);\n      this.__widthOfSpace[lineIndex] = width;\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _getWidthOfWords: function (ctx, line, lineIndex, charOffset) {\n      var width = 0;\n\n      for (var charIndex = 0; charIndex < line.length; charIndex++) {\n        var _char = line[charIndex];\n\n        if (!_char.match(/\\s/)) {\n          width += this._getWidthOfChar(ctx, _char, lineIndex, charIndex + charOffset);\n        }\n      }\n\n      return width;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getHeightOfLine: function(ctx, lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          maxHeight = this._getHeightOfChar(ctx, lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        var currentCharHeight = this._getHeightOfChar(ctx, lineIndex, i);\n        if (currentCharHeight > maxHeight) {\n          maxHeight = currentCharHeight;\n        }\n      }\n      this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n      return this.__lineHeights[lineIndex];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _getTextHeight: function(ctx) {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this._getHeightOfLine(ctx, i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return fabric.util.object.extend(this.callSuper('toObject', propertiesToInclude), {\n        styles: clone(this.styles, true)\n      });\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.IText} instance of fabric.IText\n   */\n  fabric.IText.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('IText', object, callback, forceAsync, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    /**\n     * Initializes \"selected\" event handler\n     */\n    initSelectedHandler: function() {\n      this.on('selected', function() {\n\n        var _this = this;\n        setTimeout(function() {\n          _this.selected = true;\n        }, 100);\n      });\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._canvasITextSelectionClearedHanlder = (function() {\n        fabric.IText.prototype.exitEditingOnOthers(canvas);\n      }).bind(this);\n      canvas._mouseUpITextHandler = (function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      }).bind(this);\n      canvas.on('selection:cleared', canvas._canvasITextSelectionClearedHanlder);\n      canvas.on('object:selected', canvas._canvasITextSelectionClearedHanlder);\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('selection:cleared', canvas._canvasITextSelectionClearedHanlder);\n      canvas.off('object:selected', canvas._canvasITextSelectionClearedHanlder);\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear) {\n        this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this.text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this.text.slice(this.selectionStart, this.selectionEnd);\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this.text.charAt(index))) {\n        while (this._reSpace.test(this.text.charAt(index))) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this.text.charAt(index)) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Returns number of newlines in selected text\n     * @return {Number} Number of newlines in selected text\n     */\n    getNumNewLinesInSelectedText: function() {\n      var selectedText = this.getSelectedText(),\n          numNewLines  = 0;\n\n      for (var i = 0, len = selectedText.length; i < len; i++) {\n        if (selectedText[i] === '\\n') {\n          numNewLines++;\n        }\n      }\n      return numNewLines;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.renderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (newSelectionStart === this.__selectionStartOnMouseDown) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      if (!this.hiddenTextarea || this.inCompositionMode) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.hiddenTextarea.value = this.text;\n      this.hiddenTextarea.selectionStart = this.selectionStart;\n      this.hiddenTextarea.selectionEnd = this.selectionEnd;\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n        this.hiddenTextarea.style.fontSize = style.fontSize;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var chars = this.text.split(''),\n          boundaries = this._getCursorBoundaries(chars, 'cursor'),\n          cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getCurrentCharFontSize(lineIndex, charIndex),\n          leftOffset = (lineIndex === 0 && charIndex === 0)\n                    ? this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex))\n                    : boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          maxWidth = upperCanvas.width - charHeight,\n          maxHeight = upperCanvas.height - charHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.overCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n      this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n      this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n      this.hiddenTextarea = null;\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _removeCharsFromTo: function(start, end) {\n      while (end !== start) {\n        this._removeSingleCharAndStyle(start + 1);\n        end--;\n      }\n      this.selectionStart = start;\n      this.selectionEnd = start;\n    },\n\n    _removeSingleCharAndStyle: function(index) {\n      var isBeginningOfLine = this.text[index - 1] === '\\n',\n          indexStyle        = isBeginningOfLine ? index : index - 1;\n      this.removeStyleObject(isBeginningOfLine, indexStyle);\n      this.text = this.text.slice(0, index - 1) +\n        this.text.slice(index);\n\n      this._textLines = this._splitTextIntoLines();\n    },\n\n    /**\n     * Inserts characters where cursor is (replacing selection if one exists)\n     * @param {String} _chars Characters to insert\n     * @param {Boolean} useCopiedStyle use fabric.copiedTextStyle\n     */\n    insertChars: function(_chars, useCopiedStyle) {\n      var style;\n\n      if (this.selectionEnd - this.selectionStart > 1) {\n        this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n      }\n      //short circuit for block paste\n      if (!useCopiedStyle && this.isEmptyStyles()) {\n        this.insertChar(_chars, false);\n        return;\n      }\n      for (var i = 0, len = _chars.length; i < len; i++) {\n        if (useCopiedStyle) {\n          style = fabric.util.object.clone(fabric.copiedTextStyle[i], true);\n        }\n        this.insertChar(_chars[i], i < len - 1, style);\n      }\n    },\n\n    /**\n     * Inserts a character where cursor is\n     * @param {String} _char Characters to insert\n     * @param {Boolean} skipUpdate trigger rendering and updates at the end of text insert\n     * @param {Object} styleObject Style to be inserted for the new char\n     */\n    insertChar: function(_char, skipUpdate, styleObject) {\n      var isEndOfLine = this.text[this.selectionStart] === '\\n';\n      this.text = this.text.slice(0, this.selectionStart) +\n        _char + this.text.slice(this.selectionEnd);\n      this._textLines = this._splitTextIntoLines();\n      this.insertStyleObjects(_char, isEndOfLine, styleObject);\n      this.selectionStart += _char.length;\n      this.selectionEnd = this.selectionStart;\n      if (skipUpdate) {\n        return;\n      }\n      this._updateTextarea();\n      this.setCoords();\n      this._fireSelectionChanged();\n      this.fire('changed');\n      this.canvas && this.canvas.fire('text:changed', { target: this });\n      this.canvas && this.canvas.renderAll();\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n\n      this.shiftLineStyles(lineIndex, +1);\n\n      if (!this.styles[lineIndex + 1]) {\n        this.styles[lineIndex + 1] = {};\n      }\n\n      var currentCharStyle = {},\n          newLineStyles    = {};\n\n      if (this.styles[lineIndex] && this.styles[lineIndex][charIndex - 1]) {\n        currentCharStyle = this.styles[lineIndex][charIndex - 1];\n      }\n\n      // if there's nothing after cursor,\n      // we clone current char style onto the next (otherwise empty) line\n      if (isEndOfLine) {\n        newLineStyles[0] = clone(currentCharStyle);\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      // otherwise we clone styles of all chars\n      // after cursor onto the next line, from the beginning\n      else {\n        for (var index in this.styles[lineIndex]) {\n          if (parseInt(index, 10) >= charIndex) {\n            newLineStyles[parseInt(index, 10) - charIndex] = this.styles[lineIndex][index];\n            // remove lines from the previous line since they're on a new line now\n            delete this.styles[lineIndex][index];\n          }\n        }\n        this.styles[lineIndex + 1] = newLineStyles;\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = clone(currentLineStyles);\n\n      if (charIndex === 0 && !style) {\n        charIndex = 1;\n      }\n\n      // shift all char styles by 1 forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex];\n\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - 1]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n\n      this.styles[lineIndex][charIndex] =\n        style || clone(currentLineStyles[charIndex - 1]);\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {String} _chars Characters at the location where style is inserted\n     * @param {Boolean} isEndOfLine True if it's end of line\n     * @param {Object} [styleObject] Style to insert\n     */\n    insertStyleObjects: function(_chars, isEndOfLine, styleObject) {\n      // removed shortcircuit over isEmptyStyles\n\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      if (!this._getLineStyle(lineIndex)) {\n        this._setLineStyle(lineIndex, {});\n      }\n\n      if (_chars === '\\n') {\n        this.insertNewlineStyleObject(lineIndex, charIndex, isEndOfLine);\n      }\n      else {\n        this.insertCharStyleObject(lineIndex, charIndex, styleObject);\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          lineIndex      = cursorLocation.lineIndex,\n          charIndex      = cursorLocation.charIndex;\n\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    },\n\n    _getTextOnPreviousLine: function(lIndex) {\n      return this._textLines[lIndex - 1];\n    },\n\n    _removeStyleObject: function(isBeginningOfLine, cursorLocation, lineIndex, charIndex) {\n\n      if (isBeginningOfLine) {\n        var textOnPreviousLine     = this._getTextOnPreviousLine(cursorLocation.lineIndex),\n            newCharIndexOnPrevLine = textOnPreviousLine ? textOnPreviousLine.length : 0;\n\n        if (!this.styles[lineIndex - 1]) {\n          this.styles[lineIndex - 1] = {};\n        }\n        for (charIndex in this.styles[lineIndex]) {\n          this.styles[lineIndex - 1][parseInt(charIndex, 10) + newCharIndexOnPrevLine]\n            = this.styles[lineIndex][charIndex];\n        }\n        this.shiftLineStyles(cursorLocation.lineIndex, -1);\n      }\n      else {\n        var currentLineStyles = this.styles[lineIndex];\n\n        if (currentLineStyles) {\n          delete currentLineStyles[charIndex];\n        }\n        var currentLineStylesCloned = clone(currentLineStyles);\n        // shift all styles by 1 backwards\n        for (var i in currentLineStylesCloned) {\n          var numericIndex = parseInt(i, 10);\n          if (numericIndex >= charIndex && numericIndex !== 0) {\n            currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n    },\n\n    /**\n     * Inserts new line\n     */\n    insertNewline: function() {\n      this.insertChars('\\n');\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown.bind(this));\n  },\n\n  onMouseDown: function(options) {\n\n    this.__newClickTime = +new Date();\n    var newPointer = this.canvas.getPointer(options.e);\n\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    else if (this.isDoubleClick(newPointer)) {\n      this.fire('dblclick', options);\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isDoubleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y && this.__lastIsEditing;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initSelectedHandler();\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('dblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', function(options) {\n      if (!this.editable) {\n        return;\n      }\n      var pointer = this.canvas.getPointer(options.e);\n\n      this.__mousedownX = pointer.x;\n      this.__mousedownY = pointer.y;\n      this.__isMousedown = true;\n\n      if (this.selected) {\n        this.setCursorByClick(options.e);\n      }\n\n      if (this.isEditing) {\n        this.__selectionStartOnMouseDown = this.selectionStart;\n        if (this.selectionStart === this.selectionEnd) {\n          this.abortCursorAnimation();\n        }\n        this.renderCursorOrSelection();\n      }\n    });\n  },\n\n  /**\n   * @private\n   */\n  _isObjectMoved: function(e) {\n    var pointer = this.canvas.getPointer(e);\n\n    return this.__mousedownX !== pointer.x ||\n           this.__mousedownY !== pointer.y;\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', function(options) {\n      this.__isMousedown = false;\n      if (!this.editable || this._isObjectMoved(options.e)) {\n        return;\n      }\n\n      if (this.__lastSelected && !this.__corner) {\n        this.enterEditing(options.e);\n        if (this.selectionStart === this.selectionEnd) {\n          this.initDelayedCursor(true);\n        }\n        else {\n          this.renderCursorOrSelection();\n        }\n      }\n      this.selected = true;\n    });\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    this._fireSelectionChanged();\n    this._updateTextarea();\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        newSelectionStart,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      line = this._textLines[i];\n      height += this._getHeightOfLine(this.ctx, i) * this.scaleY;\n\n      var widthOfLine = this._getLineWidth(this.ctx, i),\n          lineLeftOffset = this._getLineLeftOffset(widthOfLine);\n\n      width = lineLeftOffset * this.scaleX;\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n\n        prevWidth = width;\n\n        width += this._getWidthOfChar(this.ctx, line[j], i, this.flipX ? jlen - j : j) *\n                 this.scaleX;\n\n        if (height <= mouseOffset.y || width <= mouseOffset.x) {\n          charIndex++;\n          continue;\n        }\n\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i, jlen);\n      }\n\n      if (mouseOffset.y < height) {\n        //this happens just on end of lines.\n        return this._getNewSelectionStartFromOffset(\n          mouseOffset, prevWidth, width, charIndex + i - 1, jlen);\n      }\n    }\n\n    // clicked somewhere after all chars, so set at the end\n    if (typeof newSelectionStart === 'undefined') {\n      return this.text.length;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ? 0 : 1,\n        newSelectionStart = index + offset;\n\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this.text.length) {\n      newSelectionStart = this.text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + ';'\n                                        + ' opacity: 0; width: 0px; height: 0px; z-index: -999;';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.cut.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _keysMap: {\n    8:  'removeChars',\n    9:  'exitEditing',\n    27: 'exitEditing',\n    13: 'insertNewline',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n    46: 'forwardDelete'\n  },\n\n  /**\n   * @private\n   */\n  _ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * @private\n   */\n  _ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing) {\n      return;\n    }\n    if (e.keyCode in this._keysMap) {\n      this[this._keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this._ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this._ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.renderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this._ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this._ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.renderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    var offset = this.selectionStart || 0,\n        offsetEnd = this.selectionEnd || 0,\n        textLength = this.text.length,\n        newTextLength = this.hiddenTextarea.value.length,\n        diff, charsToInsert, start;\n    if (newTextLength > textLength) {\n      //we added some character\n      start = this._selectionDirection === 'left' ? offsetEnd : offset;\n      diff = newTextLength - textLength;\n      charsToInsert = this.hiddenTextarea.value.slice(start, start + diff);\n    }\n    else {\n      //we selected a portion of text and then input something else.\n      //Internet explorer does not trigger this else\n      diff = newTextLength - textLength + offsetEnd - offset;\n      charsToInsert = this.hiddenTextarea.value.slice(offset, offset + diff);\n    }\n    this.insertChars(charsToInsert);\n    e.stopPropagation();\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n    this.prevCompositionLength = 0;\n    this.compositionStart = this.selectionStart;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  /**\n   * Composition update\n   */\n  onCompositionUpdate: function(e) {\n    var data = e.data;\n    this.selectionStart = this.compositionStart;\n    this.selectionEnd = this.selectionEnd === this.selectionStart ?\n      this.compositionStart + this.prevCompositionLength : this.selectionEnd;\n    this.insertChars(data, false);\n    this.prevCompositionLength = data.length;\n  },\n\n  /**\n   * Forward delete\n   */\n  forwardDelete: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      if (this.selectionStart === this.text.length) {\n        return;\n      }\n      this.moveCursorRight(e);\n    }\n    this.removeChars(e);\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    var selectedText = this.getSelectedText(),\n        clipboardData = this._getClipboardData(e);\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      clipboardData.setData('text', selectedText);\n    }\n\n    fabric.copiedText = selectedText;\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd);\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function(e) {\n    var copiedText = null,\n        clipboardData = this._getClipboardData(e),\n        useCopiedStyle = true;\n\n    // Check for backward compatibility with old browsers\n    if (clipboardData) {\n      copiedText = clipboardData.getData('text').replace(/\\r/g, '');\n      if (!fabric.copiedTextStyle || fabric.copiedText !== copiedText) {\n        useCopiedStyle = false;\n      }\n    }\n    else {\n      copiedText = fabric.copiedText;\n    }\n\n    if (copiedText) {\n      this.insertChars(copiedText, useCopiedStyle);\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n  },\n\n  /**\n   * Cuts text\n   * @param {Event} e Event object\n   */\n  cut: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      return;\n    }\n\n    this.copy(e);\n    this.removeChars(e);\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        widthBeforeCursor = this._getLineLeftOffset(widthOfLine), _char;\n\n    for (var i = 0, len = textBeforeCursor.length; i < len; i++) {\n      _char = textBeforeCursor[i];\n      widthBeforeCursor += this._getWidthOfChar(this.ctx, _char, lineIndex, i);\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this.text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * find for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var widthOfLine = this._getLineWidth(this.ctx, lineIndex),\n        textOnLine = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(widthOfLine),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        foundMatch;\n\n    for (var j = 0, jlen = textOnLine.length; j < jlen; j++) {\n\n      var _char = textOnLine[j],\n          widthOfChar = this._getWidthOfChar(this.ctx, _char, lineIndex, j);\n\n      widthOfCharsOnLine += widthOfChar;\n\n      if (widthOfCharsOnLine > width) {\n\n        foundMatch = true;\n\n        var leftEdge = widthOfCharsOnLine - widthOfChar,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = textOnLine.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n    ? this.selectionStart + offset\n    : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this.text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters selected by selection\n   * @param {Event} e Event object\n   */\n  removeChars: function(e) {\n    if (this.selectionStart === this.selectionEnd) {\n      this._removeCharsNearCursor(e);\n    }\n    else {\n      this._removeCharsFromTo(this.selectionStart, this.selectionEnd);\n    }\n\n    this.set('dirty', true);\n    this.setSelectionEnd(this.selectionStart);\n\n    this._removeExtraneousStyles();\n\n    this.canvas && this.canvas.renderAll();\n\n    this.setCoords();\n    this.fire('changed');\n    this.canvas && this.canvas.fire('text:changed', { target: this });\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   */\n  _removeCharsNearCursor: function(e) {\n    if (this.selectionStart === 0) {\n      return;\n    }\n    if (e.metaKey) {\n      // remove all till the start of current line\n      var leftLineBoundary = this.findLineBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftLineBoundary, this.selectionStart);\n      this.setSelectionStart(leftLineBoundary);\n    }\n    else if (e.altKey) {\n      // remove all till the start of current word\n      var leftWordBoundary = this.findWordBoundaryLeft(this.selectionStart);\n\n      this._removeCharsFromTo(leftWordBoundary, this.selectionStart);\n      this.setSelectionStart(leftWordBoundary);\n    }\n    else {\n      this._removeSingleCharAndStyle(this.selectionStart);\n      this.setSelectionStart(this.selectionStart - 1);\n    }\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * @private\n     */\n    _setSVGTextLineText: function(lineIndex, textSpans, height, textLeftOffset, textTopOffset, textBgRects) {\n      if (!this._getLineStyle(lineIndex)) {\n        fabric.Text.prototype._setSVGTextLineText.call(this,\n          lineIndex, textSpans, height, textLeftOffset, textTopOffset);\n      }\n      else {\n        this._setSVGTextLineChars(\n          lineIndex, textSpans, height, textLeftOffset, textBgRects);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGTextLineChars: function(lineIndex, textSpans, height, textLeftOffset, textBgRects) {\n\n      var chars = this._textLines[lineIndex],\n          charOffset = 0,\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, lineIndex)) - this.width / 2,\n          lineOffset = this._getSVGLineTopOffset(lineIndex),\n          heightOfLine = this._getHeightOfLine(this.ctx, lineIndex);\n\n      for (var i = 0, len = chars.length; i < len; i++) {\n        var styleDecl = this._getStyleDeclaration(lineIndex, i) || { };\n\n        textSpans.push(\n          this._createTextCharSpan(\n            chars[i], styleDecl, lineLeftOffset, lineOffset.lineTop + lineOffset.offset, charOffset));\n\n        var charWidth = this._getWidthOfChar(this.ctx, chars[i], lineIndex, i);\n\n        if (styleDecl.textBackgroundColor) {\n          textBgRects.push(\n            this._createTextCharBg(\n              styleDecl, lineLeftOffset, lineOffset.lineTop, heightOfLine, charWidth, charOffset));\n        }\n\n        charOffset += charWidth;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this._getHeightOfLine(this.ctx, j);\n      }\n      lastHeight = this._getHeightOfLine(this.ctx, j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharBg: function(styleDecl, lineLeftOffset, lineTopOffset, heightOfLine, charWidth, charOffset) {\n      return [\n        '\\t\\t<rect fill=\"', styleDecl.textBackgroundColor,\n        '\" x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS),\n        '\" y=\"', toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS),\n        '\" width=\"', toFixed(charWidth, NUM_FRACTION_DIGITS),\n        '\" height=\"', toFixed(heightOfLine / this.lineHeight, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n'\n      ].join('');\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, lineLeftOffset, lineTopOffset, charOffset) {\n\n      var fillStyles = this.getSvgStyles.call(fabric.util.object.extend({\n        visible: true,\n        fill: this.fill,\n        stroke: this.stroke,\n        type: 'text',\n        getSvgFilter: fabric.Object.prototype.getSvgFilter\n      }, styleDecl));\n\n      return [\n        '\\t\\t\\t<tspan x=\"', toFixed(lineLeftOffset + charOffset, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(lineTopOffset - this.height / 2, NUM_FRACTION_DIGITS), '\" ',\n          (styleDecl.fontFamily ? 'font-family=\"' + styleDecl.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n          (styleDecl.fontSize ? 'font-size=\"' + styleDecl.fontSize + '\" ' : ''),\n          (styleDecl.fontStyle ? 'font-style=\"' + styleDecl.fontStyle + '\" ' : ''),\n          (styleDecl.fontWeight ? 'font-weight=\"' + styleDecl.fontWeight + '\" ' : ''),\n          (styleDecl.textDecoration ? 'text-decoration=\"' + styleDecl.textDecoration + '\" ' : ''),\n        'style=\"', fillStyles, '\">',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>\\n'\n      ].join('');\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingY: true,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Constructor. Some scaling related property values are forced. Visibility\n     * of controls is also fixed; only the rotation and width controls are\n     * made available.\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Textbox} thisArg\n     */\n    initialize: function(text, options) {\n\n      this.callSuper('initialize', text, options);\n      this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n      this.ctx = this.objectCaching ? this._cacheContext : fabric.util.createCanvasElement().getContext('2d');\n      // add width to this list of props that effect line wrapping.\n      this._dimensionAffectingProps.push('width');\n    },\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @private\n     * @override\n     */\n    _initDimensions: function(ctx) {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      if (!ctx) {\n        ctx = fabric.util.createCanvasElement().getContext('2d');\n        this._setTextStyles(ctx);\n        this.clearContextTop();\n      }\n\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n\n      // wrap lines\n      this._textLines = this._splitTextIntoLines(ctx);\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      // clear cache and re-calculate height\n      this._clearCache();\n      this.height = this._getTextHeight(ctx);\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function() {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        if (this.text[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this.text[charCount] === ' ' && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += this._textLines[i].length;\n        realLineCharCount += this._textLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Boolean} [returnCloneOrEmpty=false]\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex, returnCloneOrEmpty) {\n      if (this._styleMap) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return returnCloneOrEmpty ? { } : null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex, returnCloneOrEmpty);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text that is split into lines\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(ctx, text) {\n      var lines = text.split(this._reNewline), wrapped = [], i;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(ctx, lines[i], i));\n      }\n\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     *\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureText: function(ctx, text, lineIndex, charOffset) {\n      var width = 0;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = text.length; i < len; i++) {\n        width += this._getWidthOfChar(ctx, text[i], lineIndex, i + charOffset);\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {CanvasRenderingContext2D} ctx Context to use for measurements\n     * @param {String} text The string of text to split into lines\n     * @param {Number} lineIndex\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(ctx, text, lineIndex) {\n      var lineWidth        = 0,\n          lines            = [],\n          line             = '',\n          words            = text.split(' '),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing();\n\n      for (var i = 0; i < words.length; i++) {\n        word = words[i];\n        wordWidth = this._measureText(ctx, word, lineIndex, offset);\n\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= this.width && !lineJustStarted) {\n          lines.push(line);\n          line = '';\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted) {\n          line += infix;\n        }\n        line += word;\n\n        infixWidth = this._measureText(ctx, infix, lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && lines.push(line);\n\n      if (largestWordWidth > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace;\n      }\n\n      return lines;\n    },\n    /**\n     * Gets lines of text to render in the Textbox. This function calculates\n     * text wrapping on the fly everytime it is called.\n     * @returns {Array} Array of lines in the Textbox.\n     * @override\n     */\n    _splitTextIntoLines: function(ctx) {\n      ctx = ctx || this.ctx;\n      var originalAlign = this.textAlign;\n      this._styleMap = null;\n      ctx.save();\n      this._setTextStyles(ctx);\n      this.textAlign = 'left';\n      var lines = this._wrapText(ctx, this.text);\n      this.textAlign = originalAlign;\n      ctx.restore();\n      this._textLines = lines;\n      this._styleMap = this._generateStyleMap();\n      return lines;\n    },\n\n    /**\n     * When part of a group, we don't want the Textbox's scale to increase if\n     * the group's increases. That's why we reduce the scale of the Textbox by\n     * the amount that the group's increases. This is to maintain the effective\n     * scale of the Textbox at 1, so that font-size values make sense. Otherwise\n     * the same font-size value would result in different actual size depending\n     * on the value of the scale.\n     * @param {String} key\n     * @param {*} value\n     */\n    setOnGroup: function(key, value) {\n      if (key === 'scaleX') {\n        this.set('scaleX', Math.abs(1 / value));\n        this.set('width', (this.get('width') * value) /\n          (typeof this.__oldScaleX === 'undefined' ? 1 : this.__oldScaleX));\n        this.__oldScaleX = value;\n      }\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start).\n     * Overrides the superclass function to take into account text wrapping.\n     *\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     */\n    get2DCursorLocation: function(selectionStart) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var numLines = this._textLines.length,\n          removed  = 0;\n\n      for (var i = 0; i < numLines; i++) {\n        var line    = this._textLines[i],\n            lineLen = line.length;\n\n        if (selectionStart <= removed + lineLen) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart - removed\n          };\n        }\n\n        removed += lineLen;\n\n        if (this.text[removed] === '\\n' || this.text[removed] === ' ') {\n          removed++;\n        }\n      }\n\n      return {\n        lineIndex: numLines - 1,\n        charIndex: this._textLines[numLines - 1].length\n      };\n    },\n\n    /**\n     * Overrides superclass function and uses text wrapping data to get cursor\n     * boundary offsets instead of the array of chars.\n     * @param {Array} chars Unused\n     * @param {String} typeOfBoundaries Can be 'cursor' or 'selection'\n     * @returns {Object} Object with 'top', 'left', and 'lineLeft' properties set.\n     */\n    _getCursorBoundariesOffsets: function(chars, typeOfBoundaries) {\n      var topOffset      = 0,\n          leftOffset     = 0,\n          cursorLocation = this.get2DCursorLocation(),\n          lineChars      = this._textLines[cursorLocation.lineIndex].split(''),\n          lineLeftOffset = this._getLineLeftOffset(this._getLineWidth(this.ctx, cursorLocation.lineIndex));\n\n      for (var i = 0; i < cursorLocation.charIndex; i++) {\n        leftOffset += this._getWidthOfChar(this.ctx, lineChars[i], cursorLocation.lineIndex, i);\n      }\n\n      for (i = 0; i < cursorLocation.lineIndex; i++) {\n        topOffset += this._getHeightOfLine(this.ctx, i);\n      }\n\n      if (typeOfBoundaries === 'cursor') {\n        topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx, cursorLocation.lineIndex)\n          / this.lineHeight - this.getCurrentCharFontSize(cursorLocation.lineIndex, cursorLocation.charIndex)\n          * (1 - this._fontSizeFraction);\n      }\n\n      return {\n        top: topOffset,\n        left: leftOffset,\n        lineLeft: lineLeftOffset\n      };\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   * @param {Boolean} [forceAsync] Force an async behaviour trying to create pattern first\n   * @return {fabric.Textbox} instance of fabric.Textbox\n   */\n  fabric.Textbox.fromObject = function(object, callback, forceAsync) {\n    return fabric.Object._fromObject('Textbox', object, callback, forceAsync, 'text');\n  };\n\n  /**\n   * Returns the default controls visibility required for Textboxes.\n   * @returns {Object}\n   */\n  fabric.Textbox.getTextboxControlVisibility = function() {\n    return {\n      tl: false,\n      tr: false,\n      br: false,\n      bl: false,\n      ml: true,\n      mt: false,\n      mr: true,\n      mb: false,\n      mtr: true\n    };\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n                                                     lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (t instanceof fabric.Textbox) {\n      var w = t.width * ((localMouse.x / transform.scaleX) / (t.width + t.strokeWidth));\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  /**\n   * Sets controls of this group to the Textbox's special configuration if\n   * one is present in the group. Deletes _controlsVisibility otherwise, so that\n   * it gets initialized to default value at runtime.\n   */\n  fabric.Group.prototype._refreshControlsVisibility = function() {\n    if (typeof fabric.Textbox === 'undefined') {\n      return;\n    }\n    for (var i = this._objects.length; i--;) {\n      if (this._objects[i] instanceof fabric.Textbox) {\n        this.setControlsVisibility(fabric.Textbox.getTextboxControlVisibility());\n        return;\n      }\n    }\n  };\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Object} [style] Style object to insert, if given\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, style) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertCharStyleObject.apply(this, [lineIndex, charIndex, style]);\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Boolean} isEndOfLine True if it's end of line\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, isEndOfLine) {\n      // adjust lineIndex and charIndex\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      fabric.IText.prototype.insertNewlineStyleObject.apply(this, [lineIndex, charIndex, isEndOfLine]);\n    },\n\n    /**\n     * Shifts line styles up or down. This function is slightly different than the one in\n     * itext_behaviour as it takes into account the styleMap.\n     *\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can be -1 or +1\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by 1 upward\n      var clonedStyles = clone(this.styles),\n          map          = this._styleMap[lineIndex];\n\n      // adjust line index\n      lineIndex = map.line;\n\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n      //TODO: evaluate if delete old style lines with offset -1\n    },\n\n    /**\n     * Figure out programatically the text on previous actual line (actual = separated by \\n);\n     *\n     * @param {Number} lIndex\n     * @returns {String}\n     * @private\n     */\n    _getTextOnPreviousLine: function(lIndex) {\n      var textOnPreviousLine = this._textLines[lIndex - 1];\n\n      while (this._styleMap[lIndex - 2] && this._styleMap[lIndex - 2].line === this._styleMap[lIndex - 1].line) {\n        textOnPreviousLine = this._textLines[lIndex - 2] + textOnPreviousLine;\n\n        lIndex--;\n      }\n\n      return textOnPreviousLine;\n    },\n\n    /**\n     * Removes style object\n     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line\n     * @param {Number} [index] Optional index. When not given, current selectionStart is used.\n     */\n    removeStyleObject: function(isBeginningOfLine, index) {\n\n      var cursorLocation = this.get2DCursorLocation(index),\n          map            = this._styleMap[cursorLocation.lineIndex],\n          lineIndex      = map.line,\n          charIndex      = map.offset + cursorLocation.charIndex;\n      this._removeStyleObject(isBeginningOfLine, cursorLocation, lineIndex, charIndex);\n    }\n  });\n})();\n\n\n(function() {\n  var override = fabric.IText.prototype._getNewSelectionStartFromOffset;\n  /**\n   * Overrides the IText implementation and adjusts character index as there is not always a linebreak\n   *\n   * @param {Number} mouseOffset\n   * @param {Number} prevWidth\n   * @param {Number} width\n   * @param {Number} index\n   * @param {Number} jlen\n   * @returns {Number}\n   */\n  fabric.IText.prototype._getNewSelectionStartFromOffset = function(mouseOffset, prevWidth, width, index, jlen) {\n    index = override.call(this, mouseOffset, prevWidth, width, index, jlen);\n\n    // the index passed into the function is padded by the amount of lines from _textLines (to account for \\n)\n    // we need to remove this padding, and pad it by actual lines, and / or spaces that are meant to be there\n    var tmp     = 0,\n        removed = 0;\n\n    // account for removed characters\n    for (var i = 0; i < this._textLines.length; i++) {\n      tmp += this._textLines[i].length;\n\n      if (tmp + removed >= index) {\n        break;\n      }\n\n      if (this.text[tmp + removed] === '\\n' || this.text[tmp + removed] === ' ') {\n        removed++;\n      }\n    }\n\n    return index - i + removed;\n  };\n})();\n\n\n(function() {\n\n  if (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    return;\n  }\n\n  var DOMParser = require('xmldom').DOMParser,\n      URL = require('url'),\n      HTTP = require('http'),\n      HTTPS = require('https'),\n\n      Canvas = require('canvas'),\n      Image = require('canvas').Image;\n\n  /** @private */\n  function request(url, encoding, callback) {\n    var oURL = URL.parse(url);\n\n    // detect if http or https is used\n    if ( !oURL.port ) {\n      oURL.port = ( oURL.protocol.indexOf('https:') === 0 ) ? 443 : 80;\n    }\n\n    // assign request handler based on protocol\n    var reqHandler = (oURL.protocol.indexOf('https:') === 0 ) ? HTTPS : HTTP,\n        req = reqHandler.request({\n          hostname: oURL.hostname,\n          port: oURL.port,\n          path: oURL.path,\n          method: 'GET'\n        }, function(response) {\n          var body = '';\n          if (encoding) {\n            response.setEncoding(encoding);\n          }\n          response.on('end', function () {\n            callback(body);\n          });\n          response.on('data', function (chunk) {\n            if (response.statusCode === 200) {\n              body += chunk;\n            }\n          });\n        });\n\n    req.on('error', function(err) {\n      if (err.errno === process.ECONNREFUSED) {\n        fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);\n      }\n      else {\n        fabric.log(err.message);\n      }\n      callback(null);\n    });\n\n    req.end();\n  }\n\n  /** @private */\n  function requestFs(path, callback) {\n    var fs = require('fs');\n    fs.readFile(path, function (err, data) {\n      if (err) {\n        fabric.log(err);\n        throw err;\n      }\n      else {\n        callback(data);\n      }\n    });\n  }\n\n  fabric.util.loadImage = function(url, callback, context) {\n    function createImageAndCallBack(data) {\n      if (data) {\n        img.src = new Buffer(data, 'binary');\n        // preserving original url, which seems to be lost in node-canvas\n        img._src = url;\n        callback && callback.call(context, img);\n      }\n      else {\n        img = null;\n        callback && callback.call(context, null, true);\n      }\n    }\n    var img = new Image();\n    if (url && (url instanceof Buffer || url.indexOf('data') === 0)) {\n      img.src = img._src = url;\n      callback && callback.call(context, img);\n    }\n    else if (url && url.indexOf('http') !== 0) {\n      requestFs(url, createImageAndCallBack);\n    }\n    else if (url) {\n      request(url, 'binary', createImageAndCallBack);\n    }\n    else {\n      callback && callback.call(context, url);\n    }\n  };\n\n  fabric.loadSVGFromURL = function(url, callback, reviver) {\n    url = url.replace(/^\\n\\s*/, '').replace(/\\?.*$/, '').trim();\n    if (url.indexOf('http') !== 0) {\n      requestFs(url, function(body) {\n        fabric.loadSVGFromString(body.toString(), callback, reviver);\n      });\n    }\n    else {\n      request(url, '', function(body) {\n        fabric.loadSVGFromString(body, callback, reviver);\n      });\n    }\n  };\n\n  fabric.loadSVGFromString = function(string, callback, reviver) {\n    var doc = new DOMParser().parseFromString(string);\n    fabric.parseSVGDocument(doc.documentElement, function(results, options) {\n      callback && callback(results, options);\n    }, reviver);\n  };\n\n  fabric.util.getScript = function(url, callback) {\n    request(url, '', function(body) {\n      // eslint-disable-next-line no-eval\n      eval(body);\n      callback && callback();\n    });\n  };\n\n  // fabric.util.createCanvasElement = function(_, width, height) {\n  //   return new Canvas(width, height);\n  // }\n\n  /**\n   * Only available when running fabric on node.js\n   * @param {Number} width Canvas width\n   * @param {Number} height Canvas height\n   * @param {Object} [options] Options to pass to FabricCanvas.\n   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.\n   * @return {Object} wrapped canvas instance\n   */\n  fabric.createCanvasForNode = function(width, height, options, nodeCanvasOptions) {\n    nodeCanvasOptions = nodeCanvasOptions || options;\n\n    var canvasEl = fabric.document.createElement('canvas'),\n        nodeCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions),\n        nodeCacheCanvas = new Canvas(width || 600, height || 600, nodeCanvasOptions);\n\n    // jsdom doesn't create style on canvas element, so here be temp. workaround\n    canvasEl.style = { };\n\n    canvasEl.width = nodeCanvas.width;\n    canvasEl.height = nodeCanvas.height;\n    options = options || { };\n    options.nodeCanvas = nodeCanvas;\n    options.nodeCacheCanvas = nodeCacheCanvas;\n    var FabricCanvas = fabric.Canvas || fabric.StaticCanvas,\n        fabricCanvas = new FabricCanvas(canvasEl, options);\n    fabricCanvas.nodeCanvas = nodeCanvas;\n    fabricCanvas.nodeCacheCanvas = nodeCacheCanvas;\n    fabricCanvas.contextContainer = nodeCanvas.getContext('2d');\n    fabricCanvas.contextCache = nodeCacheCanvas.getContext('2d');\n    fabricCanvas.Font = Canvas.Font;\n    return fabricCanvas;\n  };\n\n  var originaInitStatic = fabric.StaticCanvas.prototype._initStatic;\n  fabric.StaticCanvas.prototype._initStatic = function(el, options) {\n    el = el || fabric.document.createElement('canvas');\n    this.nodeCanvas = new Canvas(el.width, el.height);\n    this.nodeCacheCanvas = new Canvas(el.width, el.height);\n    originaInitStatic.call(this, el, options);\n    this.contextContainer = this.nodeCanvas.getContext('2d');\n    this.contextCache = this.nodeCacheCanvas.getContext('2d');\n    this.Font = Canvas.Font;\n  };\n\n  /** @ignore */\n  fabric.StaticCanvas.prototype.createPNGStream = function() {\n    return this.nodeCanvas.createPNGStream();\n  };\n\n  fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n    return this.nodeCanvas.createJPEGStream(opts);\n  };\n\n  fabric.StaticCanvas.prototype._initRetinaScaling = function() {\n    if (!this._isRetinaScaling()) {\n      return;\n    }\n\n    this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n    this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n    this.nodeCanvas.width = this.width * fabric.devicePixelRatio;\n    this.nodeCanvas.height = this.height * fabric.devicePixelRatio;\n    this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._initRetinaScaling = fabric.StaticCanvas.prototype._initRetinaScaling;\n  }\n\n  var origSetBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  fabric.StaticCanvas.prototype._setBackstoreDimension = function(prop, value) {\n    origSetBackstoreDimension.call(this, prop, value);\n    this.nodeCanvas[prop] = value;\n    return this;\n  };\n  if (fabric.Canvas) {\n    fabric.Canvas.prototype._setBackstoreDimension = fabric.StaticCanvas.prototype._setBackstoreDimension;\n  }\n\n})();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/fabric/dist/fabric.js\n ** module id = 26\n ** module chunks = 0\n **/","var Stream = require('stream');\nvar Response = require('./response');\nvar Base64 = require('Base64');\nvar inherits = require('inherits');\n\nvar Request = module.exports = function (xhr, params) {\n    var self = this;\n    self.writable = true;\n    self.xhr = xhr;\n    self.body = [];\n    \n    self.uri = (params.protocol || 'http:') + '//'\n        + params.host\n        + (params.port ? ':' + params.port : '')\n        + (params.path || '/')\n    ;\n    \n    if (typeof params.withCredentials === 'undefined') {\n        params.withCredentials = true;\n    }\n\n    try { xhr.withCredentials = params.withCredentials }\n    catch (e) {}\n    \n    if (params.responseType) try { xhr.responseType = params.responseType }\n    catch (e) {}\n    \n    xhr.open(\n        params.method || 'GET',\n        self.uri,\n        true\n    );\n\n    xhr.onerror = function(event) {\n        self.emit('error', new Error('Network error'));\n    };\n\n    self._headers = {};\n    \n    if (params.headers) {\n        var keys = objectKeys(params.headers);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            if (!self.isSafeRequestHeader(key)) continue;\n            var value = params.headers[key];\n            self.setHeader(key, value);\n        }\n    }\n    \n    if (params.auth) {\n        //basic auth\n        this.setHeader('Authorization', 'Basic ' + Base64.btoa(params.auth));\n    }\n\n    var res = new Response;\n    res.on('close', function () {\n        self.emit('close');\n    });\n    \n    res.on('ready', function () {\n        self.emit('response', res);\n    });\n\n    res.on('error', function (err) {\n        self.emit('error', err);\n    });\n    \n    xhr.onreadystatechange = function () {\n        // Fix for IE9 bug\n        // SCRIPT575: Could not complete the operation due to error c00c023f\n        // It happens when a request is aborted, calling the success callback anyway with readyState === 4\n        if (xhr.__aborted) return;\n        res.handle(xhr);\n    };\n};\n\ninherits(Request, Stream);\n\nRequest.prototype.setHeader = function (key, value) {\n    this._headers[key.toLowerCase()] = value\n};\n\nRequest.prototype.getHeader = function (key) {\n    return this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.removeHeader = function (key) {\n    delete this._headers[key.toLowerCase()]\n};\n\nRequest.prototype.write = function (s) {\n    this.body.push(s);\n};\n\nRequest.prototype.destroy = function (s) {\n    this.xhr.__aborted = true;\n    this.xhr.abort();\n    this.emit('close');\n};\n\nRequest.prototype.end = function (s) {\n    if (s !== undefined) this.body.push(s);\n\n    var keys = objectKeys(this._headers);\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = this._headers[key];\n        if (isArray(value)) {\n            for (var j = 0; j < value.length; j++) {\n                this.xhr.setRequestHeader(key, value[j]);\n            }\n        }\n        else this.xhr.setRequestHeader(key, value)\n    }\n\n    if (this.body.length === 0) {\n        this.xhr.send('');\n    }\n    else if (typeof this.body[0] === 'string') {\n        this.xhr.send(this.body.join(''));\n    }\n    else if (isArray(this.body[0])) {\n        var body = [];\n        for (var i = 0; i < this.body.length; i++) {\n            body.push.apply(body, this.body[i]);\n        }\n        this.xhr.send(body);\n    }\n    else if (/Array/.test(Object.prototype.toString.call(this.body[0]))) {\n        var len = 0;\n        for (var i = 0; i < this.body.length; i++) {\n            len += this.body[i].length;\n        }\n        var body = new(this.body[0].constructor)(len);\n        var k = 0;\n        \n        for (var i = 0; i < this.body.length; i++) {\n            var b = this.body[i];\n            for (var j = 0; j < b.length; j++) {\n                body[k++] = b[j];\n            }\n        }\n        this.xhr.send(body);\n    }\n    else if (isXHR2Compatible(this.body[0])) {\n        this.xhr.send(this.body[0]);\n    }\n    else {\n        var body = '';\n        for (var i = 0; i < this.body.length; i++) {\n            body += this.body[i].toString();\n        }\n        this.xhr.send(body);\n    }\n};\n\n// Taken from http://dxr.mozilla.org/mozilla/mozilla-central/content/base/src/nsXMLHttpRequest.cpp.html\nRequest.unsafeHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"cookie\",\n    \"cookie2\",\n    \"content-transfer-encoding\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"user-agent\",\n    \"via\"\n];\n\nRequest.prototype.isSafeRequestHeader = function (headerName) {\n    if (!headerName) return false;\n    return indexOf(Request.unsafeHeaders, headerName.toLowerCase()) === -1;\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar indexOf = function (xs, x) {\n    if (xs.indexOf) return xs.indexOf(x);\n    for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === x) return i;\n    }\n    return -1;\n};\n\nvar isXHR2Compatible = function (obj) {\n    if (typeof Blob !== 'undefined' && obj instanceof Blob) return true;\n    if (typeof ArrayBuffer !== 'undefined' && obj instanceof ArrayBuffer) return true;\n    if (typeof FormData !== 'undefined' && obj instanceof FormData) return true;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/lib/request.js\n ** module id = 27\n ** module chunks = 0\n **/","var Stream = require('stream');\nvar util = require('util');\n\nvar Response = module.exports = function (res) {\n    this.offset = 0;\n    this.readable = true;\n};\n\nutil.inherits(Response, Stream);\n\nvar capable = {\n    streaming : true,\n    status2 : true\n};\n\nfunction parseHeaders (res) {\n    var lines = res.getAllResponseHeaders().split(/\\r?\\n/);\n    var headers = {};\n    for (var i = 0; i < lines.length; i++) {\n        var line = lines[i];\n        if (line === '') continue;\n        \n        var m = line.match(/^([^:]+):\\s*(.*)/);\n        if (m) {\n            var key = m[1].toLowerCase(), value = m[2];\n            \n            if (headers[key] !== undefined) {\n            \n                if (isArray(headers[key])) {\n                    headers[key].push(value);\n                }\n                else {\n                    headers[key] = [ headers[key], value ];\n                }\n            }\n            else {\n                headers[key] = value;\n            }\n        }\n        else {\n            headers[line] = true;\n        }\n    }\n    return headers;\n}\n\nResponse.prototype.getResponse = function (xhr) {\n    var respType = String(xhr.responseType).toLowerCase();\n    if (respType === 'blob') return xhr.responseBlob || xhr.response;\n    if (respType === 'arraybuffer') return xhr.response;\n    return xhr.responseText;\n}\n\nResponse.prototype.getHeader = function (key) {\n    return this.headers[key.toLowerCase()];\n};\n\nResponse.prototype.handle = function (res) {\n    if (res.readyState === 2 && capable.status2) {\n        try {\n            this.statusCode = res.status;\n            this.headers = parseHeaders(res);\n        }\n        catch (err) {\n            capable.status2 = false;\n        }\n        \n        if (capable.status2) {\n            this.emit('ready');\n        }\n    }\n    else if (capable.streaming && res.readyState === 3) {\n        try {\n            if (!this.statusCode) {\n                this.statusCode = res.status;\n                this.headers = parseHeaders(res);\n                this.emit('ready');\n            }\n        }\n        catch (err) {}\n        \n        try {\n            this._emitData(res);\n        }\n        catch (err) {\n            capable.streaming = false;\n        }\n    }\n    else if (res.readyState === 4) {\n        if (!this.statusCode) {\n            this.statusCode = res.status;\n            this.emit('ready');\n        }\n        this._emitData(res);\n        \n        if (res.error) {\n            this.emit('error', this.getResponse(res));\n        }\n        else this.emit('end');\n        \n        this.emit('close');\n    }\n};\n\nResponse.prototype._emitData = function (res) {\n    var respBody = this.getResponse(res);\n    if (respBody.toString().match(/ArrayBuffer/)) {\n        this.emit('data', new Uint8Array(respBody, this.offset));\n        this.offset = respBody.byteLength;\n        return;\n    }\n    if (respBody.length > this.offset) {\n        this.emit('data', respBody.slice(this.offset));\n        this.offset = respBody.length;\n    }\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/http-browserify/lib/response.js\n ** module id = 28\n ** module chunks = 0\n **/","var http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    return http.request.call(this, params, cb);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/https-browserify/index.js\n ** module id = 29\n ** module chunks = 0\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ieee754/index.js\n ** module id = 30\n ** module chunks = 0\n **/","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/isarray/index.js\n ** module id = 31\n ** module chunks = 0\n **/","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-assign/index.js\n ** module id = 32\n ** module chunks = 0\n **/","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/lib/es6-extensions.js\n ** module id = 33\n ** module chunks = 0\n **/","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/promise/lib/rejection-tracking.js\n ** module id = 34\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/decode.js\n ** module id = 35\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/encode.js\n ** module id = 36\n ** module chunks = 0\n **/","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/querystring/index.js\n ** module id = 37\n ** module chunks = 0\n **/","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/isarray/index.js\n ** module id = 38\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_duplex.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/duplex.js\n ** module id = 39\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_passthrough.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/passthrough.js\n ** module id = 40\n ** module chunks = 0\n **/","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = require('stream');\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nif (!process.browser && process.env.READABLE_STREAM === 'disable') {\n  module.exports = require('stream');\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/readable.js\n ** module id = 41\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_transform.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/transform.js\n ** module id = 42\n ** module chunks = 0\n **/","module.exports = require(\"./lib/_stream_writable.js\")\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/stream-browserify/~/readable-stream/writable.js\n ** module id = 43\n ** module chunks = 0\n **/","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/url/~/punycode/punycode.js\n ** module id = 44\n ** module chunks = 0\n **/","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/util/support/isBufferBrowser.js\n ** module id = 46\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 47\n ** module chunks = 0\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 48\n ** module chunks = 0\n **/"],"sourceRoot":""}