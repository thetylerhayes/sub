{"version":3,"sources":["webpack:///bot.js","webpack:///webpack/bootstrap af06a34f843085c3c41c","webpack:///./src/bot.js","webpack:///external \"crypto\""],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","Crypto","NotifyBot","sdk","this","onMessage","bind","randomChoices","user_state","_this","channel_name","twitch_name","username","choices","win","data","color","msgId","months","sendData","totalCoins","addPoints","then","sendWhisper","randn","randomBytes","toString","require"],"mappings":"AAAAA,OAAOC,QACE,SAAUC,GCGnB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAH,OAGA,IAAAD,GAAAK,EAAAD,IACAH,WACAK,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAR,EAAAC,QAAAD,IAAAC,QAAAE,GAGAH,EAAAO,QAAA,EAGAP,EAAAC,QAvBA,GAAAI,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDOM,SAASH,EAAQC,EAASE,GAE/B,YAQA,SAASS,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHC,OAAOC,eAAehB,EAAS,cAC7BiB,OAAO,GAGT,IAAIC,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMZ,OAAOC,eAAeI,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUX,EAAagB,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBN,EAAYkB,UAAWF,GAAiBC,GAAaX,EAAiBN,EAAaiB,GAAqBjB,MErD3hBmB,EAAS9B,EAAQ,GAEjB+B,EFyDW,WExDf,QAAAA,GAAYC,GAAKvB,EAAAwB,KAAAF,GACfE,KAAKC,UAAYD,KAAKC,UAAUC,KAAKF,MACrCA,KAAKG,cAAgBH,KAAKG,cAAcD,KAAKF,MAC7CA,KAAKD,IAAMA,EF+GZ,MAjDAhB,GAAae,IACXL,IAAK,iBACLX,MAAO,SE7DKsB,GAAY,GAAAC,GAAAL,KACnBM,EAAeN,KAAKD,IAAIO,aACxBC,EAAcH,EAAWI,SAEzBC,GAAW,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,QACnFC,EAAMV,KAAKG,cAAcM,GAEzBE,GACJH,SAAUJ,EAAWI,SACrBI,MAAOR,EAAWQ,MAClBC,MAAOT,EAAW,WAAa,KAC/BU,OAAyC,KAAjCV,EAAW,oBACnBM,IAAKA,EAGPV,MAAKD,IAAIgB,SAAST,EAAcC,EAAa,GAAG,EAAMI,EAEtD,IAAIK,GAAaN,CACC,UAAfM,IACDA,EAAa,KAEZZ,EAAW,sBACZY,GAAcZ,EAAW,qBAE3BJ,KAAKD,IAAIkB,UAAUV,EAAYS,GAAYE,KAAK,WAC9Cb,EAAKN,IAAIoB,YAAYZ,EAArB,WAA6CS,EAA7C,sEFuEDvB,IAAK,gBACLX,MAAO,SElEI2B,GACZ,GAAIW,GAAQ,IAEZ,GACEA,GAAQvB,EAAOwB,YAAY,GAAG,GAAGC,iBAC1BF,GAAU,IAAO,IAAMX,EAAQrB,OAExC,OAAOqB,GAAQW,EAAQX,EAAQrB,YFsEzBU,IAGTjC,cErEciC,GF6ET,SAASlC,EAAQC,GGhIvBD,EAAAC,QAAA0D,QAAA","file":"bot.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Crypto = __webpack_require__(1);\n\t\n\tvar NotifyBot = function () {\n\t  function NotifyBot(sdk) {\n\t    _classCallCheck(this, NotifyBot);\n\t\n\t    this.onMessage = this.onMessage.bind(this);\n\t    this.randomChoices = this.randomChoices.bind(this);\n\t    this.sdk = sdk;\n\t  }\n\t\n\t  _createClass(NotifyBot, [{\n\t    key: 'onSubscription',\n\t    value: function onSubscription(user_state) {\n\t      var _this = this;\n\t\n\t      var channel_name = this.sdk.channel_name;\n\t      var twitch_name = user_state.username;\n\t\n\t      var choices = [50, 50, 50, 50, 100, 100, 100, 100, 100, 100, 200, 200, 200, 200, 1500, 'jack'];\n\t      var win = this.randomChoices(choices);\n\t\n\t      var data = {\n\t        username: user_state.username,\n\t        color: user_state.color,\n\t        msgId: user_state['msg-id'] || null,\n\t        months: user_state['msg-param-months'] | null,\n\t        win: win\n\t      };\n\t\n\t      this.sdk.sendData(channel_name, twitch_name, 0, true, data);\n\t\n\t      var totalCoins = win;\n\t      if (totalCoins === 'jack') {\n\t        totalCoins = 5000;\n\t      }\n\t      if (user_state['msg-param-months']) {\n\t        totalCoins *= user_state['msg-param-months'];\n\t      }\n\t      this.sdk.addPoints(twitch_name, totalCoins).then(function () {\n\t        _this.sdk.sendWhisper(twitch_name, 'You won ' + totalCoins + ' coins in the coin spin! They have been added to your wallet.');\n\t      });\n\t    }\n\t\n\t    // choices = array of choices to be selected from.\n\t    // input: [100, 200, 305, 404, 505], returns: 305\n\t\n\t  }, {\n\t    key: 'randomChoices',\n\t    value: function randomChoices(choices) {\n\t      var randn = null;\n\t\n\t      do {\n\t        randn = Crypto.randomBytes(1)[0].toString(); // 0 - 255\n\t      } while (randn >= 255 - 255 % choices.length); // kill off the bias\n\t\n\t      return choices[randn % choices.length];\n\t    }\n\t  }]);\n\t\n\t  return NotifyBot;\n\t}();\n\t\n\texports.default = NotifyBot;\n\t//Export this for webpack\n\t\n\t\n\t/*** EXPORTS FROM exports-loader ***/\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"crypto\");\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bot.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap af06a34f843085c3c41c\n **/","const Crypto = require('crypto');\n\nclass NotifyBot {\n  constructor(sdk) {\n    this.onMessage = this.onMessage.bind(this);\n    this.randomChoices = this.randomChoices.bind(this);\n    this.sdk = sdk; \n  }\n\n  onSubscription(user_state) {\n    const channel_name = this.sdk.channel_name;\n    const twitch_name = user_state.username;\n\n    const choices = [50, 50, 50, 50, 100, 100, 100, 100, 100, 100, 200, 200, 200, 200, 1500, 'jack'];\n    const win = this.randomChoices(choices);\n\n    const data = {\n      username: user_state.username,\n      color: user_state.color,\n      msgId: user_state['msg-id'] || null,\n      months: user_state['msg-param-months'] | null,\n      win: win,\n    };\n\n    this.sdk.sendData(channel_name, twitch_name, 0, true, data);\n\n    let totalCoins = win;\n    if(totalCoins === 'jack'){\n      totalCoins = 5000;\n    }\n    if(user_state['msg-param-months']) {\n      totalCoins *= user_state['msg-param-months'];\n    }\n    this.sdk.addPoints(twitch_name,totalCoins).then(()=>{\n      this.sdk.sendWhisper(twitch_name, `You won ${totalCoins} coins in the coin spin! They have been added to your wallet.`);\n    })\n  }\n\n  // choices = array of choices to be selected from.\n  // input: [100, 200, 305, 404, 505], returns: 305\n  randomChoices(choices) { \n    let randn = null;\n\n    do {\n      randn = Crypto.randomBytes(1)[0].toString(); // 0 - 255\n    } while (randn >= (255 - (255 % choices.length))); // kill off the bias\n\n    return choices[randn % choices.length];\n  }\n}\n\nexport default NotifyBot;\n//Export this for webpack\n\n\n/*** EXPORTS FROM exports-loader ***/\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/bot.js\n **/","module.exports = require(\"crypto\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"crypto\"\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}